2020-06-28 16:48:35.470 INFO  (main) [   ] o.e.j.u.log Logging initialized @1883ms to org.eclipse.jetty.util.log.Slf4jLog
2020-06-28 16:48:35.777 WARN  (main) [   ] o.e.j.s.AbstractConnector Ignoring deprecated socket close linger time
2020-06-28 16:48:35.788 INFO  (main) [   ] o.e.j.s.Server jetty-9.4.14.v20181114; built: 2018-11-14T21:20:31.478Z; git: c4550056e785fb5665914545889f21dc136ad9e6; jvm 1.8.0_251-b08
2020-06-28 16:48:35.830 INFO  (main) [   ] o.e.j.d.p.ScanningAppProvider Deployment monitor [file:///C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/server/contexts/] at interval 0
2020-06-28 16:48:37.082 INFO  (main) [   ] o.e.j.w.StandardDescriptorProcessor NO JSP Support for /solr, did not find org.apache.jasper.servlet.JspServlet
2020-06-28 16:48:37.125 INFO  (main) [   ] o.e.j.s.session DefaultSessionIdManager workerName=node0
2020-06-28 16:48:37.125 INFO  (main) [   ] o.e.j.s.session No SessionScavenger set, using defaults
2020-06-28 16:48:37.127 INFO  (main) [   ] o.e.j.s.session node0 Scavenging every 660000ms
2020-06-28 16:48:37.188 INFO  (main) [   ] o.a.s.u.c.SSLCredentialProviderFactory Processing SSL Credential Provider chain: env;sysprop
2020-06-28 16:48:37.217 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter Using logger factory org.apache.logging.slf4j.Log4jLoggerFactory
2020-06-28 16:48:37.221 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter  ___      _       Welcome to Apache Solr™ version 8.0.0
2020-06-28 16:48:37.221 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter / __| ___| |_ _   Starting in standalone mode on port 8983
2020-06-28 16:48:37.221 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter \__ \/ _ \ | '_|  Install dir: C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0
2020-06-28 16:48:37.222 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter |___/\___/_|_|    Start time: 2020-06-28T16:48:37.222Z
2020-06-28 16:48:37.242 INFO  (main) [   ] o.a.s.c.SolrResourceLoader Using system property solr.solr.home: C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr
2020-06-28 16:48:37.248 INFO  (main) [   ] o.a.s.c.SolrXmlConfig Loading container configuration from C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr\solr.xml
2020-06-28 16:48:37.327 INFO  (main) [   ] o.a.s.c.SolrXmlConfig MBean server found: com.sun.jmx.mbeanserver.JmxMBeanServer@797badd3, but no JMX reporters were configured - adding default JMX reporter.
2020-06-28 16:48:39.026 INFO  (main) [   ] o.a.s.c.SolrResourceLoader [null] Added 1 libs to classloader, from paths: [/C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/server/solr/lib]
2020-06-28 16:48:39.337 INFO  (main) [   ] o.a.s.h.c.HttpShardHandlerFactory Host whitelist initialized: WhitelistHostChecker [whitelistHosts=null, whitelistHostCheckingEnabled=true]
2020-06-28 16:48:40.347 WARN  (main) [   ] o.e.j.u.s.S.config No Client EndPointIdentificationAlgorithm configured for SslContextFactory@1755e85b[provider=null,keyStore=null,trustStore=null]
2020-06-28 16:48:40.480 WARN  (main) [   ] o.e.j.u.s.S.config No Client EndPointIdentificationAlgorithm configured for SslContextFactory@5ad10c1a[provider=null,keyStore=null,trustStore=null]
2020-06-28 16:48:45.613 INFO  (main) [   ] o.a.s.c.TransientSolrCoreCacheDefault Allocating transient cache for 2147483647 transient cores
2020-06-28 16:48:45.615 INFO  (main) [   ] o.a.s.h.a.MetricsHistoryHandler No .system collection, keeping metrics history in memory.
2020-06-28 16:48:45.704 INFO  (main) [   ] o.a.s.m.r.SolrJmxReporter JMX monitoring for 'solr.node' (registry 'solr.node') enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@797badd3
2020-06-28 16:48:45.705 INFO  (main) [   ] o.a.s.m.r.SolrJmxReporter JMX monitoring for 'solr.jvm' (registry 'solr.jvm') enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@797badd3
2020-06-28 16:48:45.713 INFO  (main) [   ] o.a.s.m.r.SolrJmxReporter JMX monitoring for 'solr.jetty' (registry 'solr.jetty') enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@797badd3
2020-06-28 16:48:45.762 INFO  (main) [   ] o.a.s.c.CorePropertiesLocator Found 1 core definitions underneath C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr
2020-06-28 16:48:45.763 INFO  (main) [   ] o.a.s.c.CorePropertiesLocator Cores are: [FileCollection]
2020-06-28 16:48:45.861 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.c.SolrResourceLoader [FileCollection] Added 103 libs to classloader, from paths: [/C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/contrib/clustering/lib, /C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/contrib/extraction/lib, /C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/contrib/langid/lib, /C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/contrib/velocity/lib, /C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/dist]
2020-06-28 16:48:46.026 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.c.SolrConfig Using Lucene MatchVersion: 8.0.0
2020-06-28 16:48:46.325 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.s.IndexSchema [FileCollection] Schema name=default-config
2020-06-28 16:48:47.067 INFO  (main) [   ] o.e.j.s.h.ContextHandler Started o.e.j.w.WebAppContext@610f7aa{/solr,file:///C:/Users/moham/Desktop/Mini_Projet/Search_Engine_Solr/solr-8.0.0/server/solr-webapp/webapp/,AVAILABLE}{C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server/solr-webapp/webapp}
2020-06-28 16:48:47.084 INFO  (main) [   ] o.e.j.s.AbstractConnector Started ServerConnector@182b435b{HTTP/1.1,[http/1.1, h2c]}{0.0.0.0:8983}
2020-06-28 16:48:47.084 INFO  (main) [   ] o.e.j.s.Server Started @13503ms
2020-06-28 16:48:47.196 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.s.IndexSchema Loaded schema default-config/1.6 with uniqueid field id
2020-06-28 16:48:47.323 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.c.CoreContainer Creating SolrCore 'FileCollection' using configuration from instancedir C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr\FileCollection, trusted=true
2020-06-28 16:48:47.364 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.m.r.SolrJmxReporter JMX monitoring for 'solr.core.FileCollection' (registry 'solr.core.FileCollection') enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@797badd3
2020-06-28 16:48:47.388 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.c.SolrCore [[FileCollection] ] Opening new SolrCore at [C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr\FileCollection], dataDir=[C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr\FileCollection\data\]
2020-06-28 16:48:47.453 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.r.XSLTResponseWriter xsltCacheLifetimeSeconds=5
2020-06-28 16:48:47.544 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json} status=0 QTime=65
2020-06-28 16:48:53.102 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.u.UpdateHandler Using UpdateLog implementation: org.apache.solr.update.UpdateLog
2020-06-28 16:48:53.102 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.u.UpdateLog Initializing UpdateLog: dataDir= defaultSyncLevel=FLUSH numRecordsToKeep=100 maxNumLogsToKeep=10 numVersionBuckets=65536
2020-06-28 16:48:53.241 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.u.CommitTracker Hard AutoCommit: if uncommitted for 15000ms; 
2020-06-28 16:48:53.241 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.u.CommitTracker Soft AutoCommit: disabled
2020-06-28 16:48:53.507 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.s.SolrIndexSearcher Opening [Searcher@63da02c6[FileCollection] main]
2020-06-28 16:48:53.522 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.r.ManagedResourceStorage File-based storage initialized to use dir: C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server\solr\FileCollection\conf
2020-06-28 16:48:53.562 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.h.c.SpellCheckComponent Initializing spell checkers
2020-06-28 16:48:53.581 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.s.DirectSolrSpellChecker init: {name=default,field=_text_,classname=solr.DirectSolrSpellChecker,distanceMeasure=internal,accuracy=0.5,maxEdits=2,minPrefix=1,maxInspections=5,minQueryLength=4,maxQueryFrequency=0.01}
2020-06-28 16:48:53.609 INFO  (coreLoadExecutor-9-thread-1) [   x:FileCollection] o.a.s.h.ReplicationHandler Commits will be reserved for 10000ms.
2020-06-28 16:48:53.638 INFO  (searcherExecutor-10-thread-1-processing-x:FileCollection) [   x:FileCollection] o.a.s.c.QuerySenderListener QuerySenderListener sending requests to Searcher@63da02c6[FileCollection] main{ExitableDirectoryReader(UninvertingDirectoryReader(Uninverting(_s8(8.0.0):C8:[diagnostics={java.runtime.version=1.8.0_251-b08, java.vendor=Oracle Corporation, java.version=1.8.0_251, java.vm.version=25.251-b08, lucene.version=8.0.0, os=Windows 10, os.arch=amd64, os.version=10.0, source=flush, timestamp=1593362631687}]:[attributes={Lucene50StoredFieldsFormat.mode=BEST_SPEED}])))}
2020-06-28 16:48:53.638 INFO  (searcherExecutor-10-thread-1-processing-x:FileCollection) [   x:FileCollection] o.a.s.c.QuerySenderListener QuerySenderListener done.
2020-06-28 16:48:53.639 INFO  (searcherExecutor-10-thread-1-processing-x:FileCollection) [   x:FileCollection] o.a.s.h.c.SpellCheckComponent Loading spell index for spellchecker: default
2020-06-28 16:48:53.646 INFO  (searcherExecutor-10-thread-1-processing-x:FileCollection) [   x:FileCollection] o.a.s.c.SolrCore [FileCollection] Registered new searcher Searcher@63da02c6[FileCollection] main{ExitableDirectoryReader(UninvertingDirectoryReader(Uninverting(_s8(8.0.0):C8:[diagnostics={java.runtime.version=1.8.0_251-b08, java.vendor=Oracle Corporation, java.version=1.8.0_251, java.vm.version=25.251-b08, lucene.version=8.0.0, os=Windows 10, os.arch=amd64, os.version=10.0, source=flush, timestamp=1593362631687}]:[attributes={Lucene50StoredFieldsFormat.mode=BEST_SPEED}])))}
2020-06-28 16:48:53.931 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/mbeans params={cat=QUERY&wt=json&_=1593362622148} status=0 QTime=3
2020-06-28 16:48:53.942 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362618301} status=0 QTime=1
2020-06-28 16:48:53.977 INFO  (qtp349420578-15) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362618302} status=0 QTime=48
2020-06-28 16:48:54.818 INFO  (qtp349420578-19) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/mbeans params={cat=QUERY&wt=json&_=1593362622148} status=0 QTime=0
2020-06-28 16:48:54.836 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/dataimport params={indent=on&wt=json&command=show-config&_=1593362622148} status=0 QTime=16
2020-06-28 16:48:54.838 INFO  (qtp349420578-22) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362618301} status=0 QTime=1
2020-06-28 16:48:54.877 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/dataimport params={indent=on&wt=json&command=status&_=1593362622148} status=0 QTime=0
2020-06-28 16:48:54.889 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362618302} status=0 QTime=65
2020-06-28 16:48:59.546 INFO  (qtp349420578-22) [   x:FileCollection] o.a.s.h.d.DataImporter Loading DIH Configuration: db-data-config.xml
2020-06-28 16:48:59.560 INFO  (qtp349420578-22) [   x:FileCollection] o.a.s.h.d.c.DIHConfiguration id is a required field in SolrSchema . But not found in DataConfig
2020-06-28 16:48:59.560 INFO  (qtp349420578-22) [   x:FileCollection] o.a.s.h.d.DataImporter Data Configuration loaded successfully
2020-06-28 16:48:59.639 INFO  (Thread-14) [   ] o.a.s.h.d.DataImporter Starting Full Import
2020-06-28 16:48:59.641 INFO  (qtp349420578-22) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/dataimport params={command=full-import} status=0 QTime=96
2020-06-28 16:48:59.674 INFO  (Thread-14) [   ] o.a.s.h.d.SimplePropertiesWriter Read dataimport.properties
2020-06-28 16:48:59.943 INFO  (Thread-14) [   ] o.a.s.s.SolrIndexSearcher Opening [Searcher@7386a9a8[FileCollection] realtime]
2020-06-28 16:49:00.019 INFO  (Thread-14) [   ] o.a.s.h.d.JdbcDataSource Creating a connection for entity search with URL: jdbc:mysql://localhost:3306/laravel?serverTimezone=UTC
2020-06-28 16:49:00.372 INFO  (Thread-14) [   ] o.a.s.h.d.JdbcDataSource Time taken for getConnection(): 353
2020-06-28 16:49:00.414 INFO  (Thread-14) [   ] o.a.s.h.d.JdbcDataSource Creating a connection for entity user with URL: jdbc:mysql://localhost:3306/laravel?serverTimezone=UTC
2020-06-28 16:49:00.419 INFO  (Thread-14) [   ] o.a.s.h.d.JdbcDataSource Time taken for getConnection(): 4
2020-06-28 16:49:02.831 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=RAPPORT DE STAGE.pdf, description=rapport stage sap abap, date_up=2020-06-27 05:33:22.0, id=1, title=rapport, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/RAPPORT DE STAGE.pdf, user_name=Zidani Mohamed, text=
 

 

 

 

RAPPORT DE 

STAGE : 
Découverte de l’environnement de développement SAP 

 

 

 

 

? Réalisé par :                                                      

? ZIDANI Mohamed   

 

? Encadré par :                                                      

? Mme ABDALLAOUI MAAN Kawtar 

? Mr KABAB Cherif                                       



2 
 

Remerciement : 

 

Je tiens à remercier toutes les personnes qui ont contribué au succès de 

mon stage. 

Tout d’abord, je tiens à remercier vivement l’Office National de 

l’Electricité et de l’Eau potable de m’avoir accueilli pour effectuer ce 

stage, m’offrant ainsi la possibilité d’acquérir une expérience 

professionnelle très enrichissante. 

Je tiens à exprimer également ma profonde reconnaissance à Mr KABAB 

Cherif qui m’a encadré durant ce stage, pour le temps qu'il m‘a consacré 

tout au long de cette période, en répondant à toutes mes interrogations. 

Je présente aussi mes sincères reconnaissances et gratitude à Mme 

ABDALLAOUI MAAN Kawtar. 

  



3 
 

Table des matières 
 

Introduction : ........................................................................................................................................... 4 

Présentation de l’ONE :........................................................................................................................... 5 

1. Aperçu historique : ...................................................................................................................... 5 

2. Missions et objectifs de l’ONE : ................................................................................................. 5 

3. Activités de l’ONE : .................................................................................................................... 6 

4. Moyens humains : ....................................................................................................................... 8 

4.1. Organigramme fonctionnel de l’office : .............................................................................. 8 

4.2. Evolution de l’effectif : ....................................................................................................... 8 

4.3. Formation : .......................................................................................................................... 8 

Système d’information SAP : .................................................................................................................. 9 

1. Définition SAP : .......................................................................................................................... 9 

2. Présentation Générale des ERP : ................................................................................................10 

3. Engagement SAP : .....................................................................................................................13 

4. mySAP.com Suite logicielle e-business : ...................................................................................13 

5. Modernisation du processus de facturation de l’ONEE avec SAP : ..........................................14 

ABAP Workbench : ...............................................................................................................................15 

1. Définition ABAP : ......................................................................................................................15 

2. Composants du langage : ............................................................................................................15 

3. Déroulement du programme dans un programme ABAP : ........................................................16 

3.1. Architecture client / serveur : .............................................................................................16 

3.2. Vue orientée utilisateur : ....................................................................................................17 

3.3. Déroulement du programme : que voit l'utilisateur : ..........................................................18 

3.4. Vue orientée utilisateur : ....................................................................................................19 

4. Repository et Workbench : .........................................................................................................19 

4.1. Repository R/3 : .................................................................................................................19 

4.2. Outils de ABAP Workbench : ............................................................................................20 

5. Programmation orientée objet : ..................................................................................................21 

5.1. Présentation des objets : .....................................................................................................21 

5.2. Modèle de programmation orientée objet : ........................................................................22 

5.3. Avantages de l'approche orientée objet : ............................................................................22 

5.4. Avantages de l'approche orientée objet : ............................................................................23 

Conclusion : ...........................................................................................................................................24 



Introduction : 
 

Du 15 Juillet 2019 au 14 Août 2019, j’ai effectué un stage d’observation au sein de 

l’Office National de l’Électricité et de l’Eau potable (située à Casablanca). Au cours de ce stage 

au département développement, j’ai pu m’intéresser à la programmation en SAP. 

Plus largement, ce stage a été l’opportunité pour moi découvrir la réalité du monde du travail 

et aussi les difficultés du secteur informatique. 

Au-delà d’enrichir mes connaissances informatiques, ce stage m’a permis de comprendre dans 

quelle mesure on peut avoir d’expérience dans une grandes établissement. 

Ce rapport, après une présentation de l’entreprise en première partie, explicitera les 

différentes tâches que j’ai effectuées, puis démontrera leur utilité en les positionnant au cœur 

de la gestion courante de l’ONEE.  



5 
 

Présentation de l’ONE : 
1. Aperçu historique :  

L’ONE est un établissement public à caractère industriel et commercial, doté de la 

personnalité civile et de l’autonomie financière placé sous la tutelle administrative et technique 

du ministère de l’énergie et des mines et investi depuis sa création en 1963 à l’exclusivité de la 

production et le transport de l’énergie électrique.  

Il assure la distribution de l’énergie électrique dans plusieurs provinces du royaume 

ainsi au milieu rural. Les droits et obligations de l’office sont définis dans un cahier de charge 

approuvé par décret, lequel définit les conditions techniques administratives et financières 

relatives à l’exploitation des ouvrages de production de transport et e distribution de 

l’électricité.  

2. Missions et objectifs de l’ONE :  
Les missions de l’ONE consistent à :  

• Répondre aux besoins du pays en énergie électrique.  

• Diriger et développer le réseau du transport.  

• Planifier, augmenter et généraliser l’électrification rurale.  

• Œuvrer pour la promotion et le développement des énergies renouvelables.  

• Gérer la demande globale de l’énergie électrique.  

Les objectifs de l’ONE sont :  

• Contenter dans les meilleures techniques et économiques la progression de la demande 

en énergie sans cesse croissante ;  

• Diminuer les tarifs : moyenne tension et haute tension pour atteindre des prix de 

l’énergie électrique compatibles avec les marchés concurrentiels du Maroc;  

• Assurer directement au meilleur coût la couverture financière des programmes 

d’investissements de plus en plus lourds et indispensables au développement de 

l’économie du pays.  

 

 



6 
 

3. Activités de l’ONE :  
Les activités industrielles de l’ONE comportent, la production de l’énergie électrique, son 

transport et puis sa distribution.  

 

Figure 1: Activités de l’ONE 

? Production :  
Pour répondre aux besoins du pays en énergie électrique, l’ONE maintient une activité 

continue en matière d’études et de réalisation d’ouvrages de production.  

On distingue trois modes de production :  

• La production hydraulique : elle est basée sur les apports d’eau aux barrages 

hydroélectrique. Elle est donc dépendante de la pluviométrie annuelle. Cela justifie la 

baisse de ce mode de production à cause de la sécheresse qu’a connu le MAROC ces 

dernières années. 

• La production thermique : la production thermique reste la principale source de production 

de l’énergie électrique. Cependant elle reste fortement influencée par les fluctuations des 

prix des combustibles sur le marché international.  

• La gestion de la production durant les dernières années a été marquée par un déficit 

hydraulique dû à la sécheresse. Et par la flambée du prix des combustibles afin de faire face 

à cette situation, l’office s’est vu confronté au développement d’un troisième mode de 

production basée sur les énergies renouvelables, qui se compose essentiellement des parcs 

éoliens et stations thermos-solaires.  

 



7 
 

? Transport :  
Au niveau du transport de l’énergie électrique les principales missions de l’office se résument 

comme suit :  

• Développer et renforcer le réseau de transport en vue d’assurer le transport de l’énergie 

électrique des centres d’approvisionnement, vers les centres de consommation de transit de 

la puissance ;  

• Assurer la sécurité d’alimentation de la clientèle.  

• Suite au développement des réseaux de transport, compte tenu de l’augmentation de la 

consommation et à la vue de gérer d’une façon efficace et rationnelle les moyens de 

production et de transport l’ONE s’est équipé depuis 1986 d’un système de conduite des 

réseaux appelé le Dispatching national dont la principale fonction est :  

• Aider à la décision à travers l’utilisation d’un ensemble d’équipements et de programmes 

informatiques ;  

• Conduire plus facilement les installations de production et de transport par le contrôle et la 

surveillance d’un certain nombre de grandeurs électriques : transits sur les lignes, tensions, 

etc.  

• Etudes prévisionnelles de production et de réseau à court et moyen terme, ce système arrive 

actuellement à la limite de ses possibilités et les projets de renouvellement sont en cours 

d’exécution.  

 

? Distribution :  
La distribution de l’énergie électrique est assurée :  

Soit directement par l’ONE, notamment en zone rurale et dans plusieurs centres urbains ;  

Soit par les régies municipales ou intercommunales, placées sous la tutelle du ministère de 

l’intérieure pour les grands centres urbains.  
 
 



8 
 

4. Moyens humains :  

4.1. Organigramme fonctionnel de l’office : 

 
Figure 2:Organigramme fonctionnel de l’office. 

4.2. Evolution de l’effectif :  
Poursuivant sa tendance baissière entamée depuis 1994 dans le cadre de l’action d’amélioration et 

de renforcement de la productivité du personnel, l’effectif du personnel s’est établi au 31décembre 

2011 à 8441 agents. Réparti par collège, cet effectif est composé de 19% d’agents d’exécution, 57% 

d’agents de maîtrise et 23% de cadres.  

4.3. Formation : 
Les plans de formation et de perfectionnement du personnel s’inscrivent dans une politique globale 

de gestion des ressources humaines. Celle-ci est établie à partir de la stratégie de l’ONE en tenant 

compte des besoins spécifiques des unités et du personnel.  

L’office maintient toujours ses efforts pour améliorer la productivité et la qualification du personnel 

par l’intensification du programme de formation qui a couté 36MDH. 



9 
 

Système d’information SAP : 
1. Définition SAP :  

SAP (en anglais : Systems, Applications and 

Products for data processing) est un système dans 

lequel les différentes fonctions de l'entreprise 

(comptabilité, finances, production, 

approvisionnement, marketing, ressources 

humaines, qualité, maintenance, etc.) sont reliées entre elles par l'utilisation d'un système 

d'information centralisé sur la base d'une configuration client/serveur. 

La mise en œuvre d'un système complètement intégré permet de répondre de manière précise 

et en temps réel aux questions du type : « Que se passe-t-il si je décide de faire ceci ? ». 

Par exemple, si une entreprise reçoit une commande de marchandises, il est possible de savoir 

presque instantanément les conséquences de cette demande sur les capacités de production, sur 

les besoins d'approvisionnement, sur le personnel nécessaire pour accomplir cette tâche, sur les 

délais requis pour satisfaire cette demande, sur les besoins de financement, sur la profitabilité 

de cette opération, etc. 

SAP AG est le plus important concepteur de logiciels d’Europe, et le quatrième du monde. Il 

fournit des systèmes de gestion et de maintenance à des entreprises de toutes tailles dans le 

monde entier. 

Son siège se trouve à Waldorf, en Allemagne, et il dispose de bureaux régionaux sur les cinq 

continents. 

Le nom exact du progiciel a été plusieurs fois modifié au fur et à mesure de l'évolution des 

versions : 

• R/1 puis R/2 (architecture mainframe) 

• R/3 (apparition de l'architecture client-serveur, versions 2.1 à 4.6C) 

• R/3 Entreprise (dit aussi version 4.70) 

• ECC ou ERP Central Component (versions 5.0 puis 6.0) 

https://fr.wikipedia.org/wiki/Anglais


10 
 

• Parallèlement à l'évolution du produit, cette société a utilisé plusieurs terminologies 

commerciales pour désigner son offre telles que mySAP.com, mySAP ERP ou mySAP 

Business Suite. 

• Les logiciels SAP reposent aujourd'hui sur une architecture technique commune appelée SAP 

NetWeaver. 

• Le langage ABAP/4(Advance Business Application Programming 4th generation) ne 

fonctionne pas sur le système d’exploitation. 

• Tous les modules sont écrits en ABAP/4. 

• ABAP est très semblable au COBOL dans sa syntaxe. L'utilisation du langage ABAP permet 

aux clients de SAP d'étendre la fonctionnalité du produit. 

SAP est un progiciel bien répandu aujourd’hui. On dénombre plus de 140000 installations dans 

plus de 120 pays à travers le monde. Ce qui représente plus de 12 millions d’utilisateurs. La 

plupart des grandes entreprises l’ayant installé afin d’améliorer leur rentabilité, la demande en 

consultants ne cesse de croitre notamment dans l’espace francophone. 

L'une des raisons du succès de ce progiciel, est le fait qu’il soit possible de paramétrer chacune 

de ses composantes afin de l’adapter aux besoins spécifiques d'une entreprise. 

Il peut être installé sous Windows, Unix, Linux, Solaris. Il est aussi indépendant du système de 

gestion des bases : il peut être installé sur Oracle, MS-SQL, IBM DB2, MaxDB. Ayant un 

support multilingue, Il peut être installe en plus de 41 langues internationales. 

Afin de se connecter à un system SAP, les utilisateurs on besoin d’utiliser soit 

l’interface SAPGUI, ou alors à partir de n'importe quel ordinateur personnel qui possède un 

Web Browser et un accès à l’internet (Web GUI). 

 

 

2. Présentation Générale des ERP :  
SAP s'agit d'un progiciel de gestion d’entreprise qui appartient à la famille des ERP, le 

sigle ERP signifie Enterprise Resource Planning. 



11 
 

Vivant dans un contexte de mondialisation, de fusion des entreprises et de concurrence, les 

entreprises veulent augmenter leur productivité, leur efficacité et leur marge de profit afin de 

rester compétitives. 

Pour cela les décideurs ont besoin d’avoir une visibilité en temps réel sur l’état global de la 

société qu’ils dirigent. Étant amené à prendre des décisions stratégiques, ils ont besoin d’outils 

d’aide à la décision fiables, à même de fournir des informations exactes le plus rapidement 

possible. 

Pour illustrer nos propos, nous allons prendre l’exemple de 2 entreprises de production ayant la 

même structure. La première a décidé de ne pas implémenter d’ERP et chacun de ses 

départements utilise un ou plusieurs logiciels. La seconde a opté pour un ERP. 

? Entreprise sans ERP : 

 
Chaque département utilise un logiciel adapté à ses besoins. Les informations liées à un bon de 

commande saisi à partir du logiciel du département ventes seront à nouveau saisies par les 

départements approvisionnement, comptabilité, puis transport pour la livraison. 

Un tel mode de fonctionnement comporte plusieurs risques : 

• erreurs de saisies créant une incohérence de données entre départements 

• données non mises à jour 

• données manquantes 



12 
 

• données redondantes car stockées plusieurs fois dans différents systèmes. 

Certaines entreprises utilisant plusieurs logiciels ont jugé utile d’installer des interfaces afin de 

permettre un échange de données entre divers départements. Cependant, cette approche 

comporte également des inconvénients entre autres : 

• il devient difficile de mettre à jour ou de remplacer un seul système (appartenant à un seul 

département) à cause de l’impact potentiel sur les autres systèmes communiquant avec lui, sans 

compter les couts y liés. 

• Les dysfonctionnements des interfaces informatiques sont souvent nombreux et leur 

correction peut être fastidieuse et onéreuse. 

? Entreprise avec ERP : 

La société qui utilise un ERP, est caractérisée par une uniformisation des services et une 

centralisation de l’information au sein d’une base de données unique. Toute information est 

saisie une fois (bon de commande par exemple) et partagée par tous les départements concernés 

par cette opération. 

Dans un tel système, la redondance des données entre départements n’existe plus ; l’information 

étant disponible pour tous en temps réel, une meilleure coordination interservices devient 

possible et prend moins de temps ce qui améliore la productivité. 

Par exemple à la fin d’une journée de production, s’il s’avère qu’un lot de production est non 

conforme, il est bloqué par le département qualité. Cette information est disponible 

immédiatement pour tous les départements concernés (magasin, stock, ventes, comptabilité). 

Par ailleurs la publication de certaines informations financières (résultat, bilan, …) ou 

logistiques (stock dans le magasin, évaluation des fournisseurs…) est très rapide car toutes les 

données sont disponibles presqu’en temps réel. 



13 
 

Tous ces avantages expliquent pourquoi de plus en plus d’entreprises décident d’utiliser les 

ERP. Dans ce marché, SAP® est le progiciel le plus utilisé à l’heure actuelle. 

3. Engagement SAP :  
L‘offre SAP a pour vocation de répondre à ces enjeux : 

Permettre l’optimisation des processus clés de l’entreprise pour l’innovation (PLM), la 

gestion de la relation client (CRM) et l’optimisation de la Supply Chain (SCM). Par ailleurs, 

les solutions sectorielles amènent des réponses adaptées aux processus spécifiques de chaque 

domaine d’activité (gestion des crédits pour la banque, gestion de la traçabilité dans les 

produits de grande consommation...). 

Intégrer des fonctions de support à ces processus clés, pour faire en sorte que les ressources 

humaines la gestion administrative et financière ou encore les achats soient à leur service. 

Ces fonctions doivent se mettre en place en respectant la stratégie organisationnelle de 

l’entreprise, D’où la nécessité d’un socle intégré, souple flexible, et facile à utiliser (R/3 

Enterprise, mySAP Technology) 

Par ailleurs, ceci doit s’adapter aux entreprises de toute taille, quel que soit leur organisation 

(y compris si elles sont décentralisées et disposant de filiale de taille réduite) ? nécessité de 

proposer une offre adaptée à chaque segment. 

 

4. mySAP.com Suite logicielle e-business :  

 
L‘ERP constitue le socle sur lequel toutes les nouvelles applications e-business vont pouvoir 

s‘appuyer. 



14 
 

SAP R/3 est un composant essentiel de la suite logicielle e-business intégrée mySAP.com. Il 

regroupe l’ensemble des fonctions d’un progiciel de gestion intégré (ERP), véritable socle de 

toute solution de gestion efficace. 

La nouvelle version de SAP R/3 – SAP R/3 Enterprise – préserve et pérennise les apports du 

composant phare de SAP, mais en étend les fonctionnalités en s’appuyant sur une plate-forme 

technique moderne et ouverte, gage d’une transition douce vers l’e-business. En outre, SAP R/3 

Enterprise procure aux clients de 

SAP la fiabilité, l’évolutivité et la facilité d’emploi qu’ils sont en droit d’attendre. 

MySAP NetWeaver est la plateforme technologique de la suite logicielle mySAP. 

 

5. Modernisation du processus de facturation de l’ONEE avec SAP :  
L’ONE a procédé au déploiement du progiciel intégré de gestion SAP (Système 

Application and Product in data procession) dont le coût global (logiciels, matériel, licences et 

intégration) est estimé à 80 MDH sur l’ensemble de ses unités régionales, après son 

implémentation en octobre 2000 au niveau du site central.  

Ce système intégré basé sur une architecture modulaire permet de gérer l’ensemble des 

fonctions de l’Office ; notamment les fonctions Achats, Gestion des stocks, Comptabilité, 

Finances, contrôle de gestion, Immobilisations et Ressources humaines.  

Les informations saisies par un utilisateur entraînent la mise à jour simultanée des données 

gérées dans les autres modules, permettent ainsi une adéquation entre les flux physiques et les 

flux financiers.  

SAP offre également la possibilité, à tous les utilisateurs autorisés, de visualiser en temps réel 

les données disponibles dans le système à partir de n’importe quel poste connecté au réseau. 

Les responsables peuvent par exemple consulter à tout moment les états financiers de l’office, 

ce qui permet au management de suivre de près l’évolution de la situation financière de l’Office. 

 

 

 



15 
 

ABAP Workbench : 
 

1. Définition ABAP :  
ABAP est un langage de programmation propriétaire, faisant partie de l'ensemble 

logiciel SAP. Il s'agit actuellement du langage utilisé dans la programmation des Web 

Application Server faisant partie de la plateforme NetWeaver pour la réalisation de progiciels. 

2. Composants du langage :  

Le code source : il est écrit directement dans un composant de SAP appelé SAP 

Workbench et il sera stocké dans la base d'information de l'outil. Ce langage, de même 

que java, a besoin d'être compilé pour pouvoir être exécuté. Cependant, à la différence de 

java, avant chaque utilisation d'un programme, le processeur SAP vérifie qu'il possède la 

dernière version du programme. Si ce n'est pas le cas, ce dernier est recompilé à la volée. 

Le dictionnaire de données : la base de données est masquée pour le programmeur. Il y 

accède donc au travers de clauses faisant partie du langage lui-même. De même, la gestion du 

modèle de données est réalisée au travers d'un composant qui créera ou modifiera lui-même 

les tables de données. Ce dictionnaire de données comprend : 

• Des domaines représentant un concept élémentaire (par exemple un fournisseur, une 

référence article) ; chaque élément de donnée comprend au minimum un type de donnée 

et la spécification de son occupation mémoire. 

• Des éléments de données. Chaque élément de donnée est construit à partir d'un domaine 

et correspond à une utilisation particulière de ce dernier pour stocker une information, ou 

pour afficher un champ. Chaque élément de donnée comprend quatre descriptions 

textuelles qui peuvent être traduites (de manière à rendre l'application utilisable par des 

locuteurs de différentes langues). 

• Des structures et des tables de différents types permettant de stocker des informations, 

d'utiliser des types composites pour les transferts de données entre programmes et de 

stocker de l'information dans la base. 

Un outil de transport. À chaque modification d'un programme, celui-ci doit 

être transporté de l'environnement dans lequel il est créé vers un environnement de test puis 

dans l'environnement de production (chacun de ces environnements dispose de jeux de 

https://fr.wikipedia.org/wiki/Langage_de_programmation
https://fr.wikipedia.org/wiki/Systems,_applications,_and_products_for_data_processing
https://fr.wikipedia.org/wiki/Netweaver
https://fr.wikipedia.org/wiki/Progiciel
https://fr.wikipedia.org/w/index.php?title=SAP_Workbench&action=edit&redlink=1
https://fr.wikipedia.org/w/index.php?title=SAP_Workbench&action=edit&redlink=1
https://fr.wikipedia.org/wiki/Java_(langage)
https://fr.wikipedia.org/wiki/Compilateur


16 
 

données distincts, il peut exister plus de trois environnements dans un système d'information 

donné). Cette opération est réalisée par la mise en œuvre d'un ordre de transport. 

? Exemples de programmes ABAP : 

 

3. Déroulement du programme dans un programme ABAP :  

3.1. Architecture client / serveur : 

 

? Le système R/3 a une architecture logicielle modulaire qui suit les principes orientés 

logiciel client/serveur. 

? Le système R/3 affecte des présentations, des applications, et des enregistrements de 

données à différents ordinateurs. Il sert de base à l'évolutivité du système R/3. 

? Le niveau le plus bas est le niveau base de données. Les données y sont gérées grâce à 

un système de gestion de base de données relationnelle (RDBMS). Outre les données 

de base et les données de mouvement, les programmes et les métadonnées qui décrivent 

le système R/3 y sont également stockés et gérés. 



17 
 

? Les programmes ABAP, qui comprennent aussi bien les applications fournies par SAP 

que celles que vous développez vous-même, sont exécutés au niveau application. Ils 

exploitent des données appelées au niveau base de données et y stockent de nouvelles 

informations. 

? Le troisième niveau est le niveau présentation (SAPGUI). Ce niveau comprend 

l'interface utilisateur par lequel un utilisateur final peut accéder à une application, entrer 

de nouvelles données et recevoir les résultats d'un processus de travail. 

? La répartition technique du logiciel est indépendante de sa localisation physique dans le 

système. Dans le sens vertical, il est possible d'installer tous les niveaux les uns au-

dessus des autres sur un seul ordinateur ou sur des ordinateurs distincts. Dans le sens 

horizontal, les composantes des niveaux fonctionnel et présentation peuvent être 

réparties sur un nombre x de stations. La distribution horizontale des composantes des 
bases de données dépend toutefois du type de base installé. 

3.2. Vue orientée utilisateur : 

 
 
? Les programmes ABAP sont traitées sur le serveur d'application. La conception de 

dialogues utilisateur et de dialogues base de données est dès lors de grande importance 

lors de l'écriture de programmes applicatifs. 



18 
 

3.3. Déroulement du programme : que voit l'utilisateur : 

 
? L'utilisateur s'intéresse principalement à la façon dont l'opération se déroule et dont les 

données peuvent être introduites et affichées depuis l'opération. Les détails techniques, 

comme savoir si un seul programme est exécuté ou si de multiples programmes sont 

appelés de manière implicite, ou les différences techniques entre les types d'écran 

affichés, sont généralement moins importants pour l'utilisateur. L'utilisateur ne doit pas 

nécessairement connaître le déroulement précis du programme ABAP sur le serveur 

d'application. Le système R/3 comme les serveurs d'application et la base de données 

sont représentés par une boîte noire pour l'utilisateur. 

? Il existe, cependant, trois types d'écran techniquement distincts (écrans, écrans de 

sélection, et listes) qui offrent différents services à l'utilisateur. Le travail du 

développeur est de déterminer quel type de dialogue utilisateur convient le mieux aux 
besoins de l'utilisateur. 



19 
 

3.4. Vue orientée utilisateur : 

 
? Lorsque l'utilisateur exécute une action utilisateur (en choisissant, par exemple, Entrée, 

une touche de fonction, une fonction du menu ou un bouton de commande), le contrôle 

passe du serveur de présentation au serveur d'application et certaines parties du 

programme ABAP sont exécutées. Si un dialogue utilisateur supplémentaire est lancé 

lors du programme ABAP, le système envoie un écran au serveur de présentation et le 

contrôle est à nouveau transféré au serveur de présentation. 

 

4. Repository et Workbench :  

4.1. Repository R/3 : 

 



20 
 

? La base de données, comme le Repository, contient des tables de customizing et des 

tables applicatives qui sont généralement dépendant mandant. 

? Le Repository contient tous les objets de développement, par exemple, des programmes, 

des définitions de tables de base de données et de types globaux. Les objets de 

développement sont par conséquent aussi connus comme objets du Repository. Les 

objets du Repository ne sont pas dépendant mandant. IL est possible donc les visualiser 

et les utiliser pour tout mandant. 

? Structure du Repository : 

? Tous les objets de développement créés avec les outils de développement de ABAP 

Workbench sont classés comme objets du repository et sont stockés de manière centrale 

dans le Repository R/3. 

? Le Repository R/3 est une partie spéciale de la base de données centrale du système 

SAP. 

? Le Repository s'organise selon l'application. Chaque application est encore subdivisée 

de façon logique en classes de développement. 

? Les objets du Repository sont souvent composés de sous-objets qui sont eux-mêmes des 

objets du Repository. 

? Chaque objet du Repository doit être affecté à une classe de développement lors de sa 

création. 

? Vous pouvez utiliser le système d'information du Repository pour chercher des objets 

du Repository selon plusieurs critères. 

4.2. Outils de ABAP Workbench : 

 



21 
 

? ABAP Workbench contient différents outils pour le traitement d'objets du Repository. 

Ces outils vous fournissent une large gamme d'assistance qui couvre l'ensemble du cycle 

de développement du logiciel. 

? Les outils les plus importants à la création et à l'édition d'objets du Repository sont : 

? Éditeur ABAP pour l'écriture et l'édition du code de programme. 

? Dictionnaire ABAP pour le traitement des définitions de tables de base de données et la 

récupération de types globaux. 

? Menu Painter pour la conception d'interface utilisateur (barre de menus, barre d'outils 

standard, barre d'outils d'application, allocation des touches de fonction) 

? Screen Painter pour la conception d'écrans (programmes dynamiques) de dialogues 

utilisateur 

? Générateur de modules de fonction pour l'affichage et le traitement de modules de 

fonction (routines avec des interfaces définis qui sont disponibles dans tout le système) 

? Générateur de classes pour l'affichage et le traitement des classes centrales 

? Il existe deux manières différentes d'utiliser ces outils : 

? Sois-vous appelez chaque outil individuel et traitez les objets correspondants du 

Repository. 

? Vous devez ensuite appeler l'outil suivant pour la série d'objets suivante... 

? Sois-vous travaillez avec Object Navigator : Cette transaction vous fournit une synthèse 

sous forme d'arborescence de tous les objets d'une classe de développement ou d'un 

programme. 

5. Programmation orientée objet :  

5.1. Présentation des objets : 

 



22 
 

? L'orientation objet est basée sur des objets représentant des éléments abstraits ou 

concrets dans le monde réel. Ces objets sont représentés en premier lieu par leurs 

caractéristiques qui sont mises en correspondance avec la structure interne de l'objet et 

les attributs (données). Le comportement d'un objet est décrit à l'aide de méthodes et 

d'événements (fonctionnalité). 

? Les objets forment des capsules qui contiennent les données et le comportement de ces 

données. Ils doivent vous permettre d'élaborer une solution logicielle, à savoir une 

correspondance un pour un du champ de problèmes dans le monde réel. 

5.2. Modèle de programmation orientée objet : 

 

5.3. Avantages de l'approche orientée objet : 

 
? Cohérence tout au long du processus de développement logiciel 

Le "langage" utilisé dans les différentes phases du développement logiciel (analyse, spécification, 

conception et implémentation) est uniforme. Idéalement, les modifications apportées au cours de la 

phase d'implémentation devraient être appliquées automatiquement dans la conception. 

 

? Encapsulation 

L'encapsulation signifie que l'implémentation d'un objet est masquée aux autres composantes du 

système. Ainsi, ces dernières ne peuvent pas faire de suppositions sur le statut interne de l'objet et, par 

conséquent, aucune dépendance relative aux implémentations spécifiques n'est générée. 

 

? Polymorphisme 

Le polymorphisme (capacité d'adopter plusieurs formes) dans le contexte de la technologie des objets 

signifie que les réactions des objets de diverses classes à un même message sont différentes. 

 



23 
 

? Héritage 

L'héritage définit la relation d'implémentation entre les différentes classes, dans lesquelles une classe 

(sous-classe) partage la structure et le comportement définis dans une ou plusieurs autres classes 

(super-classes). 

Remarque : ABAP Objects autorise seulement l'héritage unique. 

5.4. Avantages de l'approche orientée objet : 

 
? Avant ABAP, SAP utilisait un macro-assembleur. 

? ABAP a été créé dans l'intention d'améliorer le reporting. Il s'agit d'un langage de 

programmation propriétaire relativement indépendant, bien qu'il ait été influencé par 

d'autres langages de programmation, par exemple, COBOL et PASCAL. 

? ABAP Objects est une réelle extension d'ABAP. Il réunit les aspects les plus 

prometteurs des autres langages de programmation orientée objet, tels que Java, C++ et 

Smalltalk. 

 

 

 

 

 

 

 



24 
 

Conclusion : 
Dans le cadre de mon stage d’initiation j’ai pu découvrir un nouveau système 

d’information SAP qui peut gérer l’ensemble des fonctions d’une entreprise, ce système qui est 
utilisé par l’ONEE est développé par un langage de programmation ABAP.  

Mon stage m'a beaucoup intéressée, j'ai pu découvrir les différents postes de l'entreprise 
et avoir un aperçu de son fonctionnement. Il m'a permis de me familiariser avec les différents 
services et d'avoir une approche réelle du monde du travail. J'ai pu faire le rapprochement entre 
ce que j'avais appris en cours et ce qui se passe vraiment dans l’entreprise. 


	Introduction :
	Présentation de l’ONE :
	1. Aperçu historique :
	2. Missions et objectifs de l’ONE :
	3. Activités de l’ONE :
	4. Moyens humains :
	4.1. Organigramme fonctionnel de l’office :
	4.2. Evolution de l’effectif :
	4.3. Formation :


	Système d’information SAP :
	1. Définition SAP :
	2. Présentation Générale des ERP :
	3. Engagement SAP :
	4. mySAP.com Suite logicielle e-business :
	5. Modernisation du processus de facturation de l’ONEE avec SAP :

	ABAP Workbench :
	1. Définition ABAP :
	2. Composants du langage :
	3. Déroulement du programme dans un programme ABAP :
	3.1. Architecture client / serveur :
	3.2. Vue orientée utilisateur :
	3.3. Déroulement du programme : que voit l'utilisateur :
	3.4. Vue orientée utilisateur :

	4. Repository et Workbench :
	4.1. Repository R/3 :
	4.2. Outils de ABAP Workbench :

	5. Programmation orientée objet :
	5.1. Présentation des objets :
	5.2. Modèle de programmation orientée objet :
	5.3. Avantages de l'approche orientée objet :
	5.4. Avantages de l'approche orientée objet :


	Conclusion :

, _version_=1670762141059121152, _root_=1])
org.apache.solr.common.SolrException: Exception writing document id 1 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:03.145 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.167 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.174 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Calibri,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.439 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=ASPMVC-Partie1.pdf, description=asp mvc .net, date_up=2020-06-27 05:33:43.0, id=2, title=aspmvc, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/ASPMVC-Partie1.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

A.U:2019-2020

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular

Génie logiciel en .Net



ASP MVC

Chapitre 2:

3



Plan du chapitre
1. Structure du projet MVC

2. Gestion d’Etat

3. Mise en forme 

4. Entity Framework

5. Razor

6. Les   helpers HTML

7. Les validateurs

8. Exemple de l’utilisation de quelques composants

9. Ajax 

10.Internationalisation en ASP MVC

11. Sécurité du projet ASP MVC
4



5

Spécificités de ASP 



Objectif

- .Net possède un ensemble de fonctionnalités

dédiées à la création et à la gestion de sites Web.

-ASP.NET permet de créer des sites Web

dynamiques.

-IIS est le serveur web pour les projets web en .Net

6



IIS

-S’installe avec le système d’exploitation windows

-Pour ouvrir IIS ? taper inetmgr sur la barre de recherche

mais assurer que le service est déjà activé

7



IIS

-Activation de IIS

Panneau de configuration?ajouter supprimer des

programmes?Activer ou désactiver des fonctionnalités

windows

8



Privilèges d’ASP

-Plus sécurisée :Selon le cabinet de sécurité WhiteHat Security,

la sécurité est légèrement meilleure avec ASP

.NET qu'avec JSP, à cause du fait qu'il y a une meilleure

orientation de la sécurité pour les développeurs. Mais, les

chiffres sont très proches l'un de l'autre, la densité de

vulnérabilité est de 27,2 pour le .NET et de 30,0 pour le Java.

-Solution utilisée par des nombreux gouvernements et institutions

financières.

-Exemple des sites en ASP:Massar,Stackoverflow

9



Modèles de programmation ASP.Net

ASP.NET prend en charge un certain nombre de modèles de

programmation pour la création d'applications Web

?ASP WEB Forms: Framework pour la construction de pages

modulaires à partir de composants, avec des événements d'interface

utilisateur en cours de traitement côté serveur.

?ASP MVC: permet de créer des pages Web à l'aide du modèle de

conception Modèle – Vue – Contrôleur

?ASP .Net Core: framework open source multiplateforme et hautes

performances pour la création d'applications web modernes.

10



11

Structure  du projet  MVC



ASP Web forms vs ASP MVC

o ASP MVC plus léger car il ne stoke par les données des

variables dans les viewState.

o L’entrée en ASP Web forms est la vue en ASPMVC est le

controller?facilité d’automatisation des tests unitaires puisque

on peut tester juste les fonctions de projet.

o La création de l’interface graphique en ASP Webforms se

base sur glisser/déposer en ASPMVC il faut avoir des

connaissances en html et css.

12



Le patron de conception MVC

-Le MVC est un pattern architectural qui sépare les données (le modèle),

l'interface homme-machine (la vue) et la logique de contrôle (le contrôleur).

-Ce modèle de conception impose donc une séparation en 3 couches :

•Le modèle : Il représente les données de l'application. Il définit aussi

l'interaction avec la base de données et le traitement de ces données.

•La vue :Elle représente l'interface utilisateur, ce avec quoi il interagit. Elle

n'effectue aucun traitement, elle se contente simplement d'afficher les données

que lui fournit le modèle.

•Le contrôleur :Il gère l'interface entre le modèle et le client. Il va interpréter la

requête de ce dernier pour lui envoyer la vue correspondante. Il effectue la

synchronisation entre le modèle et les vues.

13



Architecture d’une application ASP MVC

New project? Application web ASP.Net? Choisir MVC

14



Etape de création des pages ASP MVC

15

Etape1:     On crée le modèle de donnée

Etape2:     On crée le Controller

Etape3:     On crée la Vue



Modèle

-C’est une classe qui devra se créer dans le dossier Model,

porte les données de projets

16



Controller

-Il représente le point de démarrage de projet ASP MVC

-Il a pour rôle d’interpréter les requêtes de client pour lui

envoyer les réponses(vues).

-C’est une classe qui va contenir un ensemble des actions.

•Création du controller: click droit sur le dossier

controller?Ajouter un controller ?il existe plusieurs

modèles de contrôleur. Pour l'instant, nous choisirons

le contrôleur MVC - Vide.

17



Controller

-La classe Controller fournit des méthodes qui répondent

aux requêtes HTTP envoyées à un site Web ASP.NET MVC.

18



Controller

-Dans une classe de contrôleur, chaque méthode publique

représente une action.

-ActionResult signifie que la méthode va réaliser l'action

correspondant à son nom.

-Dans cet exemple l’application donnera l'URL suivante

http://localhost/Etudiant/Index.

-L’exécution de cet exemple va déclencher une erreur: car on

a pas encore créer la vue.

19



View

o return View() dans le controller: amène le programme à

chercher dans le dossier View, un sous-répertoire portant le

même nom que le controller dans le quel on trouve la vue(a

le même nom que l’action)

o Càd dans le dossier View on doit avoir un sous-répertoire

Etudiant portant une page Index(nom de l’action exécuté).

o A savoir que par défaut, ASP.NET MVC va chercher la vue

dans le sous-répertoire du même nom que le contrôleur,

mais que si elle n’existe pas, il ira voir ensuite dans le sous-

répertoire Shared.
20



View

-Création de vue:

On clique au dessus de l’action du controller qui va être

responsable de l’affichage de vue et on choisit ajouter une

vue

21



View

-Si on veut appeler une vue qui porte un nom différent

que l’action on met return View(‘’Index2’’) mais

toujours la recherche est dans le même sous

répertoire.

22



23

Gestion d’Etat



Synchronisation entre le modèle et la 
vue

• Envoi des données via le controller:

-Pour envoyer des données du modèle vers la vue,il faut

les passer dans les paramètres de View.

24



Synchronisation entre le modèle et la 
vue

• Récupération des données dans la vue:

-Chaque vue a une propriété Model qui sauvegarde l’objet

envoyé par le controller

@Model.nom

25



Synchronisation entre le modèle et la 
vue

• Récupération des données dans la vue

-Si on veut afficher une liste des valeur,on doit passer par

l’instruction foreach

-Toujours lors d’une instruction foreach dans la vue,il faut

ajouter

@model  IEnumerable<MvcTP2.Models.etudiant>

Au lieu de @model MvcTp2.Models.etudiant

26



ViewData

•Passer des valeurs du contrôleur vers  la vue:

-On utilise le dictionnaire de clé/valeur ViewData

Dans le controller: ViewData["Nom"] = ‘’yyy’’;

•Récupération de valeur:

-Dans la vue  @ViewData["Nom"]

27



ViewBag

-Autre façon pour passer les données de controller vers la

vue est la propriété viewBage

-Création: ViewBag.Nom=‘’tttt’’

-Récupération:@ViewBag.Nom;

-On peut passer des données Via le ViewData et les

récupérer via ViewBag et vice versa

-Le viewBag n’accepte pas des espaces.

28



RedirectToAction

•Si le controller ne veut pas afficher une vue mais il

veut se rediriger vers une autre action:

RedirectToAction("Index3");

-http://localhost:4979/Etudiant/Index3 ? affiche xxxx

29



Redirect(Url.Action(…))

•Si le controller veut se rediriger vers une action qui se

trouve dans un autre controller:

Redirect(Url.Action("Index", "accueil"));

30



Envoi des données via le View

-Supposons que l’utilisateur cette fois qui veut envoyer des

donnée dans un lien

http://localhost:4979/Etudiant/Index5?x=eee&y=fff

Récupération: utiliser ces données comme des paramètres

des actions.

31

http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee


Cookies

-Création:

HttpCookie cookie = new HttpCookie("Cookie");

cookie.Value = "xxx" ;

this.ControllerContext.HttpContext.Response.Cookies.

Add(cookie);

-Récupération:

String s = 

this.ControllerContext.HttpContext.Request.Cookies["Cookie"].

Value;
32



Cookies

-Vérification

this.ControllerContext.HttpContext.Request.Cookies.AllKeys.Co

ntains("Cookie")=true

-Suppression:

HttpCookie cookie = 

this.ControllerContext.HttpContext.Request.Cookies["Cookie"];

cookie.Expires = DateTime.Now.AddDays(-1);

this.ControllerContext.HttpContext.Response.Cookies.

Add(cookie);

33



Session

-Création:

Session["Cookie"] = "xxx";

-Récupération:

String s =  Session["Cookie"];

Vérification

Session["Cookie"] = null

Supprimer:

Session["Cookie"]=null;

34



RouteConfig

-C’est un fichier dans le répertoire App_Start,il correspond à

l’emplacement o? on définit la première page qui va être

exécuter dans le site

35



RouteConfig

-Des fois on aime cacher le langage utilisé pour développer

nos sites

-Pour appeler

36



37

Mise en forme 



Page Layout

-C’est l’équivalent de Master page en ASP WebForms

-Voir _Layout.chtml

-RenderBody():permet d’affecter le contenu de page qui

exploite layout

38



Page Layout

-Chaque vue a une variable nommé Layout qui détermine la

Template à appliquer sur une page.

-Cette propriété est affecté dans la première ligne de la vue

•Création de Layout: on le crée dans le répertoire Shared de

projet?ajouter une vue

39



Page Layout

-Appel de Layout: on le crée dans le répertoire Shared de

projet?ajouter une vue

Remarque:par recommandation les noms des pages

partagés doivent commencer par « _ »

40



Page Layout

Remarque:-Si on n’a pas une ligne au début d’une vue qui

appel le layout à utiliser,le programme cherche layout

définie dans la page _ViewStart.chtml du projet.

41



Partial View

-C’est l’équivalent de User contrôle en ASP WebForms.

-Il s’agit d’une partie de view qu’on peut l’intégrer dans

d’autres view.

• Création: ajouter une nouvelle vue

42



Partial View

•Appel :

-Intégrer cette ligne dans l’emplacement o? on veut appeler

ce partial view

-Exécution:

43



Section

? Problématique: Supposons qu’on a un ensemble des

pages qui utilisent le même Layout page mais on veut

laisser une partie dans Layout se change selon la vue à

afficher

-Autrement dit rendre une section dans layout modifiable

selon la vue à utiliser .

? Solution: Utiliser la notion de section

44



Section

• Création: On définit la section dans Layout page via

l’écriture suivante càd dans cet endroit la section va être

appeler

• Appel: Ensuite on définit le contenu de section dans la vue qui

utilise le précédent layout page

45



Appeler un CSS

-Dans la page chtml on met

-On met la liaison avec les fichiers de script dans le fichier

App_Start /Bundle.config

46


, _version_=1670762141778444288, _root_=2])
org.apache.solr.common.SolrException: Exception writing document id 2 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:03.601 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.608 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Calibri,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.619 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+MS PGothic are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.716 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.779 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=ASPWebForms.pdf, description=web form .net, date_up=2020-06-27 05:35:56.0, id=3, title=webform, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/ASPWebForms.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

A.U:2019-2020

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular

Génie logiciel en .Net



ASP WebForms

3



Objectif

- .Net possède un ensemble de fonctionnalités

dédiées à la création et à la gestion de sites Web.

-ASP.NET permet de créer des sites Web

dynamiques.

-IIS est le serveur web pour les projets web en .Net

4



IIS

-S’installe avec le système d’exploitation windows

-Pour ouvrir IIS ? taper inetmgr sur la barre de recherche

mais assurer que le service est déjà activé

5



IIS

-Activation de IIS

Panneau de configuration?ajouter supprimer des

programmes?Activer ou désactiver des fonctionnalités

windows

6



Privilèges d’ASP

-ASP webForms a une bonne structure et architecture pour la

programmation(Bibliothèque située à une place, les pages Web à une

autre, le code à une autre).

-Plus sécurisée :Selon le cabinet de sécurité WhiteHat Security, la

sécurité est légèrement meilleure avec ASP .NET qu'avec JSP, à cause

du fait qu'il y a une meilleure orientation de la sécurité pour les

développeurs. Mais, les chiffres sont très proches l'un de l'autre, la

densité de vulnérabilité est de 27,2 pour le .NET et de 30,0 pour le

Java.

-Solution utilisée par des nombreux gouvernements et institutions

financières.

7



Architecture WEB, site statique

Serveur Web

Pages Web htmlClient

URL

Contenu html

8



Architecture WEB, site dynamique

HTTP

9



Structure d’un projet ASP

10



En tête et Directive 

- Le Doctype est exactement le même qu’en HTML

- L’ASP.NET a aussi sa ligne qui définit certains
paramètres

11



En tête et Directive 

-On va utiliser le C# comme langage Language="C#".

-Le nom de la page du code behind,correspondant à

cette page .aspx

-On définit le namespace et le nom de la classe lié à la

page.

-Behind: est le code dans lequel on écrira les

instructions qui seront exécutées sur le serveur.

12



Contrôle Serveur 

-Un contrôle serveur est une balise (HTML ou ASP)

associé à la propriété runat="server".

-Cette balise sera associé à un objet lors de l’exécution

du code par le serveur.

-Un contrôle serveur est programmable depuis le code

behind pour répondre à des évènements.

13



Cycle de vie d’une page ASP

Création des contrôles serveur

Chargement  des contrôles serveur 

Dans la page

Affichage de page

Suppression des contrôles serveur

Initialisation(Init)

Chargement(Load)

Rendu(Rend)

Déchargement(Unload)

14



La notion de PostBack

-Il s’agit d’une publication HTTP Post qui consiste à

envoyer une mise à jour au navigateur

Exemple1:

15



La notion de PostBack

Résultat:

Lors du premier chargement de page Après le click sur le bouton

16



La notion de PostBack

-La propriété Page.IsPostBack: teste si c’est le

premier ou deuxième envoi de la page

-Page.IsPostBack=True: il s’agit d’une publication

-Page.IsPostBack=false: Premier accès

17



ViewState
Exemple2:

Résultat:

18



ViewState

-Le ViewState est un système de maintien de la persistance

des données pour les pages ASP.NET.

- La classe Control contient un attribut appelé « ViewState »

qui est un dictionnaire d’état des objets qui contient tous les

états des contrôles.

-Restaure automatiquement les états des contrôles

seulement quand la page est rechargée ? PostBack.

19



Html généré la première fois

20



Html généré la deuxième fois

21



ViewState

Exemple2: 

Si on désactive le viewState « EnableViewState=false »

22



Navigation entre les pages

-Navigation directe: en utilisant un lien hypertexte(tags a href) 

ou quelques composants d’ASP:

-Navigation basée sur le code: en utilisant Response.Redirect

ou Server.Transfer .

23



Response.Redirect

-L'objet Response permet ainsi de manipuler l'ensemble

des informations à destination au navigateur du client.

-La méthode Response.Redirect envoie au navigateur

client l'adresse de la page vers laquelle il doit être redirigé

Syntaxe: Response.Redirect ("URL")

24



Server.Transfert
-L'objet Server est utilisé pour accéder au propriétés et aux

méthodes du serveur.

-Server.Transfer envoie toutes les informations qui ont été

rassemblées par le traitement d'une page ASP, vers une autre

page sans effectué un retour vers le client.

Server.Transfer ("URL")

25



Response.Redirect VS   Server.Transfer

Response.Redirect Server.Transfer

-URL se change alors Le client

connait la redirection.

-maintient l'URL d'origine dans le

navigateur.

-Ne préserve pas la chaîne de

requête et les variables de

formulaire de la demande initiale

Préserve la chaîne de requête et

les variables de formulaire de la

demande initiale

-Allers-retours supplémentaires 

pour le serveur à chaque   

demande

-Evite les allers-retours inutiles

vers le serveur

26



L’objet Request

-C’est un objet qui manipule les informations envoyées de

client vers le serveur:

-Les informations qui passent dans un formulaire.

Request.Form["IdControle"]

-Les informations qui passent dans un lien.

Request.QueryString [" Nom de variable envoyé dans 

le lien "]

27



L’objet Request

Exemple:

Server.Transfer("WebForm2.aspx?cle1=v1" + 

"&cle2="+TextBox1.Text);

- Dans WebForm2.Aspx

Label1.Text = Request.QueryString["cle1"];

Label2.Text = Request.QueryString["cle2"];

28



Gestion d’Etat

• Problème: 

- http est un protocole sans état.

- Chaque appel d’url ignore les précédents.

• Besoin:

-Lors de l’affichage d’une page, il est possible de

personnaliser cet affichage en fonction de

l’utilisateur.

-On peut conserver des mots passe(informations)

pour éviter des identifications.
29



Gestion d’Etat
• Solution:  Moyen pour conserver les informations.

-Deux cas de figures :  

Gestion des états coté client Gestion des états coté 
Serveur

-View State 

- HiddenField

-Query Strings

- Cookies 

- Session

- Application

- Base de donnée

30



Viewstate

• Exemple:

Ecrivez un programme permettant de conserver le

contenu des TextBox dans un viewstate

31



Viewstate

• Exemple:

32



HiddenField

-Il est parfois utile de créer des champs cachés (Hidden

Field) dans lesquels seront stockés des valeurs que l’on

pourra utiliser après un PostBack .

-A la différence des ViewStates, n’ont ni compression, ni

chiffrement ou hachage, un utilisateur avancé pourra

consulter voir modifier les informations contenus dans nos

HiddenField

33



HiddenField

• Exemple:

• Résultat:

34



Les cookies
-Sont des données stockées dans un fichier texte dans le

système de fichier client .

-Fonctionnement:

Serveur

Client

Premier appel

Réponse html + 
cookies

Je veux l’URL  yyy

Voici mes cookies
35



Stocker un cookie sur le client

- Automatique, géré par le navigateur.

-Le navigateur renvoie automatiquement les cookies

concernés par l’URL demandée.

-Les cookies périmées sont automatiquement

supprimées.

36



Les cookies

• Création:

Response.Cookies["nomCookies"].Value = valeur;

• Récupérer un cookie

Request.Cookies["nomCookies"].Value

• Vérifier l’existence d’un cookie:

if (Request.Cookies["nomCookies"] == null)

37



Les cookies

• Fixer la date d'expiration

DateTime dateExpir =   DateTime.Now.AddMonths(3);

Response.Cookies[" nomCookies "].Expires = dateExpir; 

• Supprimer un cookie

-Response.Cookies[" nomCookies "].Expires = DateTime.Now;

38



Les cookies

- Visualiser cookies

39



Les sessions

-Permettent de stocker temporairement (pendant

toute la durée de vie de la session) des

informations transmissibles de page en page.

-Chaque connexion possède un espace sur le

serveur pour stocker des variables de session.

40



Fonctionnement de session

• La première fois que vous ajouter une variable de

session, le serveur vous ouvre une session et génère un

cookie de session comportant un identifiant.

• Dans les rappels ultérieurs votre navigateur renvoie le

cookie de session, ce qui permet au navigateur de

retrouver votre espace de session.

• A la fermeture du navigateur, le cookie de session est

détruit.

41



Session: mise en oeuvre

• Ajouter une variable de session:

Session["sessNom"] = valeur

• Vérifier l’existence d’une variable de session:

if (Session["sessNom"] != null)

• Relire une variable de session:

textbox1.Text = Session["sessNom"];

42



Session: mise en oeuvre

• Supprimer une session:

Session["sessNom"] = null

ou

Session.clear();

43



Les évènements de session

La session possède deux évènements.

-Session_Start: exécuté quand une nouvelle session 

démarre

-Session_End: exécuté quand une session est 

fermé.

44



Fichier Global.asax

45



Application

Définition:

-il s'agit de l'objet représentant l'application web elle-

même.

-Cet objet permet le partage d'information entre

plusieurs utilisateurs d'une application.

Exemple:

-nombre d'utilisateurs connectés simultanément.

46



Application

Fonctionnement:

-L’objet Application se situe dans la mémoire du serveur

Web.

-crée lorsque l’application reçoit sa première requête, et

reste actif jusqu'à ce que la dernière Session soit

libérée.

47



Application

Comment initialiser et lire ces variables?

• Affecter une variable d'application:

Application ["clé"] = valeur

• Récupérer une variable d'application:

Variable = Application ["clé"] 

48



Evénements d’Application

• Evénement Application_OnStart: 

-Rôle:

Cet événement est déclenché lorsque l'application

démarre, c'est-à-dire à la mise en service du site web.

-Exemple d’utilisation:

On utilisera cet événement pour initialiser des variables

d'application comme un compteur de visiteurs, par

exemple.

49



Evénements d’Application

• Evénement Application_OnEnd: 

-Rôle:

Cet événement est déclenché lorsque l'application 

s'arrête c.à.d une fois que toutes les sessions en cours 

ont été arrêtées.

-Exemple d’utilisation:

On utilisera par exemple cet événement pour enregistrer 

quelque part le nombre de visiteurs, afin de reprendre ce 

nombre au prochain démarrage. 

50



Evénements d’Application

Fichier global.asax:

51



Utiliser un SGBD

? Utiliser les instructions de Ado.net.

ou

? Travailler en mode assistant:

1.SqlDataSource :composant ajouté à partir de ToolBox ,il

représente un objet utilisé pour accéder aux tables d’une

base de donnée.

52



Utiliser un SGBD

2.Configurer le sqlDataSource

53



Utiliser un SGBD

3.Pour ajouter les instructions de mise à jour(Insert,Update,

Delete).

Cliquer sur Options avancées

54



Utiliser un SGBD  (mode assistant)

oGridView:

-Permet d’afficher les données dans un tableau

-dataSourceId pour la lier à un contrôle SqlDataSource.

oDetailsView:

-affiche les données enregistrement par enregistrement.

oDataList:

-affiche les informations sous forme d’une liste.

55



Utiliser un SGBD  (mode assistant)

? Lier les composants précédents au SQLDataSource:

56



57



58



Les validateurs

-Sont des contrôles dédiés à la validation càd permettant la

vérification des champs d’un formulaire

•Les propriétés des validateurs

- ControlToValidate : Permet d'associer à un validateur le

contrôle qu'il doit valider.

-Display : Permet de définir la façon dont vont s'afficher les

messages d'erreurs des validators(static;dynamic;None).

-Text : Permet d'indiquer le message d'erreur qui sera affiché

59



Les validateurs
•Les propriétés des validateurs

-ErrorMessage : Permet d'indiquer le message d'erreur qui

sera affiché. Cette propriété est utilisée notamment pour le

contrôle ValidationSummary.

-ValidationGroup : Permet de grouper les contrôles pour

que ne soient validés que les contrôles qui font parti du

même groupe. Cela permet de définir plusieurs zones de

validation dans une page.

-EnableClientScript : Permet d'indiquer si l'on souhaite

utiliser une validation cliente ou non. (Vrai par défaut)

60



Exécution de validation

• Il peut s’exécuter:

- Sur le client: le java script

- Sur le serveur: Causesvalidation=True

-Sur le client, puis le serveur (conseillé).

61



Les principaux validateurs

• RequiredFieldValidator: permet de tester si un champ est

rempli ou non.

• RangeValidator: vérifie si la valeur d'un contrôle d'entrée

se trouve dans une plage de valeurs spécifiée.

-On peut comparer des Integer, Double, Date ... Pour

préciser quel type on attend, on va utiliser la propriété Type.

Les bornes à valider seront saisies grâce aux

propriétés MinimumValue et MaximumValue.

62



Les principaux validateurs

• CompareValidator: permet de comparer la valeur entrée

par l'utilisateur avec

-une valeur : ValueToCompare et Operator(Equal,NotEqual…)

- la valeur d'un autre contrôle: ControleToCompare

-On peut également se servir de ce contrôle pour vérifier

qu'une donnée saisie est d'un type particulier:on utilisera

Operator=DataTypeCheck et on change le Type.

63



Les principaux validateurs

•RegularExpressionValidator: permet de vérifier une

entrée à partir d'une expression régulière.Par exemple, pour

vérifier un email.

64



Les principaux validateurs

• CustomValidator: Effectue une validation définie par

l'utilisateur sur un contrôle d'entrée dans l’événement

suivant:

ServerValidate(object source, serverValidateEventsArgs

args)

-args:représente les données associées à cet evt;il possède deux

propriétés:

? value: renvoie la valeur de la commande d’entrée(ex:valeur

saisi dans un TextBox)

?IsValid: tester si la validation est réussi ou non.

65



Les validateurs

• ValidationSummary: ce n'est pas un validator comme les

autres, il n'effectue pas de validation mais propose de

récapituler les différentes erreurs survenues lors de la

validation de la page.

-Il se base uniquement sur le contenu des

propriétés ErrorMessage de chaque validator qui n'a pas

passé la validation.

66



Les pages maîtres.

Dans un site web,on aura souvent une partie qui se répète dans

toutes les pages comme l’entéte/pied de page,menu

67



Les pages maîtres.

• On peut réaliser cela via les pages maîtres.

• Elles permettent de définir une mise en page et les éléments

à inclure dans toutes les pages.

• Il est logique de commencer le projet par la construction

d’une page maître.

68



Construire une page maître

• Ajouter un nouvel élément de type page maître.

• Définir les éléments de mise en page, table ou div.

• Inclure les éléments constant: décorations et contrôles

utilisateur.

• « Place Holder » pour inclure les éléments variables.

• Après on crée un nouvel élément webform use Master page (ou

contentPage)et on coche notre master page et juste dans la

partie de placeHolder o? on peut inclure le contenu de cette

page.

69



Contrôle utilisateur

-En plus d'utiliser des contrôles serveur Web dans les pages

Web ASP.NET, on peut créer nos propres contrôles

personnalisés et réutilisables, à l'aide des mêmes techniques

que celles qui sont utilisées pour créer les pages Web

ASP.NET. Ces contrôles sont appelés contrôles utilisateur.

-construire user controle: Ajouter nouvel élément?web user

control?et après on peut le glisser dans d’autres pages.Toute

modification dans le user control sera transmis aux autres pages

qui l’utilisent(centralisation d’administration)

70



Web.siteMap

-SiteMap est une représentation de la structure de navigation

d'un site, fournie par un ou plusieurs fournisseurs de plan de

site(SiteMapDataSource)

-La manière la plus simple de créer un plan de site consiste à

créer un fichier XML nommé Web.sitemap qui organise les

pages du site de manière hiérarchique.

-Création: ajouter nouvel élément de type Web siteMap

71



Web.siteMap

72



Web.siteMap

•Les contrôles disponibles sont :

-TreeView qui affiche l'arborescence du sitemap.

-Menu qui permet d'afficher la navigation sous la forme d'un menu.

-SiteMapPath qui permet d'indiquer à l'utilisateur où il se trouve dans

la hiérarchie du site.

-Création:on intégre ces composnats à partir de toolBox et on affecte à

leur propriété « DataSourceId »:le siteMap généré précédemment

73

http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.treeview.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.treeview.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.menu.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.menu.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.sitemappath.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.sitemappath.aspx


Application multilingue

Pour avoir un site web multilingue:

?Etape1: La localisation

Le principe de la localisation est de générer un fichier qui

va contenir une référence de chacun de nos contrôles de

notre page web ainsi qu’une propriété qui contiendra du

texte.

74



Application multilingue

•Générer un fichier de ressources locales

75



Application multilingue

•Générer un fichier de ressources locales

Remarque: ce fichier s’enregistre dans le dossier «

App_LocalRessource ».
76



Application multilingue

•Générer un fichier de ressources locales

77



Application multilingue

?Etape2: Pour ajouter une langue à votre application web, 

copiez votre fichier de ressource locale dans votre répertoire 

App_LocalResources puis renommez-le de la façon suivante : 

(nom de la page).aspx.(nom de la langue selon la norme 

ISO 639-1).resx

Exemple: Default.aspx.fr.resx ; Default.aspx.en.resx; 

Default.aspx.ar.resx

78



Application multilingue
?Etape3: Mettre en place plusieurs langue:

-La méthode InitializeCulture():Définit la Culture et UICulture pour 

le thread actuel de la page.

-La valeur Culture détermine les résultats de fonctions spécifiques

à une culture, comme la mise en forme de la date, des nombres

et de la monnaie, etc.

-La valeur UICulture détermine les ressources qui sont chargées

pour la page.

79

https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.culture(v=vs.110).aspx
https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.uiculture(v=vs.110).aspx
https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.culture(v=vs.100).aspx
https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.uiculture(v=vs.100).aspx


Application multilingue

80

protected override void InitializeCulture()

{ 

if (Request.Form["DropDownList1"] == "en-US")

{Thread.CurrentThread.CurrentCulture = new 

CultureInfo("en");

Thread.CurrentThread.CurrentUICulture = 

new CultureInfo("en");

}

else

{

Thread.CurrentThread.CurrentCulture = new 

CultureInfo("fr");

Thread.CurrentThread.CurrentUICulture = 

new CultureInfo("fr"); }



AJAX

81



AJAX

-En aspx à chaque appel, la page est entièrement

reconstruite.

-Ajax permet de ne reconstruire qu’une partie de la page.

Exemple:

-le contenu d'un champ de formulaire peut être changé,

sans avoir à recharger la page avec le titre, les images, le

menu, etc.

-Recherche en google.

82



Principe d’AJAX

Asynchronous Javascript And XML(Javascript et Xml

asynchrones):

-Asynchrone:faire des appels asynchrones au serveur depuis

le client.

-Javascript et XML:

-Lors de ces appels, le serveur retournera du XML qui sera

"récupéré" par JavaScript et traité.

-L’objet XMLHttpRequest de javascript sert au dialogue

asynchrone avec le serveur Web

83



Principe d’AJAX

84



ASP.net Ajax

Microsoft ASP .NET AJAX Extensions, présentés sous la

forme de nouveaux contrôles serveur ASP .NET, et classes

associées.

85



ASP.net Ajax

•Etape1:

-Insérer un script manager dans le code aspx:

<asp:ScriptManager ID="ScriptManager1"  runat="server">

</asp:ScriptManager>

•Il permet:

-l’ajout des bibliothèques de scripts au navigateur.

-L’appel des services web

86



ASP.net Ajax
Etape2:

-Encadrer les objets concernés par Ajax par des balises update 

Panel:

<asp:UpdatePanel ID="UpdatePanel1" runat="server">

<ContentTemplate>

<asp:TextBox ID="txtA" runat="server"></asp:TextBox>

<asp:TextBox ID="txtResult" runat="server"></asp:TextBox>

</ContentTemplate>

</asp:UpdatePanel>

87



ASP.net Ajax

Etape2:

UpdatePanel: permet la restitution d’une section de page

Remarque:

-On peut pas utiliser une navigation de type

Server.Transfer dans un composant intégré en

Updatepanel

88



AJAX Control Toolkit

-C’est un ensemble de contrôles Web enrichis

permettant d’apporter à cette dernière, de nouvelles

fonctionnalités AJAX, au travers de contrôles ASP .NET.

-Il contient plus de 30 contrôles qui vous permettent de

créer facilement des riches, des pages Web interactives.

89



AJAX Control Toolkit

-Pour l’intégrer il faut l’installer :

• Installation à partir d’un lien

https://www.devexpress.com/Products/AJAX-Control-Toolkit/

•Installation à partir NuGet Package Manager:

Une collection d'outils pour automatiser le processus de

téléchargement, l'installation, la mise à niveau, la configuration et

la suppression de paquets à partir d'un projet Visual Studio.

90

https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/


AJAX Control Toolkit

-Installation à partir NuGet Package Manager:

Outils-->Gestionnaire de package Nuget-->Gérer les packages

Nuget pour la solution

91



AJAX Control Toolkit

-Insérer les nouvels éléments dans la boite à outils de VS:

Click droit en toolbox?Ajouter un onglet?Insérer un nom

-Click droit sur le nouvel onglet?Choisir les 

éléments?sélectionner le fichier AjaxControlToolkit.dll

92



AJAX Control Toolkit

Exemple: 

-le contrôle Editor

-Le contrôle AutoComplete est un extender de 

TextBox qui fournira une auto-complétion de ce 

qui est écrit dans le TextBox. Il fonctionne grâce 

à un service web qui doit avoir pour signature :

public string[] RecupererListe(string Text){ ... 

}

93



AJAX Control Toolkit
AutoComplete 1/2: 

94



AJAX Control Toolkit

AutoComplete 2/2: 

95


, _version_=1670762142136008704, _root_=3])
org.apache.solr.common.SolrException: Exception writing document id 3 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:03.858 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.886 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:03.926 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=Génielogiciel-IOC.pdf, description=genie logiciel, date_up=2020-06-27 05:36:15.0, id=4, title=génie logiciel, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/Génielogiciel-IOC.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

A.U:2019-2020

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular

Génie logiciel en .Net



Génie logiciel en .Net

Chapitre3:

3



Génie logiciel en .Net

-Le génie logiciel est une science qui s'intéresse aux

procédures systématiques qui permettent d'arriver à créer

des logiciels fiables qui correspondent aux attentes du client,

avec un coût d'entretien réduit et de bonnes performances

tout en respectant les délais et les coûts de construction.

Qualité logicielle=Qualité fonctionnelle+Qualité structurelle

4



Génie logiciel en .Net

Dans ce cours on va voir l’application des deux principes

qui sont parmi les bonnes pratiques pour produire des

logiciels fiables

IOC -Inversion Of Control-

Les tests unitaires

5



IOC
-Inversion Of Control-

6



Principe ouvert/fermé

-En POO, le principe ouvert/fermé affirme qu'une classe doit

être à la fois ouverte (à l'extension) et fermée (à la

modification):

oOuverte : signifie qu'elle a la capacité d'être étendue.

oFermée: signifie qu'elle ne peut être modifiée que par

extension, sans modification de son code source.

7



Principe ouvert/fermé

Pourquoi ce principe?

1.La modification d'un code existant peut ne pas être

possible.

2.La modification peut provoquer l'apparition de bugs dans

cette partie du code. Il faut alors refaire la liste des tests

de non régression, ce qui peut entraîner des surcoûts non

négligeables.

8



Principe ouvert/fermé

Pourquoi ce principe?

3.la modification d'un code existant peut provoquer des problèmes

bien plus graves qu'un bug en terme de maintenance: le code

devient fragile, visqueux, rigide ou plus immobile :

Rigide un petit changement induit une grande quantité de petit
changements à d'autres endroits dans le logiciel

Fragile un changement mineur provoque des bugs dans d'autres endroits du
logiciel

Immobile impossible de réutiliser une partie du logiciel pour effectuer
d'autre tache dans le logiciel ou à l'extérieur de celui-ci.

visqueux moins coûteux d'introduire du code de mauvaise qualité plutôt que
du code respectant l'architecture d'origine.

9



Principe ouvert/fermé

-L'idée est qu'une fois qu'une classe a été approuvée via

des revues de code, des tests unitaires et d'autres procédures de

qualification, elle ne doit plus être modifiée mais seulement

étendue.

Le principe ouvert-fermé, est l'un des principe fondateur de

l'architecture orientée objet. Son application a pour principe

l'écriture d'un code source évolutif, dont les extensions ne touchent

pas (ou peu) le code source déjà existant. On évite ainsi le

pourrissement de l'architecture en garantissant que celle ci ne sera

pas rigide/fragile/visqueuse ou immobile par l'intégration d'une

nouvelle fonctionnalité.
10



Application de principe de ouvert/fermé

Exemple:

Soit l’application suivante qui implémente l’architecture 3-tiers 

suivante:

DAO

GetData()

Metier

donne: DAO

TraiterDonnee()

Presentation

met:Metier

Main()

11



Application de principe de ouvert/fermé

Exemple:

12



Problème du couplage fort

-Le couplage est une métrique indiquant le niveau d'interaction

entre des classes ou des modules:

-Couplage fort: si les composants échangent beaucoup

d'information.

-Couplage faible: si les composants échangent peu

d'information.

13



Problème du couplage fort

-Dans l’exemple précédent, les classes DAOImpl/MetierImpl et

les classes Presentation /MetierImpl sont liées par un couplage

fort.

-Donc si on veut créer une nouvelle version de la méthode

GetDonne() de la classe DAOImpl,nous serons obligés d’éditer le

code source des classes DAOImpl et metierImpl

On a pas respecté le principe « une application doit être

fermée à la modification et ouverte à l’extension »

Rendre l’application faiblement couplé
14



Couplage faible

-Pour appliquer le couplage faible il faudra passer par les interfaces

au lieu de passer par les classes directement.

-la classe A peut fonctionner avec n’importe quelle classe qui

implémente l’interface IB.

-Par la suite, n’importe quelle classe implémentant interface IB

peut être associée à la classe A ?le code de la classe A sera

fermé à la modification
15



Couplage faible

-Pour appliquer le couplage faible il faudra passer par les

interfaces au lieu de passer par les classes directement

-La nouvelle conception

IDAO

GetData()

MetierImp

donne: IDAO

TraiterDonnee()

IMetier

TraiterDonnee()

DAOImp

GetData()
16



Couplage faible

17



Couplage faible

On applique la notion de IOC

18



IOC -Inversion of control-

-L’inversion de contrôle est un patron d'architecture commun à

tous les frameworks . Il fonctionne selon le principe que le flot

d'exécution d'un logiciel n'est plus sous le contrôle direct de

l'application elle-même mais du framework ou de la couche

logicielle sous-jacente.

- Il est connu aussi étant « l'inversion de dépendances » qui est

un patron de conception permettant, en POO, de découpler les

dépendances entre objets.

19



Inversion de dépendances

-L'inversion des dépendances est une implémentation de

l'inversion de contrôle. Pour diminuer le couplage entre les

classes, on va ajouter une interface entre chaque classe,

de façon à ce qu'au lieu d'appeler une classe physique,

l'appelant appelle une interface, ceci permettant d'ajouter

un niveau d'abstraction supplémentaire entre l'appelant et

l'appelé.

20



Inversion de dépendances

-Pour appliquer le principe de IOC ,on peut procéder de 3

façons:

• Instanciation statique

• Instanciation dynamique

• Utiliser des conteneurs IOC

21



Inversion de dépendances

•Instanciation statique :

-Appliquée dans l’exemple précédent

-Ses limites: l’application n’est pas fermé à la modification d’une

manière définitive puisqu’on a accédé au code source de la classe

présenation afin de déterminer le type de la classe DAOImpl à

utiliser par la suite

-Il faut trouver un moyen pour que le code source de la classe

présentation reste aussi fermer à la modification

Utiliser l’ Instanciation dynamique

22



Inversion de dépendances

• Instanciation dynamique:

-L'instanciation dynamique d'objet permet de créer un objet à un

instant donné et de libérer cet objet lorsqu'il n'est plus utilisé.

-On l’utilise quand l'objet alloué n'est pas connu à l'avance ou

qu'il n'est pas certains d'être utilisé, par contre on utilise statique

dans tous les autres cas normaux.

Cas d’utilisation: nous voulons créer plusieurs implémentations

de classes qui réalisent une même interface, et choisir à

l'exécution quelle implémentation utiliser

23



Inversion de dépendances

• Instanciation dynamique:

-Instanciation statique: on utilise new

-Instanciation dynamique:

1. Obtient le type de l’objet à instancier

2. Crée une instance du type spécifié en utilisant le constructeur

par défaut de ce type.

24



Inversion de dépendances

• Appliquer l’instanciation dynamique:

1.On crée un fichier de configuration contenant la liste des

implémentations possibles

2.On fait des instanciations dynamiques qui se basent sur

le fichier de configuration crée.

25



Inversion de dépendances

Exemple
1. Fichier de configuration

26



Inversion de dépendances

2. Instanciation  dynamique:

27



Conteneurs IOC

•Injection de dépendances

l'injection de dépendances est une technique permettant de

mettre en oeuvre l'inversion de dépendances.

•Conteneurs IOC:

-Les conteneurs IoC sont des outils spécifiquement conçus pour

faciliter l'injection de dépendances.

-Le conteneur récupère la responsabilité de l'instanciation des

classes qu'elle doit injecter. On va voir comment ça passe dans

le code.

28



Conteneurs IOC

Le conteneur reçoit les instructions sur les objets à instancier,

configurer, assembler par la lecture des métadonnées de

configuration fournis. Les métadonnées de configuration peut

être représentées soit par XML, annotations C#, ou un code C#.

Métadonnée de  

configuration

Conteneur 

IOC
Instanciation 

des objets

29



Unity

-Unity est un conteneur IoC publié par Microsoft .Il facilite la

construction d'applications faiblement couplées

•Installation:

•Après Installation

30



Unity

31



Unity

1.Instancier un objet de conteneur

2.Configuration de dépendance: on ajoute la classe DAOImpl

au conteneur

3.Résoudre la dépendance en utilisant le conteneur IOC

4.Maintenant on pourra appeler la fonction TraitementDonne

qui appellera GetDonne de la classe DAOImp

Remarque: Il y’a 2 modes d’instanciation lors de configuration

de dépendance

32



Unity

•Mode d’instanciation:

-AddSingleton:

Il crée une instance unique dans toute l'application. Il crée

l'instance pour la première fois et réutilise le même objet dans

tous les appels.

33



Unity

•Mode d’instanciation:

-AddTransient:

Les objets auront une durée de vie transitoire,ce mode crée une

nouvelle instance à chaque fois ces objets seront demandés

34



Unity MVC5

Exemple: On crée une application ASPMVC5

1.Ajout des services

35



Unity MVC5

Unity.Mvc5 est une bibliothèque qui permet l'intégration simple

du conteneur Unity IoC de Microsoft avec ASP.NET MVC 5.

• Installation:

36



Unity MVC5

• Configuartion des services

La configuration de l’injection de dépendance en ASP MVC se

fait dans le fichier UnityConfig.cs

37



Unity MVC5

• Configuartion des services

Ajoutez un appel à UnityConfig.RegisterComponents () dans la

méthode Application_Start de Global.asax.cs pour que le

framework MVC utilisera ensuite Unity.Mvc5 DependencyResolver

pour résoudre les dépendances.

38



Unity MVC5

•Utilisation des services :Controller

39



Unity MVC5

•Utilisation des services :View

40



Unity MVC5

• Résultat d’exécution:

-Mode Transient:

-On a une valeur pour chaque appel

41



Unity MVC5

• Résultat d’exécution:

-Mode singleton:

-On a le même résultat pour les deux appels

-Aussi si on fait un refresh/ou on passe à un autre

navigateur ,toujours on a le même résultat

42


, _version_=1670762142289100800, _root_=4])
org.apache.solr.common.SolrException: Exception writing document id 4 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:04.147 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Calibri,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:04.158 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:04.369 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:04.386 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=NETCore-partie1.pdf, description=net core asp mvc, date_up=2020-06-27 05:36:58.0, id=5, title=netcore, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/NETCore-partie1.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular en ASP.Net Core

Génie logiciel en .Net



.Net Core

Chapitre7:

3



Plan du chapitre 

?.Net Core

?Docker

?ASP .Net Core

?Développement sous linux

? Entity Framework

?Inversion du contrôle

?Les sessions et les cookies

?JWT

4



C’est quoi le .Net Core?

-La tendance actuelle de Microsoft: ouverture à un nouveau type 

de client. 

5



C’est quoi le .Net Core?

-C’est une nouvelle implémentation open source de .NET

qui va nous permettre d'écrire du code multiplateforme

pour les charges de travail optimisé pour le cloud.

6



Caractéristiques de .Net Core

• Multiplateforme: càd cross plateforme

• Open source: Le Framework .Net Core est open source et

disponible sur GitHub.

7



Caractéristiques de .Net Core
• Modulaire: .NET Core est modulaire dans son architecture car on ajoute au

project.json uniquement les dépendances dont on a besoin. Par défaut, il n’y

en a pas, et Visual Studio et Nuget se chargent de télécharger les fichiers

correspondant aux dépendances supplémentaires.

- Dans le Framework .Net classique, il est nécessaire d’installer l’ensemble

du Framework. Les applications se basent ensuite sur le GAC pour trouver les

librairies à utiliser.

-Dans le .Net Core l’ensemble des librairies utilisées par l’application sont

fournies à l’application, càd chaque application vivra avec ses versions de

librairies. Il n’y aura plus de dépendances entre les applications, cela via l’outil

DNU (DN Update) de DNX(Dot Net eXecution)

-Le DNX est un sdk open source ainsi qu'un environement d'exécution qui

permet le développement d'applications .Net pouvant fonctionner sur

windows,OSX ou linux.
8



Caractéristiques de .Net Core

•Côté exécution:

-.Net Core est plus rapide dans l’exécution

-.Net Core est folder base et non project base càd si on

supprime/ajoute quelque chose dans le dossier sera

directement supprimé/ajouté dans le projet en visual studio

9



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-On reste pas limiter à IIS puisque la configuation de projet se fait

dans le projet.json et le fichier startup càd pas de web.config qui

est spécifique à IIS.

-Pour l’exécution microsoft fournit un serveur, Kestrel. Ce serveur

est également développé avec .NET Core, et lancé avec DNX.

c'est un serveur multiplateforme.

10



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-Kestrel est pris en charge sur toutes les plates-formes

-On peut utiliser Kestrel seul ou avec un serveur proxy inverse , tel

que IIS,Apache ou Nginx. Un serveur proxy inverse reçoit des

requêtes HTTP provenant d'Internet et les transmet à Kestrel

après un traitement préliminaire.

11



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-Kestrel avec IIS: Lorsque on utilise IIS ou IIS Express en tant que

proxy inverse pour ASP.NET Core, l'application ASP.NET Core

s'exécute dans un processus distinct du processus de travail

IIS. Dans le processus IIS, un module IIS spécial s'exécute pour

coordonner la relation de proxy inverse. C'est le module de base

ASP.NET . Les principales fonctions du module principal ASP.NET

sont de démarrer l'application ASP.NET Core, de la redémarrer

lorsqu'elle se bloque et de lui transférer le trafic HTTP au serveur

kestrel

-Kestrel avec Nginx:

12



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-Possibilité de déployer sous Doker , afin de nettement faire

baisser les coûts des licences liés aux applications .NET.

-Docker est une application open source permettant

d’automatiser le déploiement d'applications dans des

conteneurs logiciels.

-Docker s’intégre dans les outils de la mise en place de

Devops

13



DevOps

-C’est une philosophie de développement qui vise à  créer 

une collaboration  entre l’équipe de développement et les 

opérationnelles afin de développer;

-Outils qui aident à arriver à ce but

-Les outils de développement continue comme Git/SVN

-Les outils d’automatisation des tests unitaires et les tests 

d’intégration comme Jenkins

-Outils d’automatisation de déploiement comme :Docker

14



Docker
Avant docker:

1.le développeur :développe l'application puis génère le package de

l'application à déployer: l'ensemble de file cs .Net ou le fichier war en java.

2.Il doit déterminer l'ensemble des dépendances et des configurations à

mettre en place pour que l'application fonctionne correctement

3.L'opérationnel : doit installer et configurer tous ce qui est demandé par le

développeur

4.Si le développeur effectue des mises à jour, l'opérationnel doit refaire

l'étape précédente-->la vie sera difficile pour l'administrateur système--

>Avoir des conflits avec le développeur+beaucoup de temps pour le

déploiement

15



Docker

Avec docker:

1.Le développeur développe l’application et construit une image

docker contenant toutes les dépendances nécessaires pour son

exécution.

2.L’opérationnel instancie le conteneur et fait un « run » de

l’image précédente

16



Docker

17



C’est quoi docker

• C’est un conteneur permettant de créer un environnement

d’isolation d’une application

• Un conteneur effectue un regroupement de tous les fichiers

nécessaires à l’exécution d’un programme(code,runtime,outils

de SE, bibliothèque..)

18



Docker

le développeur va développer l’application et la mettre

dans un conteneur et par la suite avec des simples

commandes on va arriver à déployer et démarrer

l’application?on aura pas des conflits entre les versions et

les différences dépendances utilisées pour chaque service

de l’application

19



Mise en place de docker

Pour commencer à utiliser docker il faut avoir

-le moteur docker:Exécute des commandes nécessaires pour

créer et exécuter les images docker

-docker client:pour commencer à interroger avec le moteur

docker

Remarque: On a aussi Docker hub c’est une plateforme dans

laquelle on peut publier les conteneurs

20



Les principales commandes de docker

• docker build:pour créer une image

• docker push image:publier une image sur docker hub

• docker pull image:pour télécharger une image

• docker run image:exécuter une image

21



Implémentation de docker

1.Le développeur crée l’application

2.Le développeur crée un dockerfile:un fichier qui contient

quelques lignes décrivant les dépendances que

l’application aura besoin

3.Puis il exécute la commande docker build qui permet de

créer une image de projet

4.Une fois l’image créé il peut la publier sur Docker hub via

la commande docker push

22



Implémentation de docker

5. L’administrateur va appeler la commande ‘Docker run’:pour

exécuter une image sur une machine càd démarrer l’application

sur un conteneur?l’administrateur système n’a pas besoin de

plusieurs éléments pour qu’il puisse déployer l’application il va

rien installer chez lui

23



Docker en .Net

24



Docker en .Net

25



ASP.Net Core

26



Environnement du developpement .Net 
Core

-Il faut avoir DNX qui représente l’environnement d’exécution

-Il faut avoir Kestrel pour faire fonctionner une application

-Coupler l’application avec un serveur proxy

Windows IIS

Linux Nginx

27



Environnement du développement. Net Core

• Sous Windows

Etape1: Installation de visual studio community 2017

Etape2: Installation .Net core (cela s’installe implicitement avec

VS2017)

Etape3: Avoir power shell3.0 pour qu’on puisse installer les

dépendances

28



Environnement du développement. Net Core

• Sous linux

Etape1: Installation des dépendances .NET Core

Cela dépend de la version de linux voir le lien

https://www.microsoft.com/net/learn/get-started/linux/rhel

Etape2: Installation de Visual studio code

https://www.microsoft.com/net/learn/get-started/linux/rhel#editor

Remarque:Microsoft a produit une version sql server pour linux

https://www.windows8facile.fr/installer-sql-server-linux-ubuntu/

29

https://www.microsoft.com/net/learn/get-started/linux/rhel
https://www.microsoft.com/net/learn/get-started/linux/rhel


Environnement du développement. Net Core

• Sous linux

-Installation de NPM: package manager qui facilite l’installation

des packages à partir d’internet

sudo apt-get install npm

//Mettre à jour la version de NPM

sudo npm install -g npm

//InstallerNode.js

sudo apt-get install nodejs-legacy

30



Environnement du développement. Net Core

• Sous linux

-Installation Yeoman: permet d’avoir des templates des projets

de .Net

sudo npm install -g yo

-Installer ASP.Net Generator

sudo npm install -g generator-aspnet

-Installation de Bower: package manager pour le web

sudo npm install -g bower

31



Environnement du développement. Net Core

• Sous linux

Remarques:

-Certains modèles de Yeoman utilisent des versions

"anciennes" .Net Core. Exécuter cette commande pour corriger

ces dépendances en installant toutes les versions .Net Core

Framework.

sudo apt-get install dotnet-dev*

32



Environnement du développement. Net Core

• Sous linux

-Création du projet

mkdir Projet1

cd Projet1

yo aspnet

Remarque:si vous recevez des erreurs concernant le droit

d’accès exécuter la commande suivante

sudo chmod -R 777 ~/.config/".

33



Environnement du développement. Net Core

• Sous linux

34



Environnement du développement. Net Core

• Sous linux

Pour exécuter l'application, exécuter les deux commandes

suivantes :

dotnet restore

dotnet run

35



Architecture d’une application ASP.Net Core

Ajouter nouveau projet?ASP.Net Core

36



Architecture d’une application ASP.Net Core

•Dépendances: contient toutes les librairies utilisées dans le

projet.Ces librairies vont être déclarées dans le fichier project.json.

•project.json: un fichier qui déclare les dépendances du projet. lorsque

nous ajouterons de nouvelles dépendances via NuGet, elles seront

ajoutées ici.

•Appsetting.json: fichier de configuraton de l’application :paramètres

de chaine de connection

•wwwroot: contient les fichiers statiques de

l’application:html,css,images,javascripts…

•Statup.cs:repérsente la classe du démarrage. Il dispose de deux

méthodes qui sont invoquées à chaque démarrage du projet Web

37



Architecture d’une application ASP.Net Core

•Program.cs:contient la méthode Main c’est lui qui démarre le

serveur kestrel

Remarque: En VS2017 le projet.json est remplacé par le

project.xml.Pour l’afficher click droit sur le projet?Modifier

NotreApplication.csproj.

-Il y’a la possibilité de créer un projet ASP.NET core(.Net

Framework) càd un projet qui prend les privilèges de .Net

core(structure du projet/multiplateforme) mais il prend toutes les

dépendances de .Net framework

38



Développement en ASP.Net core

-Tous ce qui est vu en ASP MVC est valable en ASP.Net

core

-Les points de différence vont se traiter dans

les prochaines diapositives.

39



Entity framewok.net core

Pour utiliser entity framework dans les projets.Net Core, on doit

l’installer dans le projet concerné via Nuget.

Install-Package Microsoft.AspNetCore.All -Version 2.0.3

Install-Package Microsoft.EntityFrameworkCore.SqlServer -Version 2.0.1

Install-Package Microsoft.EntityFrameworkCore.Tools -Version 2.0.1

Install-Package Microsoft.EntityFrameworkCore.SqlServer.Design -Version 1.1.5

Install-Package Microsoft.VisualStudio.Web.CodeGeneration.Design -Version2.0.1

40



Entity framewok.net core

•Code First:

-Etape1:Model ? ajouter une classe(dans laquelle on va définit

la structure de notre table)

41



Entity framewok.net core

•Code First:

-Etape2:Controler ? ajouter « Controleur MVC avec vues,utilisant

Entity Framework »

-Le dataContext va étre générer dans un Dossier appelé « Data »

-La chaine de connexion s’ajoute dans le fichier « appsettings.json »
42



Entity framewok.net core

•Code First:

-Etape3: génération de la base de donnée

Add-Migration Initial -Context TPMVC2018.Models.TPMVC2018Context

?La commande Add-Migration va créer dans notre projet un

dossier “Migrations”, avec du code représentant le schéma de

notre base de données.

Update-Database Initial -Context TPMVC2018.Models.TPMVC2018Context

?La commande Update-Database va utiliser le code précédent  

pour mettre à jour la base de données. 

43



Entity framewok.net core

•Code First:

Remarque: Au cas des erreurs lors de création de la BD:

-Vérifier qu’il n’y’a pas des problèmes au niveau de chaine

de connection dans appsettings.json

44



Entity framewok.net core

• DataBase First:

Etape1: Création le modèle EF basé sur notre base de données

Pour cela exécuter la commande suivante dans la console Nuget

45

Scaffold-DbContext "Data source=user-pc\sqlexpress;Initial

Catalog=tp1ADO;Integrated Security=true" 

Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models



Entity framewok.net core
• DataBase First:

Etape2:Enregistrez votre contexte avec l'injection de

dépendance

?Supprimer la configuration de contexte en ligne:

Dans ASP.NET Core, la configuration est généralement effectuée dans

Startup.cs. Pour se conformer à ce modèle, nous allons déplacer la

configuration du fournisseur de base de données vers Startup.cs.

46



Entity framewok.net core

• DataBase First:

Etape2:Enregistrez votre contexte avec l'injection de

dépendance

?Ajoutez le constructeur suivant, qui permettra à la configuration

d'être passée dans le contexte par injection de dépendance

47



Entity framewok.net core

• DataBase First:

Etape2:Enregistrez votre contexte avec l'injection de

dépendance

?Enregistrez et configurez le contexte dans Startup.cs

Pour que nos contrôleurs MVC puissent utiliser le context de

données « tp1ADOContext », nous allons l'enregistrer en tant

que service.

48



49

Inversion du contrôle



Microsoft Dependency Injection

•Installation:

Install-Package NLog.Extensions.Logging -Version 1.0.0-rtm-rc7

Install-Package Microsoft.Extensions.DependencyInjection -Version 2.0.0

50



Microsoft Dependency Injection

•Configuration des métadonnées(Définition de dépendance)

-ServiceCollection est une collection qui va être responsable

d’établir la correspondance entre l’interface et son

implémentation(service à utiliser)

-C’est comme ça qu’on ajoute la configuration dans le conteneur

51



Microsoft Dependency Injection

•Instanciation des objets:

52



Microsoft Dependency Injection

•Mode d’instanciation:

-AddSingleton:

Il crée une instance unique dans toute l'application. Il crée

l'instance pour la première fois et réutilise le même objet dans

tous les appels.

53



Microsoft Dependency Injection

•Mode d’instanciation:

-AddTransient:

Les objets auront une durée de vie transitoire,ce mode crée une

nouvelle instance à chaque fois ces objets seront demandés

54



Microsoft Dependency Injection

•Mode d’instanciation:

-AddScope:

il crée une instance pour chaque requête http mais on utilise la

même instance dans les autres appels de la même requête

Web.

55



Microsoft Dependency Injection

Exemple: On crée une application ASPMVC.Net Core

1.Ajout des services

56



Microsoft Dependency Injection

2.Configuartion des services

La configuration de Microsoft Dependency Injection en ASP

MVC se fait dans le fichier Startup.cs

57



Microsoft Dependency Injection

3.Utilisation des services :Controller

58



Microsoft Dependency Injection

3.Utilisation des services :View

59



Microsoft Dependency Injection

3.Résultat d’exécution:

-Mode singleton:

-On a le même résultat pour les deux appels

-Aussi si on fait un refresh/ou on passe à un autre

navigateur ,toujours on a le même résultat

60



Microsoft Dependency Injection

3.Résultat d’exécution:

-Mode scoped:

-On a le même résultat pour les deux appels

-Mais si on fait un refresh/ou on passe à un autre navigateur on

aura un autre résultat

61



Microsoft Dependency Injection

3.Résultat d’exécution:

-Mode Transient:

-On a une valeur pour chaque appel

62



Microsoft Dependency Injection

Remarque:

-ASP MVC.Net core intègre un support pour l’injection de

dépendances.

63



Microsoft Dependency Injection

• FormService:

-Ici on doit passer par un constructeur ,sinon s1 et s2 reste null

64



Microsoft Dependency Injection

• FromService:

C’est une annotation  utilisé pour injecter l’objet donc ici ce 

n’est pas la peine d’ajouter un constructeur.

65


, _version_=1670762142771445760, _root_=5])
org.apache.solr.common.SolrException: Exception writing document id 5 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:05.106 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=GL-intro&CdP-baraka-2019.pdf, description=gl, date_up=2020-06-27 16:44:38.0, id=7, title=gl, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/GL-intro&CdP-baraka-2019.pdf, user_name=Zidani Mohamed, text=
Kamal BARAKA
baraka.kamal@yahoo.fr

Le contenu de ce support de cours a été influencé par les lectures citées à la fin de ce support. 

Génie Logiciel  

Université Cadi Ayyad
ENSA de Safi

Département Informatique Réseaux et Télécommunications 



Définition : Logiciel 

l Ensemble de
? Programmes informatiques,
? Système d'exploitation,
? Etc.

l Logiciel = ensemble de programmes qui coopèrent 
pour réaliser un objectif bien défini.

l Programme = ensemble d'instructions exécutées 
pour accomplir une tâche bien précise.



Définition : Génie Logiciel 

l Ensemble des activités de conception
? Développement, 
? De l'exploitation
? Et de la maintenance des logiciels,

l Application de l’ingénierie au logiciel



Pourquoi c’est si important ?
Aujourd’hui, le logiciel contrôle le monde ! 

• Processus métiers (administrative etc.)

• Gouvernement

• L’industrie(Usines, chaines de fabrication)

• Transports

• Défense, finance, santé…

• Edition, médias…

• Les nouvelles technologies du web, commerce électronique…

• Et bien plus!! 

Des enjeux aussi bien économiques que politiques 



Pour c’est si important ?

Les conséquences en cas de problèmes peuvent être très 
lourdes! 

• Therac 25,'85‘87: 6 patients irradies, 2morts

• Syst. Bagages Aeroport Denver,'95:16 mois, 3.2Mds$

• Ariane 5vol 88/501,'96: 40s de vol,destr., 850M$

• Mars Climate Orbiter & Mars Polar Lander,'99: destr. 



Le talon d’Achille du GL

• Le coût
• Le temps
• La qualité? 



Quelques chiffres !
Source: The Standish Group 

• Successful means on-time, on-budget, and with all features and functions as defined in the initial scope; 

• challenged means late, over budget, and/or with less features and functions than defined in the initial scope; 

• failed means cancelled prior to completion, or delivered but never used. 



Quelques chiffres !
• Le taux de succès en constante hausse, mais le 

taux d’ échec reste aléatoire 



Evolution du logiciel

l La livraison n'est pas une fin en soi :
? Après sa livraison un logiciel peut être modifié.
? Chaque modification transforme un peu plus le 

logiciel
? Le logiciel évolue en fonction de l'évolution du 

matériel.
l Augmentation du nombre de lignes de code est dû à 

la complexité croissante des systèmes conçus.



Exemple d'évolution d'un logiciel

l Windows



Evolution d'un logiciel

l Noyau Linux

Jours de développement

N
om

br
e 

de
 li

gn
es



Coût de développement



Bogue (Errata)

l Il y a entre 0,5 et 3 erreurs de programmation 
toutes les 1000 lignes de code [Bell Labs].

l Cela entraîne les conséquences suivantes :
? 2 projets sur 3 sont livrés en retard ou ont 

dépassé le coût initialement estimé.
? 2 projets sur 3 révèlent d'importants défauts

ou montrent une instabilité durant leur 
première année d'exploitation.

? Coût estimé des bogues :
l 60 milliards de $ par an (aux états unis)



Coût de maintenance

l Il peut atteindre 70% du coût total



Facteurs d'échec d'un projet

l Fonctionnalités non prévues (non souhaitées)
l Développement imprécis
l Problèmes d'intégration 
l Réécriture du code source
l Absence de documentation motivant les 

décisions prises lors de la conception
l Etc.



Risque d'abandon

l 30% des projets informatiques sont annulés avant 
la mise en production.

l 90% des projets informatiques sortent en retard.
l Le risque d'abandon ou de retard important 

augmente de plus en plus rapidement à mesure 
que la taille globale du projet croît.

l Coût estimé des abandons :
? des milliards de dollars par an (aux états unis)



Problème de qualité du logiciel

l 50% des projets informatiques ne répondent 
pas aux besoins des acheteurs :
? Le logiciel ne correspond pas aux besoins
? Consomme plus de moyens informatiques 

que prévu
? Tombe en panne,
? Etc.



Dépassement de budget prévu

l Modifications effectuées après la livraison d'un 
logiciel coûtent cher, et sont à l'origine de nouveaux 
défauts.

l Les adaptations sont bien souvent une nécessité du 
fait de l'évolution des produits et des attentes des 
utilisateurs.

l 50% des projets informatiques dépassent le budget 
prévu :
? Maintenance corrective : 20%
? Maintenance adaptative : 25%
? Maintenance évolutive ou perfective : 55%



19

Sonde Mariner 1 (1962)



20

Sonde Mariner 1 (1962)

l Coût: 18,5 millions de dollars.
l catastrophe: Mariner 1 est la première sonde du

programme mariner, lancée le 22 juillet 1962
pour mission de survol de vénus mais cette
dernière a détourné un peu sur le trajectoire de
sa destination pour causer sa destruction après
293 secondes de son décollage.

l Cause: Le programmeur a mal transcrit une
formule manuscrite en informatique.



21

Sonde Mariner 1 (1962)
l Détails: La défaillance provient d'une erreur de

transcription manuelle dans la spécification du
programme de guidage. Le rédacteur a oublié la
barre souscrite dans la formule .

l Le manque de cette barre a causé une mal
interprétation des valeurs (variation du temps) et
lors des corrections induites qui ont été erronés.

l Le programme de contrôle ne lisse plus les
valeurs de la vitesse et réagit brutalement à des
variations mineures

l La fusée a perdu sa trajectoire , ce qui obligea
l’officier de sécurité de commander sa
destruction après 297 secondes.



22

Destruction d'Ariane 5 (1996)
l Cause directe : Conversion entier/flottant non

autorisée.
l Impact :

? Explosion 30s après le décollage
? 1 année de retard pour le programme Ariane 5

l Origine :
? Reprise du code spécifié pour Ariane 4
? Absence de tests de validation pré-vol
? Désactivation de la gestion des exceptions
? Conservation de code inutile



23

Perte de Mars Climate Orbiter (1999)

l Cause directe : Confusion entre pieds et
mètres.

l Impact :
? Destruction de la sonde à l’entrée de

l’atmosphère martienne
? Coût : 120 millions de $



24

Bogue de l'an (2000)
l Cause directe : Codage de
la date sur 2 caractères.

l Impact :
? Très nombreuses mesures préventives et

correctives
? Coût : estimé à 500 milliards de F

l Origine :
? Arbitrage économie mémoire / durée de vie
? Mauvaise perception de la durée de vie des

logiciels



25

Echec du missile Patriot (1991)



26

Echec du missile Patriot (1991)

l Coût: 28 soldats morts, 100 blessés.
l Catastrophe: Au cour de la première guerre de

golfe , un système Américain des missiles Patriot
en Arabie Saoudite n’a pas réussi à suivre et à
intercepter un missile Scud Irakien entrant.

l Le missile a détruit une caserne de l’arme
Américaine.

l Cause: un calcul inexact du temps depuis le
démarrage en raison d'erreurs arithmétique des
ordinateurs.



27

Echec du missile Patriot (1991)

l Détails: la durée a calculer c’est le temps en
deuxièmes seconde mesuré par l’horloge interne
du système multiplier par 1/10 pour produire le
temps en seconde.

l L'erreur est que le registre utilisé dans le Patriot
est de taille 24 bit ce qui produit au lieu de stoker
la valeur binaire:
0,0001100110011001100110011001100
le système a stocké la valeur:
0,00011001100110011001100



28

Echec du missile Patriot (1991)

l Ce qui implique une différence de
0,0000000000000000000000011001100 et si
on la transforme en seconde après un simple
calcul (0,000000095 × 100 × 60 × 60 × 10 =
0,34) on trouve qu’il ya un décalage horaire de
0,34 seconde.

l Alors cela a été assez loin pour que le Patriot
puisse suivre et intercepter le Scud.



29

Division du Pentium (1994)



30

Division du Pentium (1994)

l Coût: 475 millions de dollars, la crédibilité des
entreprises.

l Catastrophe: Le bug de la division du Pentium
est un bug informatique ayant affecté le
microprocesseur Pentium du fabricant Intel peu
après son lancement en 1994 : une erreur était
introduite lors de certaines opérations de
division.

l Cause: l'initialisation incomplète d'une table de
valeurs servant à la division, plus rapide.



31

Division du Pentium (1994)

l Détails: en octobre 1994 le professeur Thomas
Nicely dévoile un disfonctionnement de l’unité de
calcul en virgule flottant du pentium. Il s’est
rendu compte que certaines opérations de
division renvoient toujours des valeurs erronée
sur ce processeur. Ces erreurs ont été
rapidement confirmé par d’autres personnes.

l Ce bug est appelé « bug FDIV du Pentium » où
FDIV est l'instruction de division en virgule
flottante des microprocesseurs x86.



32

Division du Pentium (1994)

l L'erreur provenait de l'initialisation incomplète
(dans le silicium) d'une table de valeurs servant
à un nouvel algorithme de division, plus rapide.

l La présence de ce problème convient dans
l'exemple suivant :

4 195 835,0 / 3 145 727,0 = 1,333 820 449 136
241 002 (valeur correcte),

4 195 835,0 / 3 145 727,0 = 1,333 739 068 902
037 589 (valeur retournée par le processeur).



33

Traitement du cancer (2000)

l Coût: 8 morts, 20 blessés graves
l Catastrophe: Le logiciel de radiothérapie par us

système internationale multi data a mal calculé
les dosages approprié et en exposant les
patients a des niveaux nocives et parfois
mortelles de rayonnement.

l Les médecins qui sont responsables de vérifier
les calculs sont condamnés .



34

Traitement du cancer (2000)

l Cause :
l Les doses de rayonnement calculées par le logiciel

sont basé sur l’ordre dans lequel les données ont été
saisie

l parfois il y a saisie des doubles doses ce qui conduit
a une erreur dans le calcul suivant.



Les difficultés liées au GL 
La complexité? intrinsèque d'un projet 

• L’ ingénierie du logiciel est un métier récent en 
comparaison avec d’autres métiers 

• le fameux parallèle avec le bâtiment 

La nature du produit informatique 

• De l'information ! copiable, modifiable, 
malléable, bref « soft » 



Les difficultés liées au GL 
Les difficultés liées à la nature du logiciel 

• Un logiciel ne s'use pas, sa fiabilité? ne dépend 
que de sa conception 

• Mais, pour rester utilisé un logiciel doit évoluer 
• Pas de direction clairement exprimée, 
• Changements fréquents, 
• Contradictions des besoins,... 



Les difficultés liées au GL 
Difficultés liées aux personnes 

• ne savent pas toujours ce qu'elles veulent, ou ne 
savent pas bien l'exprimer 

• communication difficile entre personnes de 
métiers différents ( jargons )

• l'informaticien est souvent perçu comme 
introverti, peu solidaire du groupe (...c?a 
change...) 

• beaucoup d ’autodidactes qui croient savoir... 



Les difficultés liées au GL 
Les difficultés technologiques 

• courte durée de vie du matériel,

• beaucoup de méthodes, de langages

• évolution des outils de développement,... 



L’ échec d’un projet informatique 
Cinq raisons majeures : 

• Engagements irréalistes 
• Gestion et conduite de projet inadéquates 
• Manque de contrôle

• pas de planification de la part des développeurs 
• connaissances insuffisantes en gestion de projet 

• Technologies inappropriées (méthodes, outils, 
langages) 

• Validation et vérification insuffisantes 



Conduite de projet 



l Participants ( Rôles )

Production de logiciel  

l Application ( Store ), site Web, Jeux, 
Microcontrôleur, etc.

l Production => Code Source, Exécutable

l Utilisateur

l Développeur

l Propriétaire



Projet logiciel : Commencement 

1- L’utilisateur a besoin d’un logiciel 

2- Le propriétaire demande au 
développeur de réaliser le logiciel

3- Le développeur réalise le logiciel 
qui correspond au besoin de l’utilisateur 



Projet logiciel : Exploitation  
4- Le propriétaire déploie le logiciel

afin que celui-ci soit utilisé  
5- L’ utilisateur utilise le logiciel, il

rencontre des anomalies ou aimerait
voir des évolutions  

6- Le propriétaire demande au développeur
de corriger les anomalies ou de développer 
les évolutions 

7- Le développeur corrige les anomalies 
et réalise les évolutions



Projet logiciel : Fin 

8- L’utilisateur n’utilise plus le logiciel

9- Ou le propriétaire arrête le logiciel  

10- Le développeur ne sert plus à rien.



Cycle de vie – Cycle de développement



Plan de développement de projet...

Euphorie

Inquiétude

Panique

Promotion de ceux
qui n'ont pas trempé

dans l'affaire

Punition
des innocents

1

2
3 4

5
6

Etudes Développement

Essais

Production

Mise en œuvre

Recherche
des coupables

Cahier des Charges Fonctionnel



Cycle de vie

Veut 
répondre au 
besoin.

Cycle de dev

Demande au 
développeur

Développe le 
logiciel

Livre au 
propriétaire Utilise Ano et Evo

Prod / MaintenancePréProd

Teste 
Déploie



Différents types de projet

Projet de mise en production

- Objectif : développer et assurer la mise en production
- Démarre dès l’expression du besoin
- Termine lorsque l’utilisateur le logiciel

Projet de développement 

- Objectif : livrer la première version utilisable par l’utilisateur
- Démarre à partir de l'expression du besoin par le propriétaire

- Termine lors de la livraison par le développeur
TMA ( Pas vraiment un projet )

- Objectif : assurer la maintenance d’une application mise en production
- Démarre lorsque l’utilisateur peut utiliser le logiciel 

- Termine lorsque le logiciel n’évolue plus



Projet de développement (TMA – EVO)
L’utilisateur à un besoin ( même s’il ne le sait pas ) 

Le propriétaire exprime clairement ce besoin 
Cahier des charges

Le développeur spécifie ce qu’il est capable de produire
Réponse au cahier des charges (Spéc )

Le propriétaire accepte la proposition du développeur
Cycle de Dév

Une fois terminé, le développeur livre le logiciel au propriétaire
Livraison 



Participants au projet de développement
MAO ( Maitrise d’Ouvrage) : celui qui possède 

le résultat du projet, et qui paye
=> Le propriétaire

MOE ( Maitrise d’Œuvre ) : celui qui réalise 
le logiciel
=>  Le développeur
L’utilisateur n’apparaît pas réellement dans 
le projet ( représenté par la MOA )
Client, un terme trop ambiguë 

- Le client du propriétaire est l’utilisateur
- Le client du développeur est le propriétaire



Projet de développement : Exemple
Les enseignants chercheurs ont besoin d’un 
site web pour organiser une manifestation 
scientifique
=> Utilisateurs : Enseignants

L’ ENSAS veut répondre à ce besoin en 
demandant à plusieurs sociétés de 
développer ce site web
=> Propriétaire : ENSAS

La société SARL-X réalise le site web qui est 
utilisé par les enseignants chercheurs
=> Développeur : SARL-X



Les 3 grandes phases du cycle de Dév

Analyse 
La MOE spécifie ce qu’elle est capable de 
développer et chiffre le cout 

Développement
La MOE développe les composants définis 
dans la conception et livre le résultat

Conception

La MOE organise son développement, c’est à dire 
précise les gros modules à développer et précise les 
taches



L’ANALYSE

Qui : la MOE

Entrée : Le cahier des charges

Objectif : spécifier ce que la MOE est capable 
de fournir

Sortie : Une spécification de ce qui sera 
développer



LE CHIFRAGE

Le chiffrage se fait en jours-homme 
dans les projets de développement
-1jh = 1 homme qui travail pendant un jour

-20 jh = 1 mh ( mois-homme)

-12 mh = 1 ah ( an-homme)

Idéalement, l’analyse devrait fournir 
les éléments permettant de chiffrer 
le cout
Pour autant, trop souvent le 
chiffrage est réalisé avant l’analyse
Chiffrer un projet nécessite de 
l’expérience

Quelques éléments :
-Développer un écran d’un site web 
par exemple

- 1,5 à 3 jours-homme pour les écran 
simple

- Nombre de ligne de code 
développé en moyenne par 
développeur = 150

- Une classe d’une complexité 
moyenne nécessite donc au moins 
un jour

Taille des projets :
-Petit : max 2 mh
-Moyen : entre 2 mh et 1,5 ah
-Gros : plus de 1,5 ah



LA CONCEPTION

Qui : la MOE

Entrée : La spécification réalisée lors de 
l’analyse

Objectif : décomposer le logiciel en gros 
modules, préciser les taches permettant la 
construction de ces modules

Sortie : Une spécification des composants, de 
leur manière de communiquer, une liste des 
taches.



L’ARCHITECTURE

Le choix d’une architecture facilite 
la mise en place d’une conception
-3 tiers, En couche, Par Service, par 
entrepôt de données, etc.

La définition des modules et leurs 
interactions
-Interface, Protocole, etc.

La projection d’une architecture sur 
un socle logiciel permet 
l’identification des taches

L’identification des taches permet 
de mesurer le travail à réaliser
-RAF : Reste A Faire

Cela permet aussi d’organiser le 
travail dans une équipe
Et de maitriser les délais et les 
risques



LE MODELE 3-TIERS

Trois modules en couche
-Base de données

-Traitement

-Présentation

Focus mis sur la protection des 
données et pas sur les 
performances
Tâches
-Module : BD, Traitement, 
Présentation
-Interface : 

- Traitement <-> BD,
- Présentation <-> Traitement

Tr
ai

te
m

en
t 

Ba
se

 d
e 

do
nn

ée
s

Pr
és

en
ta

tio
n



LA CONCEPTION

Qui : la MOE

Entrée : La définition des modules et la liste 
des tâches
Objectif : coder les modules et livrer le logiciel

Sortie : Le logiciel



L’environnement de développement

Le logiciel est composé d’artefacts 
logiciels (Fichiers)
Il faut savoir qui peut les éditer, les 
modifier, les tester, etc.
L’environnement de développement 
défini ce cadre

Edition collaborative

-Les artefacts sont-ils partagés en 
écriture ?
-Quelles sont les versions ? 
Comment les retrouver ?
Répartition des tâches
-L’affectation des tâches est-elle 
faite par une personne ou par 
l‘équipe?

-Comment suivre l’avancement?



Le CYCLE EN CASCADE

Développement

Conception 

Analyse 



Les tests : CYCLE EN V

Développement

Conception 

Analyse 

Tester le logiciel pendant tout le 
cycle de développement

Selon les phases :
-Analyse : test de validation 

-Conception : test d’intégration
-Dev : test unitaire
Rédaction des tests != faire passer 
les tests



L’ITETRATION : CYCLE EN SPIRALE

Les phases d’Analyse, Conception 
et Codage doivent être réalisées les 
unes après les autres

Pour autant, on peut aussi faire des 
itérations ne prenant en compte 
qu’une partie du cahier des charge

Les nouvelles itérations 
nécessiteront des aménagements 
sur ce qui a déjà été réalisé



L’AGILITE 

Le cahier des charges contient les 
besoins exprimés par le propriétaire 
pour l’utilisateur

Si ces besoins changent au cours du 
projet, l’’impact peut être important 
pour le logiciel

L’agilité considère comme hypothèse 
de base que les besoins peuvent 
changer et qu'il faudra y faire face !!



SYNTHESE 

Cycle de vie

-Cycle de dev,
-Pré-prod,
-Prod ( maintenance)
Propriétaire, Développeur et Utilisateur
Cycle de dev
-Analyse, conception et Dev
Itération (Cycle en spiral)
Test (Cycle en V)
Agilité 



Conduite de Projets –(Réponse au cahier des charges) 
Le cahier des charges du CNRS 
Lisez le cahier des charges du CNRS et considérez que vous e ?tes
une jeune start-up dont le business consiste à réaliser des projets 
de développement. 
Quelles sont les parties du cahier des charges que votre start-up 
est capable de réaliser ? 
Quelles sont les parties du cahier des charges que votre start-up 
n’est pas capable (ou ne souhaite pas) réaliser ? 
Proposez, à l’aire d’un outil de dessin (PowerPoint, Paint, utilisez 
ce que vous voulez), une maquette de ce que vous comptez 
réaliser. 
Chiffrez en jh, le cou ?t de réalisation de cette maquette (on parlera 
de cou ?t brut de réalisation) Proposez un prix de vente de votre 
réalisation ainsi qu’une date de livraison.
A faire: La maquette, le chiffrage brut et le prix de vente. 


, _version_=1670762143526420480, _root_=7])
org.apache.solr.common.SolrException: Exception writing document id 7 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:05.333 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Verdana are not implemented in PDFBox and will be ignored
2020-06-28 16:49:05.399 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Verdana,Italic are not implemented in PDFBox and will be ignored
2020-06-28 16:49:05.505 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=informatique répartie_horloges.pdf, description=info repartie horloge, date_up=2020-06-27 16:45:07.0, id=8, title=info repartie, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/informatique répartie_horloges.pdf, user_name=Zidani Mohamed, text=
Gestion du temps & état 
global

dans un système distribué



Système distribué vs Système centralisé

? Système distribué en opposition à système 
centralisé 

? Système centralisé : tout est localisé sur la 
même machine et accessible par le programme 
? Système logiciel s'exécutant sur une seule machine 
? Accédant localement aux ressources nécessaires 

(données, code, périphériques, mémoire ...) 

? Système distribué : une définition parmi d'autres 
? Ensemble d'ordinateurs indépendants connectés en 

réseau et communiquant via ce réseau 
? Cet ensemble apparaît du point de vue de l'utilisateur 

comme une unique entité



Systèmes distribués

? Vision matérielle d'un système distribué : architecture 
matérielle 
? Ordinateurs standards connectés en réseau 

? Vision logicielle d'un système distribué 
? Système logiciel composé de plusieurs entités s'exécutant 

indépendamment et en parallèle sur un ensemble d'ordinateurs 
connectés en réseau 

? De par leur nature, les systèmes distribués sont dans un 
cadre différent par rapport aux systèmes centralisés 
? Concurrence 

? Les éléments formant le système s'exécutent en parallèle et de manière 
autonome

? Pas d'état ou d'horloge globale commune

? Points de problèmes de fiabilité en nombre accru 
? Problème matériel d'une machine 
? Problème de communication via le réseau: 

? Potentiellement non fiable 
? Temps de communication non négligeables



Avantages des Systèmes distribués

? L'augmentation des ressources
? Par ex. si le réseau est internet, tous les 

ordinateurs connectés constituent les 
ressources potentielles

? (SETI@Home issu du projet Search for 
Extraterrestrial IntelligenceI)

? Sun : « The network is the computer »: 
profiter de la gigantesque ressource de 
processeurs que sont les ordinateurs inactifs 
connectés à internet.

? La répartition des données et des 
services 



Algorithmique distribuée

? Développement d'algorithmes dédiés aux systèmes 
distribués et prenant en compte les spécificités de ces 
systèmes 

? On y retrouve notamment des adaptations de 
problèmes classiques en parallélisme 
? Exclusion mutuelle, élection (d'un maître) ... 

? Mais aussi des problèmes typiques des systèmes 
distribués 
? Horloge globale, état global, diffusion causale, consensus ... 

? S'intéresse principalement à deux grandes familles de 
problèmes 
? Synchronisation et coordination entre processus distants 
? Entente sur valeurs communes et cohérence globale dans 

un contexte non fiable (crash de processus, perte de 
messages ...)



Processus

? Processus 
? Élément logiciel effectuant une tâche, un calcul 

? Exécution d'un ensemble d'instructions 
? Une instruction correspond à un événement local au processus 
? Les instructions sont généralement considérées comme atomiques 

? Il possède une mémoire locale

? Il possède un état local 
? Ensemble de ses données et des valeurs de ses variables locales 

? Il possède un identifiant qu'il connaît 

? Pas ou peu de connaissance des autres processus du 
système et de leur état 

? Les processus d'un système s'exécutent en parallèle



Canaux

? Canal de communication 
? Canal logique de communication point à point 
? Pour communication entre 2 processus 
? Transit de messages sur un canal 

? Caractéristiques d'un canal 
? Uni ou bi-directionnel
? Fiable ou non : perd/modifie ou pas des messages 
? Ordre de réception par rapport à l'émission 

? Exemple : FIFO = les messages sont reçus dans l'ordre où ils sont 
émis 

? Synchrone ou asynchrone 
? Synchrone : l'émetteur et le récepteur se synchronisent pour 

réaliser l'émission et/ou la réception 
? Asynchrone : pas de synchronisation entre émetteur et récepteur 

? Taille des tampons de message cotés émetteur et 
récepteur 
? Limitée ou illimitée



Canaux

? Caractéristiques d'un canal 
? Modèle généralement utilisé 

? Fiable, FIFO, tampon de taille illimitée, asynchrone (en 
émission et réception) et bidirectionnel 

? Exemple : modèle des sockets TCP 

? Fiable 

? FIFO 

? Bidirectionnel 

? Synchrone pour la réception 
? On reçoit quand l'émetteur émet 

? Asynchrone en émission 
? Emetteur n'est pas bloqué quand il émet quoique fasse le 

récepteur



État global et horloge

? Pour chaque processus du système
? État local : valeur des variables du processus à un 

instant t

? État global du système
? Valeur de toutes les variables de tous les processus du 

système à un instant t
? Union à l'instant t des états locaux de tous les processus

? Problème
? Un état est lié à un instant t mais
? Chaque processus à une horloge physique locale
? Pas d'horloge globale dans un système distribué

? La définition d'un état global est possible 
seulement si on est capable de définir un temps 
global



Temps

? Définir un temps global cohérent et 
«identique» (ou presque) pour tous les 
processus
? Soit synchroniser au mieux les horloges physiques 

locales avec une horloge de référence ou entre elles

? Soit créer un temps logique

? Synchronisation des horloges physiques locales
? Le but est d'éviter qu'une horloge locale dérive trop 

par rapport à un référentiel de temps

? Deux modes de synchronisation 
? Synchronisation interne

? Synchronisation externe



Synchronisation horloges physiques

? Synchronisation interne
? Un groupe d'horloges ont entre-elles une dérive 

bornée

? Si D est la borne max de la dérive, Ci l'horloge 
physique du processus i, t un instant réel, et Ci(t) la 
valeur de l'horloge Ci pour cet instant t, alors

? ? i,j,t : | Ci(t) – Cj(t) | < D

? A tout instant, la dérive entre 2 horloges quelconques 
du groupe ne dépasse jamais la borne D
? Une mesure locale du temps sur un site donnera un temps 

identique à une mesure d'un autre site avec une différence 
d'au plus D



Synchronisation horloges physiques

? Synchronisation externe
? Une source externe fournit un temps de référence

? Les horloges locales se re-synchronisent
régulièrement à partir de cette source, en prenant 
en compte
? Les temps de propagation des messages entre le 

processus courant et celui gérant le temps de référence
? Le temps de traitement de la requête (récupérer la 

date de référence) du processus gérant le temps de 
référence, s'il est connu

? Même contrainte que pour synchronisation interne : 
dérive bornée
? Mais par rapport à une source de référence : S

? A l'instant t, S(t) est le temps de référence donné par la 
source externe

? ?i,t : | S(t) – Ci(t) | < D



Méthodes de Synchronisation

? Synchronisation interne pour un système distribué 
synchrone
? Un processus envoie régulièrement la valeur t de son 

horloge aux autres processus pour que chacun se recale 
sur l'horloge des autres

? En théorie : processus met son horloge à la valeur
t + Ttrans

? Ttrans = temps de transmission du message mais est non 
fixe

? Ttrans est borné : borne max mais aussi borne min :
min < Ttrans < max

? En pratique, processus met son horloge à la valeur de
t + x

? Où x est une estimation du temps de propagation
? Exemple : on prend la moyenne des bornes, x = (min + max) / 2
? Erreur de recalage est alors au plus de (min – max ) / 2

? Plus difficile à mettre en œuvre dans un système 
asynchrone
? Car temps de transmission sont non bornés



Méthodes de Synchronisation

? Synchronisation externe pour un système 
asynchrone
? Temps de propagation des messages est non 
borné

? Mais temps d'aller-retour entre 2 processus est 
mesurable

? Un processus envoie une requête au processus 
gérant le temps de référence qui lui répond en lui 
envoyant sa valeur d'horloge ts
? Mesure du temps d'aller-retour : Tround

? A partir de là, on peut mettre à jour son horloge
? En prenant la moitié de Tround par exemple

? t = ts + Tround/2



Méthodes de Synchronisation

? Synchronisation interne pour un système 
asynchrone [Gusella et Zatti]
? Un des processus est élu maître et c'est lui qui gère 

le temps

? Les autres processus lui envoient leur valeur 
d'horloge
? En utilisant également les temps d'aller-retour

? A partir de toutes les horloges, le maître détermine 
le temps moyen global
? Il envoie à chaque processus la variation de leur temps 

local par rapport au temps global

? Permet d'éliminer les horloges défaillantes car le maître 
a une vision globale

? Si le maître se plante, un autre est élu



Temps logique

? Temps logique
? Temps qui n'est pas lié à un temps physique

? Le but est de pouvoir préciser 
l'ordonnancement de l'exécution des processus 
et de leur communication

? En fonction des événements locaux des 
processus, des messages envoyés et reçus, on 
créé un ordonnancement logique

? Création d'horloge logique
? Deux approches principales

? Horloge de Lamport : méthode par estampille

? Horloge de Mattern : horloge vectorielle



Temps logique : chronogramme

? Chronogramme
? Décrit l'ordonnancement temporel des 
événements des processus et des échanges de 
messages

? Chaque processus est représenté par une ligne

? Trois types d'événements signalés sur une ligne

? Émission d'un message à destination d'un autre 
processus

? Réception d'un message venant d'un autre 
processus

? Événement interne dans l'évolution du processus



Temps logique : chronogramme

? Trois processus tous reliés entre-eux par des 
canaux

? Temps de propagation des messages 
quelconques et possibilité de perte de message



Temps logique : chronogramme

? Exemples d'événements
? Processus P1

? e11 : événement d'émission du message m1 à 
destination du processus P2

? e13 : événement interne au processus

? e14 : réception du message m4 venant du processus P3

? Processus P2 : message m5 envoyé avant m6 mais 
m6 reçu avant m5

? Processus P3 : le message m7 est perdu par le 
canal de communication

? Règle de numérotation d'un événement
? exy avec x le numéro du processus et y le numéro 

de l'événement pour le processus, dans l'ordre 
croissant



Temps logique : dépendance causale

? Relation de dépendance causale
? Il y a une dépendance causale entre 2 
événements si un événement doit avoir lieu 
avant l'autre

? Notation : e ? e‘
? e doit se dérouler avant e‘

? Si e ? e', alors une des trois conditions 
suivantes doit être vérifiée pour e et e‘
? Si e et e' sont des événements d'un même 
processus, e précède localement e‘

? Si e est l'émission d'un message, e' est la 
réception de ce message

? Il existe un événement f tel que e ? f et f ? e'



Temps logique : dépendance causale

? Sur exemple précédent
? Quelques dépendances causales autour de e12
? Localement : e11 ? e12, e12 ? e13
? Sur message : e12 ? e34
? Par transitivité : e12 ? e35 (car e12 ? e34 et e34 ? e35)

? Dépendance causale entre e12 et e32 ?

? A priori non : absence de dépendance causale

? Des événements non liés causalement se déroulent en 
parallèle

? Relation de parallélisme : ||
? e || e' ? ¬ ((e ? e') v (e‘ ? e))

? Parallélisme logique : ne signifie pas que les 2 
événements se déroulent simultanément mais qu'il 
peuvent se dérouler dans n'importe quel ordre



Temps logique : dépendance causale

? Ordonnancement des événements
? Les dépendances causales définissent des ordres 
partiels pour des ensembles d'événements

? But d'une horloge logique
? Créer un ordre total global sur tous les 
événements de tous les processus

? Horloge logique
? Fonction H(e) : associe une date à chaque 
événement

? Respect des dépendances causales
? e ? e' ? H(e) < H(e')

? H(e) < H(e') ? ¬ (e‘ ? e)
? C'est-à-dire : soit e ? e', soit e || e'



Horloge de Lamport

? Lamport
? Horloge de Lamport : horloge logique respectant 
les dépendances causales

? Une date (estampille) est associée à chaque 
évenement : couple (s, nb)

? s : numéro du processus

? nb : numéro d'événement

? Invariant sur les dates
? Pour deux dates d'un même processus, les 
numéros de ces dates sont différentes

? Il n'y pas deux événements locaux ayant le même 
numéro



Horloge de Lamport

? Création du temps logique
? Localement, chaque processus Pi possède une horloge 

locale logique Hi, initialisée à 0
? Sert à dater les événements

? Pour chaque événement local de Pi:
? Hi = Hi + 1 : on incrémente l'horloge locale
? L'événement est daté localement par Hi

? Émission d'un message par Pi:
? On incrémente Hi de 1 puis on envoie le message avec (i, 

Hi) comme estampille

? Réception d'un message m avec estampille (s, nb)
? Hi = max(Hi, nb) +1 et marque l'événement de réception 

avec Hi
? Hi est éventuellement recalée sur l'horloge de l'autre 

processus avant d'être incrémentée



Horloge de Lamport

? Exemple : chronogramme avec ajouts des estampilles

? Date de e23 : 6 car le message m5 reçu avait une valeur 
de 5 et l'horloge locale est seulement à 3

? Date de e34 : 4 car on incrémente l'horloge locale vu que 
sa valeur est supérieure à celle du message m3

? Pour e11, e12, e13 ... : incrémentation de +1 de l'horloge 
locale



Horloge de Lamport

? Ordonnancement global
? Valeur de Hi permet de savoir si un événement a lieu 

avant un autre ou pas, qu'il s'agisse d'événements

? Du même processus

? De processus différents

? Ordre total, noté e << e' : e s'est déroulé avant e'

? Soit e événement de Pi et e' événement de Pj :                   
e << e' ? (Hi(e) < Hj(e')) v (Hi(e) = Hj(e') avec i < j)
? Localement (si i = j), Hi donne l'ordre des événements du 

processus

? Les 2 horloges de 2 processus différents permettent de 
déterminer l'ordonnancement des événements des 2 processus

? Si égalité de la valeur de l'horloge, le numéro du processus 
est utilisé pour les ordonner



Horloge de Lamport

? Limites de l'horloge de Lamport
? L'ordonnancement global obtenu est arbitraire et n'est 

pas forcément celui obtenu en pratique

? H(e32) = 2 et H(e22) = 3 pourtant e22 peut être exécuté en 
pratique avant e32

? Ordre total global obtenu pour l'exemple

? e11 << e31 << e12<< e21 << e32 << e13 << e22 << e33 << 
e14 << e34 << e35 << e23 << e24 << e15

? D'autres sont valides ...

? Horloge de Lamport respecte les dépendances 
causales, mais, avec e et e' tel que H(e) < H(e'), on ne 
peut rien dire sur la dépendance entre e et e‘

? Dépendance causale directe ou transitive entre e et e' ?

? Exemple : H(e32) = 2 et H(e13) = 3 mais on a pas  
e32 ? e13



Horloge de Mattern

? Horloge de Mattern & Fidge
? Horloge qui assure la réciproque de la dépendance 
causale
? H(e) < H(e') ? e ? e'

? Permet également de savoir si 2 événements sont  
parallèles (non dépendants causalement)

? Ne définit par contre pas un ordre total global

? Principe
? Utilisation d'estampilles sur les messages
? Vecteur V de taille égale au nombre de processus

? Localement, chaque processus Pi a un vecteur Vi
? Pour chaque processus Pi, chaque case Vi[ j ] du 
vecteur contiendra des valeurs de l'horloge du 
processus Pj



Horloge de Mattern

? Fonctionnement de l'horloge
? Initialisation : pour chaque processus Pi, Vi =(0, 
... , 0)

? Pour un processus Pi, à chacun de ses 
événements (local, émission, réception) :
? Vi [ i ] = Vi [ i ] + 1

? Incrémentation du compteur local d'événement

? Si émission d'un message, alors Vi est envoyé avec le 
message

? Pour un processus Pi, à la réception d'un message 
m contenant un vecteur Vm, on met à jour les 
cases j ? i de son vecteur local Vi
? ?j : Vi [ j ] = max ( Vm [ j ], Vi [ j ])



Horloge de Mattern

? Exemple : chronogramme d'application horloge 
de mattern

? Même exemple que pour horloge de Lamport



Horloge de Mattern

? Relation d'ordre partiel sur les dates
? V ? V' défini par ?i : V[ i ] ? V'[ i ]
? V < V' défini par V ? V' et ?j tel que 

V [ j ] < V' [ j ]
? V || V' défini par ?( V < V' ) ? ?( V' < V )

? Dépendance et indépendance causales
? Horloge de Mattern assure les propriétés 
suivantes, avec e et e' deux événements et V(e) 
et V(e') leurs datations
? V(e) < V(e') ? e ? e‘ 

? Si deux dates sont ordonnées, on a forcément 
dépendance causale entre les événements datés

? V(e) || V(e') ? e || e‘  
? Si il n'y a aucun ordre entre les 2 dates, les 2 

événements sont indépendants causalement



Horloge de Mattern

? Retour sur l'exemple
? V(e13) = (3,0,0), V(e14) = (4,0,3), V(e15) = (5,4,5)
? V(e13) < V(e14) donc e13 ? e14
? V(e14) < V(e15) donc e14 ? e15

? V(e35) = (2,0,5) et V(e23) = (2,3,5)
? V(e35) < v(e23) donc e35 ? e23

? L'horloge de Mattern respecte les dépendances 
causales des événements
? Horloge de Lamport respecte cela également

? V(e32) = (0,0,2) et V(e13) = (3, 0, 0)
? On a ni V(e32) < V(e13) ni V(e13) < V(e32) donc e32 || e13
? L'horloge de Mattern respecte les indépendances 

causales
? L'horloge de Lamport impose un ordre arbitraire entre les 

événéments indépendants causalement



Horloge de Mattern

? Limite de l'horloge de Mattern
? Ne permet pas de définir un ordre global total

? En cas de nombreux processus, la taille du 
vecteur peut-être importante et donc des 
données à transmettre relativement importante



État Global

? État global
? État du système à un instant donné
? Buts de la recherche d'états globaux
? Trouver des états cohérents à partir desquels on 
peut reprendre un calcul distribué en cas de 
plantage du système

? Faciliter le debugging et la mise au point 
d'applications distribuées

? Défini à partir de coupures

? Coupure
? Photographie à un instant donné de l'état du 
système

? Définit les événements appartenant au passé et 
au futur par rapport à l'instant de la coupure



Coupure

? Définition coupure
? Calcul distribué = ensemble E d'événements

? Coupure C est un sous-ensemble fini de E tel que
? Soit a et b deux événements du même processus :              

a ? C et b ? a ? b ? C

? Si un événement d'un processus appartient à la 
coupure, alors tous les événements locaux le précédant 
y appartiennent également

? Etat associé à une coupure
? Si le système est composé de N processus, l'état 

associé à une coupure est défini au niveau d'un 
ensemble de N événements (e1, e2, ... ei, ... eN), 
avec ei événement du processus Pi tel que
? ?i :?e ? C et e événement du processus Pi ? e ? ei

? L'état est défini à la frontière de la coupure : 
l'événement le plus récent pour chaque processus



Coupure

? Exemple de coupure
(même chronogramme que pour exemples horloges 

Lamport et Mattern)

? Coupure = ensemble { e11, e12, e13, e21, e22, e23, e31, 
e32, e33, e34 }

? État défini par la coupure = (e13, e23, e34)



Coupure / état cohérent

? Coupure cohérente
? Coupure qui respecte les dépendances causales 
des événements du système

? Et pas seulement les dépendances causales locales 
à chaque processus

? Soit a et b deux événements du système :             
a ? C et b ? a ? b ? C

? Coupure cohérente : aucun message ne vient du 
futur

? État cohérent
? État associé à une coupure cohérente

? Permet par exemple une reprise sur faute



Coupure cohérente

? Exemple (même chronogramme que précédent)

? Coupure C1 : cohérente
? Coupure C2 : non cohérente car e35 ? e23 mais e35 ? C2

? La réception de m5 est dans la coupure mais pas son émission
? m5 vient du futur par rapport à la coupure



Datation Coupure

? Horloge de Mattern permet de dater la coupure
? Soit N processus, C la coupure, ei l'événement le plus 

récent pour le processus Pi, V(ei) la datation de ei et V(C) 
la datation de la coupure
? V(C) = max ( V(e1), ... , V(eN) ) :
? ?i : V(C)[ i ] = max ( V(e1)[ i ] , ... , V(eN)[ i ] )
? Pour chaque valeur du vecteur, on prend le maximum des 

valeurs de tous les vecteurs des N événements pour le même 
indice

? Permet également de déterminer si la coupure est 
cohérente
? Cohérent si V(C) = ( V(e1)[1], ... , V(ei)[i], ... , V(eN)[N] )
? Pour un processus Pi, si l'événement ei est le plus récent 

c'est lui qui a la date la plus récente pour C : sinon un 
événement ej d'un processus Pj
(i ? j) s'est déroulé après un événement ei' de Pi avec ei' 
plus récent que ei
? ei ? ei' et ei’ ? ej avec ei ? C, ej ? C et ei' ? C



Datation Coupure

? Datation des coupures de l'exemple
? Coupure C1 : état = (e13, e22, e33)

? V(e13) = (3,0,0), V(e22) = (1,2,1), V(e33) = (0,0,3)

? V(C) = (max(3,1,0), max(0,2,0), max(0,1,3)) = (3,2,3)

? Coupure cohérente car V(C)[1] = V(e13)[1], V(C)[2] = 
V(e22)[2], V(C)[3] = V(e33)[3]

? Coupure C2 : état = (e13, e23, e34)

? V(e13) = (3,0,0), V(e23) = (2,3,5), V(e34) = (2,0,4)

? V(C) = (max(3,2,2), max(0,3,0), max (0,5,4))=(3,3,5)

? Non cohérent car V(C)[3] ? V(e34)[3]
? D'après la date de e23, e23 doit se dérouler après 5 événements 

de P3 or e34 n'est que le quatrième événement de P3

? Un événement de P3 dont e23 dépend causalement n'est donc 
pas dans la coupure (il s'agit de e35 se déroulant dans le futur)



Détermination état cohérent

? Algorithme de Chandy & Lamport
? Algorithme permettant aux processus distribués 
d'enregistrer un état global cohérent

? Principe général
? Un processus diffuse un événement marqueur et 
les processus enregistrent leur état

? Contraintes sur le système
? Canaux de communication uni-directionnels et 
FIFO

? Fiable : pas de plantage ou de perte de message



Détermination état cohérent

? État d'un canal
? Pour un canal FIFO fiable unidirectionnel
? Canal pour envoi de message du processus Pi 
vers Pj

? A un instant t, l'état du canal < i, j > est 
l'ensemble des messages émis par Pi et non 
encore reçus par Pj

? Pour le chronogramme de l'exemple, états des 
canaux par rapport à la coupure C1
? Événements de la frontière de la coupure : e13 pour 
P1 et e33 pour P3

? État du canal < 1, 3 > = { m3 }
? m3 a été envoyé en e12 et ne sera reçu qu'en e34

? État du canal < 3, 1 > = { m4 }
? m4 a été envoyé en e33 et ne sera reçu qu'en e14



Algorithme de Chandy & Lamport

? Fonctionnement algorithme Chandy & Lamport
? Un processus Pk est initiateur du lancement de l'algorithme
? Il enregistre son état local

? Il envoie un message marqueur à tous les processus

? Un processus Pj, à la réception du marqueur sur son canal 
< k, j >
? Enregistre son état local (données, variables ...)

? Positionne l'état de chacun de ses canaux entrants < i, j > à 
vide

? Envoie un marqueur sur tous ses canaux sortants : à tous ses 
voisins

? Ces 3 étapes sont exécutées en une séquence atomique

? Pour un processus Pj, à la réception du marqueur venant de 
Pi, sur le canal entrant < i, j >
? Enregistre l'état du canal < i, j > : tous les messages reçus sur 

< i, j > depuis la réception du premier marqueur venant de Pk



Algorithme de Chandy & Lamport

? Fonctionnement algorithme Chandy & 
Lamport (fin)
? Pour un processus Pj, l'algorithme est fini quand il 
a reçu un marqueur sur chacun de ses canaux

? L'état enregistré pour Pj est composé de

? Son état local (variable, données ...)

? Les états de tous ses canaux entrants

? Pour constituer l'état global
? On collecte l'ensemble des états enregistrés par 
les processus

? Une fois que l'on sait que tous les processus l'ont 
enregistrés



Algorithme de Chandy & Lamport

? Principe du double marqueur pour savoir quand 
tout le monde a enregistré son état local
? Le premier marqueur vient du processus initiateur

? Le processus Pi « s'arrête » alors (ou passe dans une 
autre phase de son calcul)

? Il précise à tous ses voisins qu'il s'est arrêté en leur 
envoyant un marqueur

? Il se met en attente de messages l'informant que ses 
processus voisins se sont arrêtés également

? A la réception d'un marqueur sur un canal, on sait 
qu'un de ses voisins s'est arrêté

? Et que tous ses voisins se sont arrêtés quand on a reçu un 
marqueur sur tous ses canaux

? Quand tout le monde est au courant de l'arrêt de tout le 
monde : c'est fini



Algorithme de Chandy & Lamport

? Intérêt d'enregistrer les messages sur < i, j >
? Les processus ne sont pas synchronisés et les 
temps de propagation des messages sont non 
nuls

? Ne sait donc pas quand un processus s'arrête et 
si tous les messages qu'il a envoyé ont été reçus 
quand il le fait

? Donc doit enregistrer les messages venant de Pi

? Comme les canaux sont FIFO, si on reçoit le 
marqueur de Pi, on sait que tous les messages 
envoyés par Pi sont maintenus reçus, plus aucun 
n'est en transit



Algorithme de Chandy & Lamport

? Propriété de l'état global enregistré
? Correspond à un état cohérent

? L'algorithme définit une coupure
? Frontière est formée pour chaque processus par 

l'événement d'enregistrement de l'état local et de 
diffusion du marqueur aux autres processus (via une 
séquence atomique)

? Cette coupure est cohérente
? Car canaux FIFO : aucun message ne peut en doubler un 

autre
? Localement pour un processus Pj, si un marqueur est reçu sur un 

canal < i,j >, cela implique qu'aucun message émis par Pi et reçu 
par Pj avant le marqueur n'a pu être émis après que Pi émette 
son marqueur
? Pas de message venant du futur

? Pour un processus Pj, les événements d'émission des messages 
en transit (à destination d'autres processus) « coupant » la 
coupure ont forcément lieu avant son événement local définissant 
la frontière



Algorithme de Chandy & Lamport

? Exemple avec 3 processus totalement interconnectés

? eM : événement d'enregistrement d'état et diffusion 
marqueur

? eF : événement où l'état local complet est enregistré
? États canaux : <3,1> = { m3, m4 }, <2,3> = { m5 }, 

autres sont vides


, _version_=1670762143943753728, _root_=8])
org.apache.solr.common.SolrException: Exception writing document id 8 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:05.616 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Verdana are not implemented in PDFBox and will be ignored
2020-06-28 16:49:05.632 INFO  (Thread-14) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:05.796 WARN  (Thread-14) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=informatique répartie_exclusion_mutuelle.pdf, description=informatique repartie exclusion mutuelle, date_up=2020-06-27 16:47:16.0, id=9, title=exclusion mutuelle, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/informatique répartie_exclusion_mutuelle.pdf, user_name=Zidani Mohamed, text=
Algorithmique distribuée
Exclusion mutuelle



Exclusion mutuelle distribuée

? Exclusion mutuelle
? Contexte de plusieurs processus s'exécutant en 

parallèle
? Accès à une ressource partagée par un seul 

processus à la fois

? Exclusion mutuelle en distribué
? Accès à une ressource partagée distante par un 

seul processus à la fois
? Processus distribués
? Requêtes et gestion d'accès via des messages 

échangés entre les processus

? Nécessité de mettre en oeuvre des algorithmes 
gérant ces échanges de messages pour assurer 
l'exclusion mutuelle



Rappel exclusion mutuelle

? Exclusion mutuelle
? Une ressource partagée ou une section critique n'est 

accédée que par un processus à la fois

? Un processus est dans 3 états possibles, par rapport à 
l'accès à la ressource
? Demandeur : demande à utiliser la ressource, à entrer dans 

la section
? Dedans : dans la section critique, utilise la ressource 

partagée
? Dehors : en dehors de la section et non demandeur d'y 

entrer

? Changement d'état par un processus
? De dehors à demandeur pour demander à accéder à la 

ressource
? De dedans à dehors pour préciser qu'il libère la ressource

? Le passage de l'état demandeur à l'état dedans est géré 
par le système et/ou l'algorithme de gestion d'accès à la 
ressource



Rappel exclusion mutuelle

? Diagramme d'états de l'accès en exclusion 
mutuelle

? L'accès en exclusion mutuelle doit respecter 
deux propriétés
? Sûreté (safety) : au plus un processus est à la fois 

dans la section critique (dans l'état dedans)
? Vivacité (liveness) : tout processus demandant à 

entrer dans la section critique (à passer dans l'état 
dedans) y entre en un temps fini

Dehors
Demandeur

Dedans

Acquérir

<Gérer par le système>
Libérer



Exclusion mutuelle distribuée

? Plusieurs grandes familles de méthodes
? Contrôle par un serveur qui centralise les demandes 

d'accès à la ressource partagée

? Contrôle par jeton

? Un jeton circule entre les processus et donne l'accès à 
la ressource

? La gestion et l'affectation du jeton – et donc l'accès à 
la ressource – est faite par les processus entre eux

? Deux approches : jeton circulant en permanence ou 
affecté à la demande des processus

? Contrôle par permission

? Les processus s'autorisent mutuellement à accéder à la 
ressource



Contrôle par serveur

? Principe général
? Un serveur centralise et gère l'accès à la ressource

? Algorithme
? Un processus voulant accéder à la ressource (quand 

il passe dans l'état demandeur) envoie une requête 
au serveur

? Quand le serveur lui envoie l'autorisation, il accède 
à la ressource (passe dans l'état dedans)
? Il informe le serveur quand il relâche la ressource 

(passe dans l'état dehors)

? Le serveur reçoit les demandes d'accès et envoie 
les autorisations d'accès aux processus demandeurs
? Avec par exemple une gestion FIFO : premier 

processus demandeur, premier autorisé à accéder à la 
ressource



Contrôle par serveur

? Critiques:
? Avantages
? Très simple à mettre en œuvre
? Simple pour gérer la concurrence d'accès à la 

ressource

? Inconvénients
? Nécessite un élément particulier pour gérer l'accès
? Limitations physiques

? Suppression du serveur centralisateur
? Via par exemple une méthode à jeton : le 

processus qui a le jeton peut accéder à la ressource

? La gestion et l'affectation du jeton est faite par les 
processus entre eux
? Pas de besoin de serveur centralisateur



Méthode par jeton

? Principe général
? Un jeton unique circule entre tous les processus

? Le processus qui a le jeton est le seul qui peut 
accéder à la section critique

? Respect des propriétés
? Sûreté : grâce au jeton unique

? Vivacité : l'algorithme doit assurer que le jeton 
circule bien entre tous les processus voulant 
accéder à la ressource

? Plusieurs versions
? Anneau sur lequel circule le jeton en permanence

? Jeton affecté à la demande des processus



Méthode par jeton

? Algorithme de [Le Lann]
? Un jeton unique circule en permanence entre les 

processus via une topologie en anneau

? Quand un processus reçoit le jeton
? S'il est dans l'état demandeur : il passe dans l'état dedans et 

accède à la ressource
? S'il est dans l'état dehors, il passe le jeton à son voisin

? Quand le processus quitte l'état dedans, il passe le jeton 
à son voisin

? Respect des propriétés
? Sûreté : via le jeton unique qui autorise l'accès à la 

ressource

? Vivacité : respectée si un processus lâche le jeton (la 
ressource) en un temps fini et que tous les processus 
appartiennent à l'anneau



Méthode par jeton

? Critiques
? Inconvénients
? Nécessite des échanges de messages (pour faire circuler le 

jeton) même si aucun site ne veut accéder à la ressource

? Temps d'accès à la ressource peut être potentiellement long
? Si le processus i+1 a le jeton et que le processus i veut accéder à 

la ressource et est le seul à vouloir y accéder, il faut quand même 
attendre que le jeton fasse tout le tour de l'anneau

? Avantages
? Très simple à mettre en œuvre

? Intéressant si nombreux processus demandeurs de la 
ressource
? Jeton arrivera rapidement à un processus demandeur
? Equitable en terme de nombre d'accès et de temps d'attente
? Aucun processus n'est privilégié



Méthode par jeton

? Variante de la méthode du jeton
? Au lieu d'attendre le jeton, un processus diffuse à 

tous le fait qu'il veut obtenir le jeton
? Le processus qui a le jeton sait alors à qui il peut 

l'envoyer
? Évite les attentes et les circulations inutiles du jeton

? Algorithme de [ Ricart & Agrawala]
? Soit N processus avec un canal bi-directionnel entre 

chaque processus
? Canaux fiables mais pas forcément FIFO

? Localement, un processus Pi possède un tableau 
nbreq, de taille N
? Pour Pi, nbreq [ j ] est le nombre de requêtes d'accès 

que le processus Pj a fait et que Pi connaît (par 
principe il les connaît toutes)



Méthode par jeton

? Algorithme de [ Ricart & Agrawala ] (suite)
? Le jeton est un tableau de taille N

? jeton [ i ] est le nombre de fois où le processus Pi a 
accédé à la ressource

? La case i du jeton n'est modifiée que par Pi quand 
celui-ci accède à la ressource

? Initialisation

? Pour tous les sites Pi : ?j ? [ 1 .. N ] : nbreq [ j ] = 0

? Jeton : ?j ? [ 1 .. N ] : jeton [ j ] = 0

? Un site donné possède le jeton au départ

? Quand un site veut accéder à la ressource et n'a 
pas le jeton

? Envoie un message de requête à tous les processus



13

Algorithme de [ Ricart & Agrawala ],

P1

P2 P3

Canal bi-directionnel

nbreq [ , , ]

nbreq [ , , ]

P2 connaît que P3 a fait 5 requêtes d’accès.

P2 connaît que P1 a fait 2 requêtes d’accès.

nbreq [2,3,5]



Méthode par jeton

? Algorithme de [ Ricart & Agrawala ] (suite)
? Quand processus Pj reçoit un message de requête venant 

de Pi
? Pj modifie son nbreq localement : nbreq [i] = nbreq [i] + 1

? Pj mémorise que Pi a demandé à avoir la ressource

? Si Pj possède le jeton et est dans l'état dehors
? Pj envoie le jeton à Pi

? Quand processus récupère le jeton
? Il accède à la ressource (passe dans l'état dedans)

? Quand Pi libère la ressource (passe dans l'état dehors)
? Met à jour le jeton : jeton [i] = jeton [i] + 1

? Parcourt nbreq pour trouver un j tel que : nbreq [j] > jeton [j]
? Une demande d'accès à la ressource de Pj n'a pas encore été 

satisfaite : Pi envoie le jeton à Pj
? Si aucun processus n'attend le jeton : Pi le garde



15

P1

P2 P3

nbreq [0,0,0]

nbreq [0,0,0]

nbreq [0,0,0]

jeton [0,0,0]

P1 veut accéder à la ressource, il envoie 

un message de requête à P2 et P3

Algorithme de [ Ricart & Agrawala ]



16

P1

P2 P3

nbreq [0,0,0]

nbreq [0,0,0]

nbreq [0,0,0]

jeton [0,0,0]

Algorithme de [ Ricart & Agrawala ]



17

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

Algorithme de [ Ricart & Agrawala ]



18

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

P1 accède à la ressource

Algorithme de [ Ricart & Agrawala ]



19

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [1,0,0]

P1 libère la ressource

Algorithme de [ Ricart & Agrawala ]



20

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

P3 veut accéder à la ressource, il envoie 

un message de requête à P1 et P2

P1 accède à la ressource

P1 est toujours dans 

la SC

Algorithme de [ Ricart & Agrawala ]



21

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

P1 accède à la ressource

Algorithme de [ Ricart & Agrawala ]



22

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

jeton [0,0,0]

P1 accède à la ressource

Algorithme de [ Ricart & Agrawala ]



23

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

jeton [1,0,0]

P1 libère la ressource

Trouver un j tel que : nbreq [ j ] > jeton [ j ]

Si aucun processus n’attend le jeton : P1 le garde

Algorithme de [ Ricart & Agrawala ]



24

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

jeton [1,0,0]

Algorithme de [ Ricart & Agrawala ]



25

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

P3 accède à la ressource

jeton [1,0,0]

Algorithme de [ Ricart & Agrawala ]



26

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

P3 libère la ressource

jeton [1,0,1]

Algorithme de [ Ricart & Agrawala ]



Méthode par jeton

? Algorithme de [ Ricart & Agrawala ], respect des 
propriétés
? Sûreté : seul le processus ayant le jeton accède à la 

ressource

? Vivacité : assurée si les processus distribuent 
équitablement le jeton aux autres processus

? Méthode de choix du processus qui va récupérer le 
jeton lorsque l'on sort de l'état dedans

? Pi parcourt nbreq à partir de l'indice i+1 jusqu'à N puis  
continue de 1 à i-1

? Chaque processus teste les demandes d'accès des autres 
processus en commençant à un processus spécifique et différent 
de la liste

? Évite que par exemple tous les processus avec un petit 
identificateur soient servis systématiquement en premier



Méthodes par permission

? Méthodes par permission
? Un processus doit avoir l'autorisation des autres 

processus pour accéder à la ressource

? Principe général
? Un processus demande l'autorisation à un sous-

ensemble donné de tous les processus

? Deux modes
? Permission individuelle : un processus peut donner sa 

permission à plusieurs autres à la fois

? Permission par arbitre : un processus ne donne sa 
permission qu'à un seul processus à la fois
? Les sous-ensembles sont conçus alors tel qu'au moins un 

processus soit commun à 2 sous-ensembles : il joue le rôle 
d'arbitre



29

? P2 n’est pas en attente d’accès à la ressource : envoie permission à P1 et P3.

? P4 n’est pas en attente d’accès à la ressource : envoie permission à P1 et P3.

? Permission individuelle : un processus peut donner sa permission à plusieurs autres à la
fois.

? Pour accéder à la ressource : P1 lui manque la permission de P3 et P3 lui manque
la permission de P1.

? Le processus prioritaire est celui qui a fait sa demande en premier.

? Si P1 est prioritaire : P3 lui envoie sa permission.

? P1 exécute la section critique (a reçu toute les permissions), envoie ensuite sa
permission à P3 qui a son tour entre en section critique.

R1 = {P2, P3, P4}

P1 demande la permission de P2, P3 et P4

R3 = {P1, P2, P4}

P3 demande la permission de P1, P2 et P4

P1

P2

P3

P4

Permission individuelle (exemple)



Permission individuelle

? Algorithme de [Ricart & Agrawala]
? Permission individuelle

? Chaque processus demande l'autorisation à tous les 
autres (sauf lui par principe)
? Liste des processus à interroger par le processus Pi 

pour accéder à la ressource : Ri = { 1, ... , N } – { i }

? Se base sur une horloge logique (Lamport) pour 
garantir le bon fonctionnement de l'algorithme
? Ordonnancement des demandes d'accès à la ressource

? Si un processus ayant fait une demande d'accès reçoit 
une demande d'un autre processus avec une date 
antérieure à la sienne, il donnera son autorisation à 
l'autre processus
? Et passera donc après lui puisque l'autre processus fera le 

contraire



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement
? Chaque processus gère les variables locales 

suivantes
? Une horloge Hi

? Une variable dernier qui contient la date de la dernière 
demande d'accès la ressource

? L'ensemble Ri

? Un ensemble d'identificateurs de processus dont on 
attend une réponse : attendu

? Un ensemble d'identificateurs de processus dont on 
diffère le renvoi de permission si on est plus prioritaire 
qu'eux : différé

? Initialisation
? Hi = dernier = 0

? différé = ?, attendu = Ri



32

Algorithme de [Ricart & Agrawala], initialisation

P2

H1 = 0

dernier = 0

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Initialisation

P2

H1 = 0

dernier = 0

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Initialisation

P1

P2

P3

P4

H1 = 0

dernier = 0

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Initialisation



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement (suite)
? Si un processus veut accéder à la ressource, il 

exécute
? Hi = Hi + 1

? dernier = Hi

? Envoie une demande de permission avec estampille 
(Hi, i ) à tous les processus dont l'identificateur est 
contenu dans attendu

? Se met alors en attente de réception de permission de 
la part de tous les processus dont l'id est dans attendu

? Quand l'ensemble attendu est vide, le processus a reçu 
la permission de tous les autres processus
? Accède alors à la ressource partagée
? Quand accès terminé
? Envoie une permission à tous les processus dont l'id est 

dans différé

? différé est ensuite réinitialisé (différé = ?)



34

P1

P2

P3 P4

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Exemple : P1 souhaiterait accéder à la SC



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement (suite)
? Quand un processus Pi reçoit une demande de 

permission de la part du processus Pj contenant 
l'estampille (H, j)
? Met à jour Hi : Hi = max (Hi, H)
? Si Pi pas en attente d'accès à la ressource : envoie 

permission à Pj
? Sinon, si Pi est en attente d'accès à la ressource:

? Si Pi est prioritaire : place j dans l'ensemble différé
? On lui enverra la permission quand on aura accédé à la 

ressource
? Si Pj est prioritaire : envoi permission à Pj:
? Pj doit passer avant moi, je lui envoie ma permission

? La priorité est définie selon la datation des demandes d'accès 
à la ressource de chaque processus
? Le processus prioritaire est celui qui a fait sa demande 

en premier
? Ordre des dates : l'ordre << de l'horloge de Lamport :    

( dernier, i ) << ( H, j ) si ( ( dernier < H ) ou ( dernier
= H et i < j ) )



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement (fin)
? Quand processus Pi reçoit une permission de la 
part du processus Pj
? Supprime l'identificateur de Pj de l'ensemble 
attendu : attendu = attendu – { j }

? Respect des propriétés
? Sûreté : vérifiée
? Vivacité : assurée grâce aux datations et aux 
priorités associées

? Inconvénient principal de cet algorithme
? Nombre relativement important de messages 
échangés



37

P2

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Exemple : P1 souhaiterait accéder à la SC

P1

P2

P3 P4



38

P1

P2

P3 P4

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø

H2 = 1

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 1

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 1

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Mettre à jour les horloges 

H2, H3 et H4

Exemple : P1 souhaiterait accéder à la SC



Incrémenter H3

dernier = H3

Envoyer (3, 2) à P1, P2 et P4

39

Exemple : P3 souhaiterait accéder à la SC

H4 = 1

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

P1

P2

P3
P4

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø

H2 = 1

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø
(3, 2)



40

Exemple : P3 souhaiterait accéder à la SC

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø
(3, 2)

Mettre à jour les horloges 

H1, H2 et H4



41

Exemple : envoie des permissions par P2 et P4

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu ={P3}

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1}

différé = Ø

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø
(3, 2)

Permission

H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø



42

Exemple : P1 est prioritaire

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu = Ø

différé = {P3}

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1}

différé = Ø

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø
(3, 2)

Permission

H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

P1 entre en 

section critique



43

Exemple : P1 libère la ressource

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu = Ø

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu = Ø

différé = Ø

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø
(3, 2)

Permission

H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

P1 libère la 

ressource

P1 entre en 

section critique

P3 entre en 

section critique



Permission par arbitre

? Permission par arbitre
? Un processus ne donne qu'une permission à la fois
? Il redonnera sa permission à un autre processus quand 

le processus a qui il avait donné précédemment la 
permission lui a indiqué qu'il a fini d'accéder à la 
ressource

? La sûreté est assurée car
? Les sous-ensemble de processus à qui un processus 

demande la permission sont construits tel qu'ils y ait 
toujours au moins un processus commun à 2 sous-
ensemble

? Un processus commun à 2 sous-ensembles est alors 
arbitre
? Comme il ne peut donner sa permission qu'à un seul 

processus, les processus de 2 sous-ensembles ne peuvent pas 
tous donner simultanément la permission à 2 processus 
différents

? C'est donc ce processus commun qui détermine à qui donner 
la ressource



Permission par arbitre

? Algorithme de [ Maekawa ]
? Chaque processus Pi possède un sous-ensemble Ri 

d'identificateurs de processus à qui Pi demandera
l'autorisation d'accéder à la ressource

? ?i,j ? [ 1..N ] : Ri ? Rj ? ?
? Deux sous-ensembles de 2 processus différents ont 

obligatoirement au moins un élément en commun (le ou les 
arbitres)

? Cela rend donc inutile le besoin de demander la permission à 
tous les processus, d'où les sous-ensembles Ri ne contenant 
pas tous les processus

? ?i : | Ri | = K
? Pour une raison d'équité, les sous-ensembles ont la même 

taille pour tous les processus

? ?i : i est contenu dans D sous-ensembles
? Chaque processus joue autant de fois le rôle d'arbitre qu'un 

autre processus



Permission par arbitre

? Algorithme de [ Maekawa] (suite)
? Solution optimale en nombre de permissions à 

demander et de messages échangés

? Fonctionnement de l'algorithme
? Chaque processus possède localement

? Une variable vote permettant de savoir si le processus a 
déjà voté (a déjà donné sa permission à un processus)

? Une file file d'identificateurs de processus qui ont demandé 
la permission mais à qui on ne peut la donner de suit

? Un compteur réponses du nombre de permissions reçues

? Initialisation

? Etat non demandeur, vote = faux et file = ?, réponses = 0



Permission par arbitre

? Algorithme de [Maekawa], fonctionnement 
(suite)
? Quand processus Pi veut accéder à la ressource
? réponses = 0
? Envoie une demande de permission à tous les processus 

de Ri
? Quand réponses = | Ri |, Pi a reçu une permission de 

tous, il accède alors à la ressource
? Après l'accès à la ressource, envoie un message à tous 

les processus de Ri pour les informer que la ressource 
est libre

? Quand processus Pi reçoit une demande de 
permission de la part du processus Pj
? Si Pi a déjà voté (vote = vrai) ou accède actuellement à 

la ressource : place l'identificateur de Pj en queue de file
? Sinon : envoie sa permission à Pj et mémorise qu'il a 

voté 
? vote = vrai



Permission par arbitre

? Algorithme de [Maekawa], fonctionnement 
(suite)
? Quand Pi reçoit de la part du processus Pj un 
message lui indiquant que Pj a libéré la 
ressource

? Si file est vide, alors vote = faux
? Pi a déjà autorisé tous les processus en attente d'une 

permission de sa part

? Si file est non vide
? Retire le premier identificateur (disons k) de la file et 

envoie à Pk une permission d'accès à la ressource

? vote reste à vrai




, _version_=1670762144249937920, _root_=9])
org.apache.solr.common.SolrException: Exception writing document id 9 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:05.841 INFO  (Thread-14) [   ] o.a.s.h.d.DocBuilder Import completed successfully
2020-06-28 16:49:05.842 INFO  (Thread-14) [   ] o.a.s.u.DirectUpdateHandler2 start commit{_version_=1670762144299220992,optimize=false,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false,prepareCommit=false}
2020-06-28 16:49:05.842 INFO  (Thread-14) [   ] o.a.s.u.SolrIndexWriter Calling setCommitData with IW:org.apache.solr.update.SolrIndexWriter@4bbee05f commitCommandVersion:1670762144299220992
2020-06-28 16:49:05.990 INFO  (qtp349420578-19) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362618301} status=0 QTime=0
2020-06-28 16:49:06.057 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362618302} status=0 QTime=64
2020-06-28 16:49:06.114 INFO  (Thread-14) [   ] o.a.s.s.SolrIndexSearcher Opening [Searcher@3d2a672[FileCollection] main]
2020-06-28 16:49:06.121 INFO  (Thread-14) [   ] o.a.s.u.DirectUpdateHandler2 end_commit_flush
2020-06-28 16:49:06.121 INFO  (searcherExecutor-10-thread-1) [   ] o.a.s.c.QuerySenderListener QuerySenderListener sending requests to Searcher@3d2a672[FileCollection] main{ExitableDirectoryReader(UninvertingDirectoryReader())}
2020-06-28 16:49:06.121 INFO  (searcherExecutor-10-thread-1) [   ] o.a.s.c.QuerySenderListener QuerySenderListener done.
2020-06-28 16:49:06.129 INFO  (searcherExecutor-10-thread-1) [   ] o.a.s.c.SolrCore [FileCollection] Registered new searcher Searcher@3d2a672[FileCollection] main{ExitableDirectoryReader(UninvertingDirectoryReader())}
2020-06-28 16:49:06.162 INFO  (Thread-14) [   ] o.a.s.h.d.SimplePropertiesWriter Read dataimport.properties
2020-06-28 16:49:06.163 INFO  (Thread-14) [   ] o.a.s.h.d.SimplePropertiesWriter Wrote last indexed time to dataimport.properties
2020-06-28 16:49:06.163 INFO  (Thread-14) [   ] o.a.s.h.d.DocBuilder Time taken = 0:0:6.488
2020-06-28 16:49:06.164 INFO  (Thread-14) [   ] o.a.s.u.p.LogUpdateProcessorFactory [FileCollection]  webapp=/solr path=/dataimport params={command=full-import} status=0 QTime=96{deleteByQuery=*:* (-1670762137938558976),commit=} 0 6618
2020-06-28 16:49:09.081 INFO  (qtp349420578-19) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/select params={q=*:*&_=1593362635172} hits=0 status=0 QTime=8
2020-06-28 16:49:12.077 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/select params={q=*:*&_=1593362635172} hits=0 status=0 QTime=0
2020-06-28 16:49:13.588 INFO  (qtp349420578-19) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362618301} status=0 QTime=0
2020-06-28 16:49:13.619 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362618552} status=0 QTime=28
2020-06-28 16:49:13.626 INFO  (qtp349420578-18) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362618302&ts=1593362618302} status=503 QTime=1
2020-06-28 16:49:13.633 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362618553} status=0 QTime=12
2020-06-28 16:49:13.699 INFO  (qtp349420578-22) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362618302} status=0 QTime=110
2020-06-28 16:49:13.700 INFO  (qtp349420578-19) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362618552} status=0 QTime=103
2020-06-28 16:49:15.700 INFO  (qtp349420578-21) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362955568} status=0 QTime=0
2020-06-28 16:49:15.705 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362955688} status=0 QTime=0
2020-06-28 16:49:15.721 INFO  (qtp349420578-18) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362955688} status=0 QTime=2
2020-06-28 16:49:15.727 INFO  (qtp349420578-18) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362955568&ts=1593362955568} status=503 QTime=0
2020-06-28 16:49:15.810 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362955688} status=0 QTime=83
2020-06-28 16:49:15.810 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362955568} status=0 QTime=106
2020-06-28 16:49:18.739 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362958616} status=0 QTime=0
2020-06-28 16:49:18.752 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362958729} status=0 QTime=0
2020-06-28 16:49:18.754 INFO  (qtp349420578-15) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362958729} status=0 QTime=1
2020-06-28 16:49:18.754 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362958616&ts=1593362958616} status=503 QTime=0
2020-06-28 16:49:18.862 INFO  (qtp349420578-18) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362958616} status=0 QTime=118
2020-06-28 16:49:18.863 INFO  (qtp349420578-19) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362958729} status=0 QTime=103
2020-06-28 16:49:19.947 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362959809} status=0 QTime=0
2020-06-28 16:49:19.948 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362959927} status=0 QTime=0
2020-06-28 16:49:19.979 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362959927} status=0 QTime=2
2020-06-28 16:49:19.989 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362959809&ts=1593362959809} status=503 QTime=0
2020-06-28 16:49:20.064 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362959809} status=0 QTime=115
2020-06-28 16:49:20.064 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362959927} status=0 QTime=79
2020-06-28 16:49:21.095 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362960978} status=0 QTime=0
2020-06-28 16:49:21.108 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362961084} status=0 QTime=0
2020-06-28 16:49:21.109 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362961084} status=0 QTime=1
2020-06-28 16:49:21.110 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362960979&ts=1593362960979} status=503 QTime=0
2020-06-28 16:49:21.201 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362960979} status=0 QTime=102
2020-06-28 16:49:21.201 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362961084} status=0 QTime=90
2020-06-28 16:49:22.180 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362962124} status=0 QTime=0
2020-06-28 16:49:22.187 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362962170} status=0 QTime=0
2020-06-28 16:49:22.191 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362962170} status=0 QTime=2
2020-06-28 16:49:22.199 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362962124&ts=1593362962124} status=503 QTime=0
2020-06-28 16:49:22.280 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362962124} status=0 QTime=95
2020-06-28 16:49:22.280 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362962170} status=0 QTime=87
2020-06-28 16:49:23.584 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362963495} status=0 QTime=0
2020-06-28 16:49:23.591 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362963566} status=0 QTime=0
2020-06-28 16:49:23.592 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362963566} status=0 QTime=0
2020-06-28 16:49:23.597 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362963496&ts=1593362963496} status=503 QTime=0
2020-06-28 16:49:23.698 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362963566} status=0 QTime=105
2020-06-28 16:49:23.698 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362963496} status=0 QTime=109
2020-06-28 16:49:24.634 INFO  (qtp349420578-21) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362964561} status=0 QTime=0
2020-06-28 16:49:24.670 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362964624} status=0 QTime=0
2020-06-28 16:49:24.671 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362964625} status=0 QTime=1
2020-06-28 16:49:24.679 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362964561&ts=1593362964561} status=503 QTime=0
2020-06-28 16:49:24.744 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362964561} status=0 QTime=106
2020-06-28 16:49:24.744 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362964624} status=0 QTime=67
2020-06-28 16:49:26.116 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362966053} status=0 QTime=0
2020-06-28 16:49:26.131 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362966105} status=0 QTime=0
2020-06-28 16:49:26.144 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362966106} status=0 QTime=1
2020-06-28 16:49:26.148 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362966054&ts=1593362966054} status=503 QTime=0
2020-06-28 16:49:26.219 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362966054} status=0 QTime=100
2020-06-28 16:49:26.220 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362966105} status=0 QTime=74
2020-06-28 16:49:31.501 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362971438} status=0 QTime=0
2020-06-28 16:49:31.509 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362971493} status=0 QTime=0
2020-06-28 16:49:31.514 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362971493} status=0 QTime=1
2020-06-28 16:49:31.523 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362971438&ts=1593362971438} status=503 QTime=0
2020-06-28 16:49:31.615 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362971438} status=0 QTime=108
2020-06-28 16:49:31.615 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362971493} status=0 QTime=101
2020-06-28 16:49:35.515 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.h.d.DataImporter Loading DIH Configuration: db-data-config.xml
2020-06-28 16:49:35.517 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.h.d.c.DIHConfiguration id is a required field in SolrSchema . But not found in DataConfig
2020-06-28 16:49:35.517 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.h.d.DataImporter Data Configuration loaded successfully
2020-06-28 16:49:35.518 INFO  (Thread-15) [   ] o.a.s.h.d.DataImporter Starting Full Import
2020-06-28 16:49:35.518 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/dataimport params={command=full-import} status=0 QTime=2
2020-06-28 16:49:35.527 INFO  (Thread-15) [   ] o.a.s.h.d.SimplePropertiesWriter Read dataimport.properties
2020-06-28 16:49:35.556 INFO  (Thread-15) [   ] o.a.s.h.d.JdbcDataSource Creating a connection for entity search with URL: jdbc:mysql://localhost:3306/laravel?serverTimezone=UTC
2020-06-28 16:49:35.575 INFO  (Thread-15) [   ] o.a.s.h.d.JdbcDataSource Time taken for getConnection(): 18
2020-06-28 16:49:35.593 INFO  (Thread-15) [   ] o.a.s.h.d.JdbcDataSource Creating a connection for entity user with URL: jdbc:mysql://localhost:3306/laravel?serverTimezone=UTC
2020-06-28 16:49:35.598 INFO  (Thread-15) [   ] o.a.s.h.d.JdbcDataSource Time taken for getConnection(): 5
2020-06-28 16:49:36.187 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=RAPPORT DE STAGE.pdf, description=rapport stage sap abap, date_up=2020-06-27 05:33:22.0, id=1, title=rapport, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/RAPPORT DE STAGE.pdf, user_name=Zidani Mohamed, text=
 

 

 

 

RAPPORT DE 

STAGE : 
Découverte de l’environnement de développement SAP 

 

 

 

 

? Réalisé par :                                                      

? ZIDANI Mohamed   

 

? Encadré par :                                                      

? Mme ABDALLAOUI MAAN Kawtar 

? Mr KABAB Cherif                                       



2 
 

Remerciement : 

 

Je tiens à remercier toutes les personnes qui ont contribué au succès de 

mon stage. 

Tout d’abord, je tiens à remercier vivement l’Office National de 

l’Electricité et de l’Eau potable de m’avoir accueilli pour effectuer ce 

stage, m’offrant ainsi la possibilité d’acquérir une expérience 

professionnelle très enrichissante. 

Je tiens à exprimer également ma profonde reconnaissance à Mr KABAB 

Cherif qui m’a encadré durant ce stage, pour le temps qu'il m‘a consacré 

tout au long de cette période, en répondant à toutes mes interrogations. 

Je présente aussi mes sincères reconnaissances et gratitude à Mme 

ABDALLAOUI MAAN Kawtar. 

  



3 
 

Table des matières 
 

Introduction : ........................................................................................................................................... 4 

Présentation de l’ONE :........................................................................................................................... 5 

1. Aperçu historique : ...................................................................................................................... 5 

2. Missions et objectifs de l’ONE : ................................................................................................. 5 

3. Activités de l’ONE : .................................................................................................................... 6 

4. Moyens humains : ....................................................................................................................... 8 

4.1. Organigramme fonctionnel de l’office : .............................................................................. 8 

4.2. Evolution de l’effectif : ....................................................................................................... 8 

4.3. Formation : .......................................................................................................................... 8 

Système d’information SAP : .................................................................................................................. 9 

1. Définition SAP : .......................................................................................................................... 9 

2. Présentation Générale des ERP : ................................................................................................10 

3. Engagement SAP : .....................................................................................................................13 

4. mySAP.com Suite logicielle e-business : ...................................................................................13 

5. Modernisation du processus de facturation de l’ONEE avec SAP : ..........................................14 

ABAP Workbench : ...............................................................................................................................15 

1. Définition ABAP : ......................................................................................................................15 

2. Composants du langage : ............................................................................................................15 

3. Déroulement du programme dans un programme ABAP : ........................................................16 

3.1. Architecture client / serveur : .............................................................................................16 

3.2. Vue orientée utilisateur : ....................................................................................................17 

3.3. Déroulement du programme : que voit l'utilisateur : ..........................................................18 

3.4. Vue orientée utilisateur : ....................................................................................................19 

4. Repository et Workbench : .........................................................................................................19 

4.1. Repository R/3 : .................................................................................................................19 

4.2. Outils de ABAP Workbench : ............................................................................................20 

5. Programmation orientée objet : ..................................................................................................21 

5.1. Présentation des objets : .....................................................................................................21 

5.2. Modèle de programmation orientée objet : ........................................................................22 

5.3. Avantages de l'approche orientée objet : ............................................................................22 

5.4. Avantages de l'approche orientée objet : ............................................................................23 

Conclusion : ...........................................................................................................................................24 



Introduction : 
 

Du 15 Juillet 2019 au 14 Août 2019, j’ai effectué un stage d’observation au sein de 

l’Office National de l’Électricité et de l’Eau potable (située à Casablanca). Au cours de ce stage 

au département développement, j’ai pu m’intéresser à la programmation en SAP. 

Plus largement, ce stage a été l’opportunité pour moi découvrir la réalité du monde du travail 

et aussi les difficultés du secteur informatique. 

Au-delà d’enrichir mes connaissances informatiques, ce stage m’a permis de comprendre dans 

quelle mesure on peut avoir d’expérience dans une grandes établissement. 

Ce rapport, après une présentation de l’entreprise en première partie, explicitera les 

différentes tâches que j’ai effectuées, puis démontrera leur utilité en les positionnant au cœur 

de la gestion courante de l’ONEE.  



5 
 

Présentation de l’ONE : 
1. Aperçu historique :  

L’ONE est un établissement public à caractère industriel et commercial, doté de la 

personnalité civile et de l’autonomie financière placé sous la tutelle administrative et technique 

du ministère de l’énergie et des mines et investi depuis sa création en 1963 à l’exclusivité de la 

production et le transport de l’énergie électrique.  

Il assure la distribution de l’énergie électrique dans plusieurs provinces du royaume 

ainsi au milieu rural. Les droits et obligations de l’office sont définis dans un cahier de charge 

approuvé par décret, lequel définit les conditions techniques administratives et financières 

relatives à l’exploitation des ouvrages de production de transport et e distribution de 

l’électricité.  

2. Missions et objectifs de l’ONE :  
Les missions de l’ONE consistent à :  

• Répondre aux besoins du pays en énergie électrique.  

• Diriger et développer le réseau du transport.  

• Planifier, augmenter et généraliser l’électrification rurale.  

• Œuvrer pour la promotion et le développement des énergies renouvelables.  

• Gérer la demande globale de l’énergie électrique.  

Les objectifs de l’ONE sont :  

• Contenter dans les meilleures techniques et économiques la progression de la demande 

en énergie sans cesse croissante ;  

• Diminuer les tarifs : moyenne tension et haute tension pour atteindre des prix de 

l’énergie électrique compatibles avec les marchés concurrentiels du Maroc;  

• Assurer directement au meilleur coût la couverture financière des programmes 

d’investissements de plus en plus lourds et indispensables au développement de 

l’économie du pays.  

 

 



6 
 

3. Activités de l’ONE :  
Les activités industrielles de l’ONE comportent, la production de l’énergie électrique, son 

transport et puis sa distribution.  

 

Figure 1: Activités de l’ONE 

? Production :  
Pour répondre aux besoins du pays en énergie électrique, l’ONE maintient une activité 

continue en matière d’études et de réalisation d’ouvrages de production.  

On distingue trois modes de production :  

• La production hydraulique : elle est basée sur les apports d’eau aux barrages 

hydroélectrique. Elle est donc dépendante de la pluviométrie annuelle. Cela justifie la 

baisse de ce mode de production à cause de la sécheresse qu’a connu le MAROC ces 

dernières années. 

• La production thermique : la production thermique reste la principale source de production 

de l’énergie électrique. Cependant elle reste fortement influencée par les fluctuations des 

prix des combustibles sur le marché international.  

• La gestion de la production durant les dernières années a été marquée par un déficit 

hydraulique dû à la sécheresse. Et par la flambée du prix des combustibles afin de faire face 

à cette situation, l’office s’est vu confronté au développement d’un troisième mode de 

production basée sur les énergies renouvelables, qui se compose essentiellement des parcs 

éoliens et stations thermos-solaires.  

 



7 
 

? Transport :  
Au niveau du transport de l’énergie électrique les principales missions de l’office se résument 

comme suit :  

• Développer et renforcer le réseau de transport en vue d’assurer le transport de l’énergie 

électrique des centres d’approvisionnement, vers les centres de consommation de transit de 

la puissance ;  

• Assurer la sécurité d’alimentation de la clientèle.  

• Suite au développement des réseaux de transport, compte tenu de l’augmentation de la 

consommation et à la vue de gérer d’une façon efficace et rationnelle les moyens de 

production et de transport l’ONE s’est équipé depuis 1986 d’un système de conduite des 

réseaux appelé le Dispatching national dont la principale fonction est :  

• Aider à la décision à travers l’utilisation d’un ensemble d’équipements et de programmes 

informatiques ;  

• Conduire plus facilement les installations de production et de transport par le contrôle et la 

surveillance d’un certain nombre de grandeurs électriques : transits sur les lignes, tensions, 

etc.  

• Etudes prévisionnelles de production et de réseau à court et moyen terme, ce système arrive 

actuellement à la limite de ses possibilités et les projets de renouvellement sont en cours 

d’exécution.  

 

? Distribution :  
La distribution de l’énergie électrique est assurée :  

Soit directement par l’ONE, notamment en zone rurale et dans plusieurs centres urbains ;  

Soit par les régies municipales ou intercommunales, placées sous la tutelle du ministère de 

l’intérieure pour les grands centres urbains.  
 
 



8 
 

4. Moyens humains :  

4.1. Organigramme fonctionnel de l’office : 

 
Figure 2:Organigramme fonctionnel de l’office. 

4.2. Evolution de l’effectif :  
Poursuivant sa tendance baissière entamée depuis 1994 dans le cadre de l’action d’amélioration et 

de renforcement de la productivité du personnel, l’effectif du personnel s’est établi au 31décembre 

2011 à 8441 agents. Réparti par collège, cet effectif est composé de 19% d’agents d’exécution, 57% 

d’agents de maîtrise et 23% de cadres.  

4.3. Formation : 
Les plans de formation et de perfectionnement du personnel s’inscrivent dans une politique globale 

de gestion des ressources humaines. Celle-ci est établie à partir de la stratégie de l’ONE en tenant 

compte des besoins spécifiques des unités et du personnel.  

L’office maintient toujours ses efforts pour améliorer la productivité et la qualification du personnel 

par l’intensification du programme de formation qui a couté 36MDH. 



9 
 

Système d’information SAP : 
1. Définition SAP :  

SAP (en anglais : Systems, Applications and 

Products for data processing) est un système dans 

lequel les différentes fonctions de l'entreprise 

(comptabilité, finances, production, 

approvisionnement, marketing, ressources 

humaines, qualité, maintenance, etc.) sont reliées entre elles par l'utilisation d'un système 

d'information centralisé sur la base d'une configuration client/serveur. 

La mise en œuvre d'un système complètement intégré permet de répondre de manière précise 

et en temps réel aux questions du type : « Que se passe-t-il si je décide de faire ceci ? ». 

Par exemple, si une entreprise reçoit une commande de marchandises, il est possible de savoir 

presque instantanément les conséquences de cette demande sur les capacités de production, sur 

les besoins d'approvisionnement, sur le personnel nécessaire pour accomplir cette tâche, sur les 

délais requis pour satisfaire cette demande, sur les besoins de financement, sur la profitabilité 

de cette opération, etc. 

SAP AG est le plus important concepteur de logiciels d’Europe, et le quatrième du monde. Il 

fournit des systèmes de gestion et de maintenance à des entreprises de toutes tailles dans le 

monde entier. 

Son siège se trouve à Waldorf, en Allemagne, et il dispose de bureaux régionaux sur les cinq 

continents. 

Le nom exact du progiciel a été plusieurs fois modifié au fur et à mesure de l'évolution des 

versions : 

• R/1 puis R/2 (architecture mainframe) 

• R/3 (apparition de l'architecture client-serveur, versions 2.1 à 4.6C) 

• R/3 Entreprise (dit aussi version 4.70) 

• ECC ou ERP Central Component (versions 5.0 puis 6.0) 

https://fr.wikipedia.org/wiki/Anglais


10 
 

• Parallèlement à l'évolution du produit, cette société a utilisé plusieurs terminologies 

commerciales pour désigner son offre telles que mySAP.com, mySAP ERP ou mySAP 

Business Suite. 

• Les logiciels SAP reposent aujourd'hui sur une architecture technique commune appelée SAP 

NetWeaver. 

• Le langage ABAP/4(Advance Business Application Programming 4th generation) ne 

fonctionne pas sur le système d’exploitation. 

• Tous les modules sont écrits en ABAP/4. 

• ABAP est très semblable au COBOL dans sa syntaxe. L'utilisation du langage ABAP permet 

aux clients de SAP d'étendre la fonctionnalité du produit. 

SAP est un progiciel bien répandu aujourd’hui. On dénombre plus de 140000 installations dans 

plus de 120 pays à travers le monde. Ce qui représente plus de 12 millions d’utilisateurs. La 

plupart des grandes entreprises l’ayant installé afin d’améliorer leur rentabilité, la demande en 

consultants ne cesse de croitre notamment dans l’espace francophone. 

L'une des raisons du succès de ce progiciel, est le fait qu’il soit possible de paramétrer chacune 

de ses composantes afin de l’adapter aux besoins spécifiques d'une entreprise. 

Il peut être installé sous Windows, Unix, Linux, Solaris. Il est aussi indépendant du système de 

gestion des bases : il peut être installé sur Oracle, MS-SQL, IBM DB2, MaxDB. Ayant un 

support multilingue, Il peut être installe en plus de 41 langues internationales. 

Afin de se connecter à un system SAP, les utilisateurs on besoin d’utiliser soit 

l’interface SAPGUI, ou alors à partir de n'importe quel ordinateur personnel qui possède un 

Web Browser et un accès à l’internet (Web GUI). 

 

 

2. Présentation Générale des ERP :  
SAP s'agit d'un progiciel de gestion d’entreprise qui appartient à la famille des ERP, le 

sigle ERP signifie Enterprise Resource Planning. 



11 
 

Vivant dans un contexte de mondialisation, de fusion des entreprises et de concurrence, les 

entreprises veulent augmenter leur productivité, leur efficacité et leur marge de profit afin de 

rester compétitives. 

Pour cela les décideurs ont besoin d’avoir une visibilité en temps réel sur l’état global de la 

société qu’ils dirigent. Étant amené à prendre des décisions stratégiques, ils ont besoin d’outils 

d’aide à la décision fiables, à même de fournir des informations exactes le plus rapidement 

possible. 

Pour illustrer nos propos, nous allons prendre l’exemple de 2 entreprises de production ayant la 

même structure. La première a décidé de ne pas implémenter d’ERP et chacun de ses 

départements utilise un ou plusieurs logiciels. La seconde a opté pour un ERP. 

? Entreprise sans ERP : 

 
Chaque département utilise un logiciel adapté à ses besoins. Les informations liées à un bon de 

commande saisi à partir du logiciel du département ventes seront à nouveau saisies par les 

départements approvisionnement, comptabilité, puis transport pour la livraison. 

Un tel mode de fonctionnement comporte plusieurs risques : 

• erreurs de saisies créant une incohérence de données entre départements 

• données non mises à jour 

• données manquantes 



12 
 

• données redondantes car stockées plusieurs fois dans différents systèmes. 

Certaines entreprises utilisant plusieurs logiciels ont jugé utile d’installer des interfaces afin de 

permettre un échange de données entre divers départements. Cependant, cette approche 

comporte également des inconvénients entre autres : 

• il devient difficile de mettre à jour ou de remplacer un seul système (appartenant à un seul 

département) à cause de l’impact potentiel sur les autres systèmes communiquant avec lui, sans 

compter les couts y liés. 

• Les dysfonctionnements des interfaces informatiques sont souvent nombreux et leur 

correction peut être fastidieuse et onéreuse. 

? Entreprise avec ERP : 

La société qui utilise un ERP, est caractérisée par une uniformisation des services et une 

centralisation de l’information au sein d’une base de données unique. Toute information est 

saisie une fois (bon de commande par exemple) et partagée par tous les départements concernés 

par cette opération. 

Dans un tel système, la redondance des données entre départements n’existe plus ; l’information 

étant disponible pour tous en temps réel, une meilleure coordination interservices devient 

possible et prend moins de temps ce qui améliore la productivité. 

Par exemple à la fin d’une journée de production, s’il s’avère qu’un lot de production est non 

conforme, il est bloqué par le département qualité. Cette information est disponible 

immédiatement pour tous les départements concernés (magasin, stock, ventes, comptabilité). 

Par ailleurs la publication de certaines informations financières (résultat, bilan, …) ou 

logistiques (stock dans le magasin, évaluation des fournisseurs…) est très rapide car toutes les 

données sont disponibles presqu’en temps réel. 



13 
 

Tous ces avantages expliquent pourquoi de plus en plus d’entreprises décident d’utiliser les 

ERP. Dans ce marché, SAP® est le progiciel le plus utilisé à l’heure actuelle. 

3. Engagement SAP :  
L‘offre SAP a pour vocation de répondre à ces enjeux : 

Permettre l’optimisation des processus clés de l’entreprise pour l’innovation (PLM), la 

gestion de la relation client (CRM) et l’optimisation de la Supply Chain (SCM). Par ailleurs, 

les solutions sectorielles amènent des réponses adaptées aux processus spécifiques de chaque 

domaine d’activité (gestion des crédits pour la banque, gestion de la traçabilité dans les 

produits de grande consommation...). 

Intégrer des fonctions de support à ces processus clés, pour faire en sorte que les ressources 

humaines la gestion administrative et financière ou encore les achats soient à leur service. 

Ces fonctions doivent se mettre en place en respectant la stratégie organisationnelle de 

l’entreprise, D’où la nécessité d’un socle intégré, souple flexible, et facile à utiliser (R/3 

Enterprise, mySAP Technology) 

Par ailleurs, ceci doit s’adapter aux entreprises de toute taille, quel que soit leur organisation 

(y compris si elles sont décentralisées et disposant de filiale de taille réduite) ? nécessité de 

proposer une offre adaptée à chaque segment. 

 

4. mySAP.com Suite logicielle e-business :  

 
L‘ERP constitue le socle sur lequel toutes les nouvelles applications e-business vont pouvoir 

s‘appuyer. 



14 
 

SAP R/3 est un composant essentiel de la suite logicielle e-business intégrée mySAP.com. Il 

regroupe l’ensemble des fonctions d’un progiciel de gestion intégré (ERP), véritable socle de 

toute solution de gestion efficace. 

La nouvelle version de SAP R/3 – SAP R/3 Enterprise – préserve et pérennise les apports du 

composant phare de SAP, mais en étend les fonctionnalités en s’appuyant sur une plate-forme 

technique moderne et ouverte, gage d’une transition douce vers l’e-business. En outre, SAP R/3 

Enterprise procure aux clients de 

SAP la fiabilité, l’évolutivité et la facilité d’emploi qu’ils sont en droit d’attendre. 

MySAP NetWeaver est la plateforme technologique de la suite logicielle mySAP. 

 

5. Modernisation du processus de facturation de l’ONEE avec SAP :  
L’ONE a procédé au déploiement du progiciel intégré de gestion SAP (Système 

Application and Product in data procession) dont le coût global (logiciels, matériel, licences et 

intégration) est estimé à 80 MDH sur l’ensemble de ses unités régionales, après son 

implémentation en octobre 2000 au niveau du site central.  

Ce système intégré basé sur une architecture modulaire permet de gérer l’ensemble des 

fonctions de l’Office ; notamment les fonctions Achats, Gestion des stocks, Comptabilité, 

Finances, contrôle de gestion, Immobilisations et Ressources humaines.  

Les informations saisies par un utilisateur entraînent la mise à jour simultanée des données 

gérées dans les autres modules, permettent ainsi une adéquation entre les flux physiques et les 

flux financiers.  

SAP offre également la possibilité, à tous les utilisateurs autorisés, de visualiser en temps réel 

les données disponibles dans le système à partir de n’importe quel poste connecté au réseau. 

Les responsables peuvent par exemple consulter à tout moment les états financiers de l’office, 

ce qui permet au management de suivre de près l’évolution de la situation financière de l’Office. 

 

 

 



15 
 

ABAP Workbench : 
 

1. Définition ABAP :  
ABAP est un langage de programmation propriétaire, faisant partie de l'ensemble 

logiciel SAP. Il s'agit actuellement du langage utilisé dans la programmation des Web 

Application Server faisant partie de la plateforme NetWeaver pour la réalisation de progiciels. 

2. Composants du langage :  

Le code source : il est écrit directement dans un composant de SAP appelé SAP 

Workbench et il sera stocké dans la base d'information de l'outil. Ce langage, de même 

que java, a besoin d'être compilé pour pouvoir être exécuté. Cependant, à la différence de 

java, avant chaque utilisation d'un programme, le processeur SAP vérifie qu'il possède la 

dernière version du programme. Si ce n'est pas le cas, ce dernier est recompilé à la volée. 

Le dictionnaire de données : la base de données est masquée pour le programmeur. Il y 

accède donc au travers de clauses faisant partie du langage lui-même. De même, la gestion du 

modèle de données est réalisée au travers d'un composant qui créera ou modifiera lui-même 

les tables de données. Ce dictionnaire de données comprend : 

• Des domaines représentant un concept élémentaire (par exemple un fournisseur, une 

référence article) ; chaque élément de donnée comprend au minimum un type de donnée 

et la spécification de son occupation mémoire. 

• Des éléments de données. Chaque élément de donnée est construit à partir d'un domaine 

et correspond à une utilisation particulière de ce dernier pour stocker une information, ou 

pour afficher un champ. Chaque élément de donnée comprend quatre descriptions 

textuelles qui peuvent être traduites (de manière à rendre l'application utilisable par des 

locuteurs de différentes langues). 

• Des structures et des tables de différents types permettant de stocker des informations, 

d'utiliser des types composites pour les transferts de données entre programmes et de 

stocker de l'information dans la base. 

Un outil de transport. À chaque modification d'un programme, celui-ci doit 

être transporté de l'environnement dans lequel il est créé vers un environnement de test puis 

dans l'environnement de production (chacun de ces environnements dispose de jeux de 

https://fr.wikipedia.org/wiki/Langage_de_programmation
https://fr.wikipedia.org/wiki/Systems,_applications,_and_products_for_data_processing
https://fr.wikipedia.org/wiki/Netweaver
https://fr.wikipedia.org/wiki/Progiciel
https://fr.wikipedia.org/w/index.php?title=SAP_Workbench&action=edit&redlink=1
https://fr.wikipedia.org/w/index.php?title=SAP_Workbench&action=edit&redlink=1
https://fr.wikipedia.org/wiki/Java_(langage)
https://fr.wikipedia.org/wiki/Compilateur


16 
 

données distincts, il peut exister plus de trois environnements dans un système d'information 

donné). Cette opération est réalisée par la mise en œuvre d'un ordre de transport. 

? Exemples de programmes ABAP : 

 

3. Déroulement du programme dans un programme ABAP :  

3.1. Architecture client / serveur : 

 

? Le système R/3 a une architecture logicielle modulaire qui suit les principes orientés 

logiciel client/serveur. 

? Le système R/3 affecte des présentations, des applications, et des enregistrements de 

données à différents ordinateurs. Il sert de base à l'évolutivité du système R/3. 

? Le niveau le plus bas est le niveau base de données. Les données y sont gérées grâce à 

un système de gestion de base de données relationnelle (RDBMS). Outre les données 

de base et les données de mouvement, les programmes et les métadonnées qui décrivent 

le système R/3 y sont également stockés et gérés. 



17 
 

? Les programmes ABAP, qui comprennent aussi bien les applications fournies par SAP 

que celles que vous développez vous-même, sont exécutés au niveau application. Ils 

exploitent des données appelées au niveau base de données et y stockent de nouvelles 

informations. 

? Le troisième niveau est le niveau présentation (SAPGUI). Ce niveau comprend 

l'interface utilisateur par lequel un utilisateur final peut accéder à une application, entrer 

de nouvelles données et recevoir les résultats d'un processus de travail. 

? La répartition technique du logiciel est indépendante de sa localisation physique dans le 

système. Dans le sens vertical, il est possible d'installer tous les niveaux les uns au-

dessus des autres sur un seul ordinateur ou sur des ordinateurs distincts. Dans le sens 

horizontal, les composantes des niveaux fonctionnel et présentation peuvent être 

réparties sur un nombre x de stations. La distribution horizontale des composantes des 
bases de données dépend toutefois du type de base installé. 

3.2. Vue orientée utilisateur : 

 
 
? Les programmes ABAP sont traitées sur le serveur d'application. La conception de 

dialogues utilisateur et de dialogues base de données est dès lors de grande importance 

lors de l'écriture de programmes applicatifs. 



18 
 

3.3. Déroulement du programme : que voit l'utilisateur : 

 
? L'utilisateur s'intéresse principalement à la façon dont l'opération se déroule et dont les 

données peuvent être introduites et affichées depuis l'opération. Les détails techniques, 

comme savoir si un seul programme est exécuté ou si de multiples programmes sont 

appelés de manière implicite, ou les différences techniques entre les types d'écran 

affichés, sont généralement moins importants pour l'utilisateur. L'utilisateur ne doit pas 

nécessairement connaître le déroulement précis du programme ABAP sur le serveur 

d'application. Le système R/3 comme les serveurs d'application et la base de données 

sont représentés par une boîte noire pour l'utilisateur. 

? Il existe, cependant, trois types d'écran techniquement distincts (écrans, écrans de 

sélection, et listes) qui offrent différents services à l'utilisateur. Le travail du 

développeur est de déterminer quel type de dialogue utilisateur convient le mieux aux 
besoins de l'utilisateur. 



19 
 

3.4. Vue orientée utilisateur : 

 
? Lorsque l'utilisateur exécute une action utilisateur (en choisissant, par exemple, Entrée, 

une touche de fonction, une fonction du menu ou un bouton de commande), le contrôle 

passe du serveur de présentation au serveur d'application et certaines parties du 

programme ABAP sont exécutées. Si un dialogue utilisateur supplémentaire est lancé 

lors du programme ABAP, le système envoie un écran au serveur de présentation et le 

contrôle est à nouveau transféré au serveur de présentation. 

 

4. Repository et Workbench :  

4.1. Repository R/3 : 

 



20 
 

? La base de données, comme le Repository, contient des tables de customizing et des 

tables applicatives qui sont généralement dépendant mandant. 

? Le Repository contient tous les objets de développement, par exemple, des programmes, 

des définitions de tables de base de données et de types globaux. Les objets de 

développement sont par conséquent aussi connus comme objets du Repository. Les 

objets du Repository ne sont pas dépendant mandant. IL est possible donc les visualiser 

et les utiliser pour tout mandant. 

? Structure du Repository : 

? Tous les objets de développement créés avec les outils de développement de ABAP 

Workbench sont classés comme objets du repository et sont stockés de manière centrale 

dans le Repository R/3. 

? Le Repository R/3 est une partie spéciale de la base de données centrale du système 

SAP. 

? Le Repository s'organise selon l'application. Chaque application est encore subdivisée 

de façon logique en classes de développement. 

? Les objets du Repository sont souvent composés de sous-objets qui sont eux-mêmes des 

objets du Repository. 

? Chaque objet du Repository doit être affecté à une classe de développement lors de sa 

création. 

? Vous pouvez utiliser le système d'information du Repository pour chercher des objets 

du Repository selon plusieurs critères. 

4.2. Outils de ABAP Workbench : 

 



21 
 

? ABAP Workbench contient différents outils pour le traitement d'objets du Repository. 

Ces outils vous fournissent une large gamme d'assistance qui couvre l'ensemble du cycle 

de développement du logiciel. 

? Les outils les plus importants à la création et à l'édition d'objets du Repository sont : 

? Éditeur ABAP pour l'écriture et l'édition du code de programme. 

? Dictionnaire ABAP pour le traitement des définitions de tables de base de données et la 

récupération de types globaux. 

? Menu Painter pour la conception d'interface utilisateur (barre de menus, barre d'outils 

standard, barre d'outils d'application, allocation des touches de fonction) 

? Screen Painter pour la conception d'écrans (programmes dynamiques) de dialogues 

utilisateur 

? Générateur de modules de fonction pour l'affichage et le traitement de modules de 

fonction (routines avec des interfaces définis qui sont disponibles dans tout le système) 

? Générateur de classes pour l'affichage et le traitement des classes centrales 

? Il existe deux manières différentes d'utiliser ces outils : 

? Sois-vous appelez chaque outil individuel et traitez les objets correspondants du 

Repository. 

? Vous devez ensuite appeler l'outil suivant pour la série d'objets suivante... 

? Sois-vous travaillez avec Object Navigator : Cette transaction vous fournit une synthèse 

sous forme d'arborescence de tous les objets d'une classe de développement ou d'un 

programme. 

5. Programmation orientée objet :  

5.1. Présentation des objets : 

 



22 
 

? L'orientation objet est basée sur des objets représentant des éléments abstraits ou 

concrets dans le monde réel. Ces objets sont représentés en premier lieu par leurs 

caractéristiques qui sont mises en correspondance avec la structure interne de l'objet et 

les attributs (données). Le comportement d'un objet est décrit à l'aide de méthodes et 

d'événements (fonctionnalité). 

? Les objets forment des capsules qui contiennent les données et le comportement de ces 

données. Ils doivent vous permettre d'élaborer une solution logicielle, à savoir une 

correspondance un pour un du champ de problèmes dans le monde réel. 

5.2. Modèle de programmation orientée objet : 

 

5.3. Avantages de l'approche orientée objet : 

 
? Cohérence tout au long du processus de développement logiciel 

Le "langage" utilisé dans les différentes phases du développement logiciel (analyse, spécification, 

conception et implémentation) est uniforme. Idéalement, les modifications apportées au cours de la 

phase d'implémentation devraient être appliquées automatiquement dans la conception. 

 

? Encapsulation 

L'encapsulation signifie que l'implémentation d'un objet est masquée aux autres composantes du 

système. Ainsi, ces dernières ne peuvent pas faire de suppositions sur le statut interne de l'objet et, par 

conséquent, aucune dépendance relative aux implémentations spécifiques n'est générée. 

 

? Polymorphisme 

Le polymorphisme (capacité d'adopter plusieurs formes) dans le contexte de la technologie des objets 

signifie que les réactions des objets de diverses classes à un même message sont différentes. 

 



23 
 

? Héritage 

L'héritage définit la relation d'implémentation entre les différentes classes, dans lesquelles une classe 

(sous-classe) partage la structure et le comportement définis dans une ou plusieurs autres classes 

(super-classes). 

Remarque : ABAP Objects autorise seulement l'héritage unique. 

5.4. Avantages de l'approche orientée objet : 

 
? Avant ABAP, SAP utilisait un macro-assembleur. 

? ABAP a été créé dans l'intention d'améliorer le reporting. Il s'agit d'un langage de 

programmation propriétaire relativement indépendant, bien qu'il ait été influencé par 

d'autres langages de programmation, par exemple, COBOL et PASCAL. 

? ABAP Objects est une réelle extension d'ABAP. Il réunit les aspects les plus 

prometteurs des autres langages de programmation orientée objet, tels que Java, C++ et 

Smalltalk. 

 

 

 

 

 

 

 



24 
 

Conclusion : 
Dans le cadre de mon stage d’initiation j’ai pu découvrir un nouveau système 

d’information SAP qui peut gérer l’ensemble des fonctions d’une entreprise, ce système qui est 
utilisé par l’ONEE est développé par un langage de programmation ABAP.  

Mon stage m'a beaucoup intéressée, j'ai pu découvrir les différents postes de l'entreprise 
et avoir un aperçu de son fonctionnement. Il m'a permis de me familiariser avec les différents 
services et d'avoir une approche réelle du monde du travail. J'ai pu faire le rapprochement entre 
ce que j'avais appris en cours et ce qui se passe vraiment dans l’entreprise. 


	Introduction :
	Présentation de l’ONE :
	1. Aperçu historique :
	2. Missions et objectifs de l’ONE :
	3. Activités de l’ONE :
	4. Moyens humains :
	4.1. Organigramme fonctionnel de l’office :
	4.2. Evolution de l’effectif :
	4.3. Formation :


	Système d’information SAP :
	1. Définition SAP :
	2. Présentation Générale des ERP :
	3. Engagement SAP :
	4. mySAP.com Suite logicielle e-business :
	5. Modernisation du processus de facturation de l’ONEE avec SAP :

	ABAP Workbench :
	1. Définition ABAP :
	2. Composants du langage :
	3. Déroulement du programme dans un programme ABAP :
	3.1. Architecture client / serveur :
	3.2. Vue orientée utilisateur :
	3.3. Déroulement du programme : que voit l'utilisateur :
	3.4. Vue orientée utilisateur :

	4. Repository et Workbench :
	4.1. Repository R/3 :
	4.2. Outils de ABAP Workbench :

	5. Programmation orientée objet :
	5.1. Présentation des objets :
	5.2. Modèle de programmation orientée objet :
	5.3. Avantages de l'approche orientée objet :
	5.4. Avantages de l'approche orientée objet :


	Conclusion :

, _version_=1670762176117211136, _root_=1])
org.apache.solr.common.SolrException: Exception writing document id 1 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:36.278 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.287 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.292 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Calibri,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.358 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=ASPMVC-Partie1.pdf, description=asp mvc .net, date_up=2020-06-27 05:33:43.0, id=2, title=aspmvc, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/ASPMVC-Partie1.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

A.U:2019-2020

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular

Génie logiciel en .Net



ASP MVC

Chapitre 2:

3



Plan du chapitre
1. Structure du projet MVC

2. Gestion d’Etat

3. Mise en forme 

4. Entity Framework

5. Razor

6. Les   helpers HTML

7. Les validateurs

8. Exemple de l’utilisation de quelques composants

9. Ajax 

10.Internationalisation en ASP MVC

11. Sécurité du projet ASP MVC
4



5

Spécificités de ASP 



Objectif

- .Net possède un ensemble de fonctionnalités

dédiées à la création et à la gestion de sites Web.

-ASP.NET permet de créer des sites Web

dynamiques.

-IIS est le serveur web pour les projets web en .Net

6



IIS

-S’installe avec le système d’exploitation windows

-Pour ouvrir IIS ? taper inetmgr sur la barre de recherche

mais assurer que le service est déjà activé

7



IIS

-Activation de IIS

Panneau de configuration?ajouter supprimer des

programmes?Activer ou désactiver des fonctionnalités

windows

8



Privilèges d’ASP

-Plus sécurisée :Selon le cabinet de sécurité WhiteHat Security,

la sécurité est légèrement meilleure avec ASP

.NET qu'avec JSP, à cause du fait qu'il y a une meilleure

orientation de la sécurité pour les développeurs. Mais, les

chiffres sont très proches l'un de l'autre, la densité de

vulnérabilité est de 27,2 pour le .NET et de 30,0 pour le Java.

-Solution utilisée par des nombreux gouvernements et institutions

financières.

-Exemple des sites en ASP:Massar,Stackoverflow

9



Modèles de programmation ASP.Net

ASP.NET prend en charge un certain nombre de modèles de

programmation pour la création d'applications Web

?ASP WEB Forms: Framework pour la construction de pages

modulaires à partir de composants, avec des événements d'interface

utilisateur en cours de traitement côté serveur.

?ASP MVC: permet de créer des pages Web à l'aide du modèle de

conception Modèle – Vue – Contrôleur

?ASP .Net Core: framework open source multiplateforme et hautes

performances pour la création d'applications web modernes.

10



11

Structure  du projet  MVC



ASP Web forms vs ASP MVC

o ASP MVC plus léger car il ne stoke par les données des

variables dans les viewState.

o L’entrée en ASP Web forms est la vue en ASPMVC est le

controller?facilité d’automatisation des tests unitaires puisque

on peut tester juste les fonctions de projet.

o La création de l’interface graphique en ASP Webforms se

base sur glisser/déposer en ASPMVC il faut avoir des

connaissances en html et css.

12



Le patron de conception MVC

-Le MVC est un pattern architectural qui sépare les données (le modèle),

l'interface homme-machine (la vue) et la logique de contrôle (le contrôleur).

-Ce modèle de conception impose donc une séparation en 3 couches :

•Le modèle : Il représente les données de l'application. Il définit aussi

l'interaction avec la base de données et le traitement de ces données.

•La vue :Elle représente l'interface utilisateur, ce avec quoi il interagit. Elle

n'effectue aucun traitement, elle se contente simplement d'afficher les données

que lui fournit le modèle.

•Le contrôleur :Il gère l'interface entre le modèle et le client. Il va interpréter la

requête de ce dernier pour lui envoyer la vue correspondante. Il effectue la

synchronisation entre le modèle et les vues.

13



Architecture d’une application ASP MVC

New project? Application web ASP.Net? Choisir MVC

14



Etape de création des pages ASP MVC

15

Etape1:     On crée le modèle de donnée

Etape2:     On crée le Controller

Etape3:     On crée la Vue



Modèle

-C’est une classe qui devra se créer dans le dossier Model,

porte les données de projets

16



Controller

-Il représente le point de démarrage de projet ASP MVC

-Il a pour rôle d’interpréter les requêtes de client pour lui

envoyer les réponses(vues).

-C’est une classe qui va contenir un ensemble des actions.

•Création du controller: click droit sur le dossier

controller?Ajouter un controller ?il existe plusieurs

modèles de contrôleur. Pour l'instant, nous choisirons

le contrôleur MVC - Vide.

17



Controller

-La classe Controller fournit des méthodes qui répondent

aux requêtes HTTP envoyées à un site Web ASP.NET MVC.

18



Controller

-Dans une classe de contrôleur, chaque méthode publique

représente une action.

-ActionResult signifie que la méthode va réaliser l'action

correspondant à son nom.

-Dans cet exemple l’application donnera l'URL suivante

http://localhost/Etudiant/Index.

-L’exécution de cet exemple va déclencher une erreur: car on

a pas encore créer la vue.

19



View

o return View() dans le controller: amène le programme à

chercher dans le dossier View, un sous-répertoire portant le

même nom que le controller dans le quel on trouve la vue(a

le même nom que l’action)

o Càd dans le dossier View on doit avoir un sous-répertoire

Etudiant portant une page Index(nom de l’action exécuté).

o A savoir que par défaut, ASP.NET MVC va chercher la vue

dans le sous-répertoire du même nom que le contrôleur,

mais que si elle n’existe pas, il ira voir ensuite dans le sous-

répertoire Shared.
20



View

-Création de vue:

On clique au dessus de l’action du controller qui va être

responsable de l’affichage de vue et on choisit ajouter une

vue

21



View

-Si on veut appeler une vue qui porte un nom différent

que l’action on met return View(‘’Index2’’) mais

toujours la recherche est dans le même sous

répertoire.

22



23

Gestion d’Etat



Synchronisation entre le modèle et la 
vue

• Envoi des données via le controller:

-Pour envoyer des données du modèle vers la vue,il faut

les passer dans les paramètres de View.

24



Synchronisation entre le modèle et la 
vue

• Récupération des données dans la vue:

-Chaque vue a une propriété Model qui sauvegarde l’objet

envoyé par le controller

@Model.nom

25



Synchronisation entre le modèle et la 
vue

• Récupération des données dans la vue

-Si on veut afficher une liste des valeur,on doit passer par

l’instruction foreach

-Toujours lors d’une instruction foreach dans la vue,il faut

ajouter

@model  IEnumerable<MvcTP2.Models.etudiant>

Au lieu de @model MvcTp2.Models.etudiant

26



ViewData

•Passer des valeurs du contrôleur vers  la vue:

-On utilise le dictionnaire de clé/valeur ViewData

Dans le controller: ViewData["Nom"] = ‘’yyy’’;

•Récupération de valeur:

-Dans la vue  @ViewData["Nom"]

27



ViewBag

-Autre façon pour passer les données de controller vers la

vue est la propriété viewBage

-Création: ViewBag.Nom=‘’tttt’’

-Récupération:@ViewBag.Nom;

-On peut passer des données Via le ViewData et les

récupérer via ViewBag et vice versa

-Le viewBag n’accepte pas des espaces.

28



RedirectToAction

•Si le controller ne veut pas afficher une vue mais il

veut se rediriger vers une autre action:

RedirectToAction("Index3");

-http://localhost:4979/Etudiant/Index3 ? affiche xxxx

29



Redirect(Url.Action(…))

•Si le controller veut se rediriger vers une action qui se

trouve dans un autre controller:

Redirect(Url.Action("Index", "accueil"));

30



Envoi des données via le View

-Supposons que l’utilisateur cette fois qui veut envoyer des

donnée dans un lien

http://localhost:4979/Etudiant/Index5?x=eee&y=fff

Récupération: utiliser ces données comme des paramètres

des actions.

31

http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee
http://localhost:4979/Etudiant/Index5?x=eee


Cookies

-Création:

HttpCookie cookie = new HttpCookie("Cookie");

cookie.Value = "xxx" ;

this.ControllerContext.HttpContext.Response.Cookies.

Add(cookie);

-Récupération:

String s = 

this.ControllerContext.HttpContext.Request.Cookies["Cookie"].

Value;
32



Cookies

-Vérification

this.ControllerContext.HttpContext.Request.Cookies.AllKeys.Co

ntains("Cookie")=true

-Suppression:

HttpCookie cookie = 

this.ControllerContext.HttpContext.Request.Cookies["Cookie"];

cookie.Expires = DateTime.Now.AddDays(-1);

this.ControllerContext.HttpContext.Response.Cookies.

Add(cookie);

33



Session

-Création:

Session["Cookie"] = "xxx";

-Récupération:

String s =  Session["Cookie"];

Vérification

Session["Cookie"] = null

Supprimer:

Session["Cookie"]=null;

34



RouteConfig

-C’est un fichier dans le répertoire App_Start,il correspond à

l’emplacement o? on définit la première page qui va être

exécuter dans le site

35



RouteConfig

-Des fois on aime cacher le langage utilisé pour développer

nos sites

-Pour appeler

36



37

Mise en forme 



Page Layout

-C’est l’équivalent de Master page en ASP WebForms

-Voir _Layout.chtml

-RenderBody():permet d’affecter le contenu de page qui

exploite layout

38



Page Layout

-Chaque vue a une variable nommé Layout qui détermine la

Template à appliquer sur une page.

-Cette propriété est affecté dans la première ligne de la vue

•Création de Layout: on le crée dans le répertoire Shared de

projet?ajouter une vue

39



Page Layout

-Appel de Layout: on le crée dans le répertoire Shared de

projet?ajouter une vue

Remarque:par recommandation les noms des pages

partagés doivent commencer par « _ »

40



Page Layout

Remarque:-Si on n’a pas une ligne au début d’une vue qui

appel le layout à utiliser,le programme cherche layout

définie dans la page _ViewStart.chtml du projet.

41



Partial View

-C’est l’équivalent de User contrôle en ASP WebForms.

-Il s’agit d’une partie de view qu’on peut l’intégrer dans

d’autres view.

• Création: ajouter une nouvelle vue

42



Partial View

•Appel :

-Intégrer cette ligne dans l’emplacement o? on veut appeler

ce partial view

-Exécution:

43



Section

? Problématique: Supposons qu’on a un ensemble des

pages qui utilisent le même Layout page mais on veut

laisser une partie dans Layout se change selon la vue à

afficher

-Autrement dit rendre une section dans layout modifiable

selon la vue à utiliser .

? Solution: Utiliser la notion de section

44



Section

• Création: On définit la section dans Layout page via

l’écriture suivante càd dans cet endroit la section va être

appeler

• Appel: Ensuite on définit le contenu de section dans la vue qui

utilise le précédent layout page

45



Appeler un CSS

-Dans la page chtml on met

-On met la liaison avec les fichiers de script dans le fichier

App_Start /Bundle.config

46


, _version_=1670762176296517632, _root_=2])
org.apache.solr.common.SolrException: Exception writing document id 2 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:36.442 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.446 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Calibri,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.461 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+MS PGothic are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.492 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.628 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=ASPWebForms.pdf, description=web form .net, date_up=2020-06-27 05:35:56.0, id=3, title=webform, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/ASPWebForms.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

A.U:2019-2020

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular

Génie logiciel en .Net



ASP WebForms

3



Objectif

- .Net possède un ensemble de fonctionnalités

dédiées à la création et à la gestion de sites Web.

-ASP.NET permet de créer des sites Web

dynamiques.

-IIS est le serveur web pour les projets web en .Net

4



IIS

-S’installe avec le système d’exploitation windows

-Pour ouvrir IIS ? taper inetmgr sur la barre de recherche

mais assurer que le service est déjà activé

5



IIS

-Activation de IIS

Panneau de configuration?ajouter supprimer des

programmes?Activer ou désactiver des fonctionnalités

windows

6



Privilèges d’ASP

-ASP webForms a une bonne structure et architecture pour la

programmation(Bibliothèque située à une place, les pages Web à une

autre, le code à une autre).

-Plus sécurisée :Selon le cabinet de sécurité WhiteHat Security, la

sécurité est légèrement meilleure avec ASP .NET qu'avec JSP, à cause

du fait qu'il y a une meilleure orientation de la sécurité pour les

développeurs. Mais, les chiffres sont très proches l'un de l'autre, la

densité de vulnérabilité est de 27,2 pour le .NET et de 30,0 pour le

Java.

-Solution utilisée par des nombreux gouvernements et institutions

financières.

7



Architecture WEB, site statique

Serveur Web

Pages Web htmlClient

URL

Contenu html

8



Architecture WEB, site dynamique

HTTP

9



Structure d’un projet ASP

10



En tête et Directive 

- Le Doctype est exactement le même qu’en HTML

- L’ASP.NET a aussi sa ligne qui définit certains
paramètres

11



En tête et Directive 

-On va utiliser le C# comme langage Language="C#".

-Le nom de la page du code behind,correspondant à

cette page .aspx

-On définit le namespace et le nom de la classe lié à la

page.

-Behind: est le code dans lequel on écrira les

instructions qui seront exécutées sur le serveur.

12



Contrôle Serveur 

-Un contrôle serveur est une balise (HTML ou ASP)

associé à la propriété runat="server".

-Cette balise sera associé à un objet lors de l’exécution

du code par le serveur.

-Un contrôle serveur est programmable depuis le code

behind pour répondre à des évènements.

13



Cycle de vie d’une page ASP

Création des contrôles serveur

Chargement  des contrôles serveur 

Dans la page

Affichage de page

Suppression des contrôles serveur

Initialisation(Init)

Chargement(Load)

Rendu(Rend)

Déchargement(Unload)

14



La notion de PostBack

-Il s’agit d’une publication HTTP Post qui consiste à

envoyer une mise à jour au navigateur

Exemple1:

15



La notion de PostBack

Résultat:

Lors du premier chargement de page Après le click sur le bouton

16



La notion de PostBack

-La propriété Page.IsPostBack: teste si c’est le

premier ou deuxième envoi de la page

-Page.IsPostBack=True: il s’agit d’une publication

-Page.IsPostBack=false: Premier accès

17



ViewState
Exemple2:

Résultat:

18



ViewState

-Le ViewState est un système de maintien de la persistance

des données pour les pages ASP.NET.

- La classe Control contient un attribut appelé « ViewState »

qui est un dictionnaire d’état des objets qui contient tous les

états des contrôles.

-Restaure automatiquement les états des contrôles

seulement quand la page est rechargée ? PostBack.

19



Html généré la première fois

20



Html généré la deuxième fois

21



ViewState

Exemple2: 

Si on désactive le viewState « EnableViewState=false »

22



Navigation entre les pages

-Navigation directe: en utilisant un lien hypertexte(tags a href) 

ou quelques composants d’ASP:

-Navigation basée sur le code: en utilisant Response.Redirect

ou Server.Transfer .

23



Response.Redirect

-L'objet Response permet ainsi de manipuler l'ensemble

des informations à destination au navigateur du client.

-La méthode Response.Redirect envoie au navigateur

client l'adresse de la page vers laquelle il doit être redirigé

Syntaxe: Response.Redirect ("URL")

24



Server.Transfert
-L'objet Server est utilisé pour accéder au propriétés et aux

méthodes du serveur.

-Server.Transfer envoie toutes les informations qui ont été

rassemblées par le traitement d'une page ASP, vers une autre

page sans effectué un retour vers le client.

Server.Transfer ("URL")

25



Response.Redirect VS   Server.Transfer

Response.Redirect Server.Transfer

-URL se change alors Le client

connait la redirection.

-maintient l'URL d'origine dans le

navigateur.

-Ne préserve pas la chaîne de

requête et les variables de

formulaire de la demande initiale

Préserve la chaîne de requête et

les variables de formulaire de la

demande initiale

-Allers-retours supplémentaires 

pour le serveur à chaque   

demande

-Evite les allers-retours inutiles

vers le serveur

26



L’objet Request

-C’est un objet qui manipule les informations envoyées de

client vers le serveur:

-Les informations qui passent dans un formulaire.

Request.Form["IdControle"]

-Les informations qui passent dans un lien.

Request.QueryString [" Nom de variable envoyé dans 

le lien "]

27



L’objet Request

Exemple:

Server.Transfer("WebForm2.aspx?cle1=v1" + 

"&cle2="+TextBox1.Text);

- Dans WebForm2.Aspx

Label1.Text = Request.QueryString["cle1"];

Label2.Text = Request.QueryString["cle2"];

28



Gestion d’Etat

• Problème: 

- http est un protocole sans état.

- Chaque appel d’url ignore les précédents.

• Besoin:

-Lors de l’affichage d’une page, il est possible de

personnaliser cet affichage en fonction de

l’utilisateur.

-On peut conserver des mots passe(informations)

pour éviter des identifications.
29



Gestion d’Etat
• Solution:  Moyen pour conserver les informations.

-Deux cas de figures :  

Gestion des états coté client Gestion des états coté 
Serveur

-View State 

- HiddenField

-Query Strings

- Cookies 

- Session

- Application

- Base de donnée

30



Viewstate

• Exemple:

Ecrivez un programme permettant de conserver le

contenu des TextBox dans un viewstate

31



Viewstate

• Exemple:

32



HiddenField

-Il est parfois utile de créer des champs cachés (Hidden

Field) dans lesquels seront stockés des valeurs que l’on

pourra utiliser après un PostBack .

-A la différence des ViewStates, n’ont ni compression, ni

chiffrement ou hachage, un utilisateur avancé pourra

consulter voir modifier les informations contenus dans nos

HiddenField

33



HiddenField

• Exemple:

• Résultat:

34



Les cookies
-Sont des données stockées dans un fichier texte dans le

système de fichier client .

-Fonctionnement:

Serveur

Client

Premier appel

Réponse html + 
cookies

Je veux l’URL  yyy

Voici mes cookies
35



Stocker un cookie sur le client

- Automatique, géré par le navigateur.

-Le navigateur renvoie automatiquement les cookies

concernés par l’URL demandée.

-Les cookies périmées sont automatiquement

supprimées.

36



Les cookies

• Création:

Response.Cookies["nomCookies"].Value = valeur;

• Récupérer un cookie

Request.Cookies["nomCookies"].Value

• Vérifier l’existence d’un cookie:

if (Request.Cookies["nomCookies"] == null)

37



Les cookies

• Fixer la date d'expiration

DateTime dateExpir =   DateTime.Now.AddMonths(3);

Response.Cookies[" nomCookies "].Expires = dateExpir; 

• Supprimer un cookie

-Response.Cookies[" nomCookies "].Expires = DateTime.Now;

38



Les cookies

- Visualiser cookies

39



Les sessions

-Permettent de stocker temporairement (pendant

toute la durée de vie de la session) des

informations transmissibles de page en page.

-Chaque connexion possède un espace sur le

serveur pour stocker des variables de session.

40



Fonctionnement de session

• La première fois que vous ajouter une variable de

session, le serveur vous ouvre une session et génère un

cookie de session comportant un identifiant.

• Dans les rappels ultérieurs votre navigateur renvoie le

cookie de session, ce qui permet au navigateur de

retrouver votre espace de session.

• A la fermeture du navigateur, le cookie de session est

détruit.

41



Session: mise en oeuvre

• Ajouter une variable de session:

Session["sessNom"] = valeur

• Vérifier l’existence d’une variable de session:

if (Session["sessNom"] != null)

• Relire une variable de session:

textbox1.Text = Session["sessNom"];

42



Session: mise en oeuvre

• Supprimer une session:

Session["sessNom"] = null

ou

Session.clear();

43



Les évènements de session

La session possède deux évènements.

-Session_Start: exécuté quand une nouvelle session 

démarre

-Session_End: exécuté quand une session est 

fermé.

44



Fichier Global.asax

45



Application

Définition:

-il s'agit de l'objet représentant l'application web elle-

même.

-Cet objet permet le partage d'information entre

plusieurs utilisateurs d'une application.

Exemple:

-nombre d'utilisateurs connectés simultanément.

46



Application

Fonctionnement:

-L’objet Application se situe dans la mémoire du serveur

Web.

-crée lorsque l’application reçoit sa première requête, et

reste actif jusqu'à ce que la dernière Session soit

libérée.

47



Application

Comment initialiser et lire ces variables?

• Affecter une variable d'application:

Application ["clé"] = valeur

• Récupérer une variable d'application:

Variable = Application ["clé"] 

48



Evénements d’Application

• Evénement Application_OnStart: 

-Rôle:

Cet événement est déclenché lorsque l'application

démarre, c'est-à-dire à la mise en service du site web.

-Exemple d’utilisation:

On utilisera cet événement pour initialiser des variables

d'application comme un compteur de visiteurs, par

exemple.

49



Evénements d’Application

• Evénement Application_OnEnd: 

-Rôle:

Cet événement est déclenché lorsque l'application 

s'arrête c.à.d une fois que toutes les sessions en cours 

ont été arrêtées.

-Exemple d’utilisation:

On utilisera par exemple cet événement pour enregistrer 

quelque part le nombre de visiteurs, afin de reprendre ce 

nombre au prochain démarrage. 

50



Evénements d’Application

Fichier global.asax:

51



Utiliser un SGBD

? Utiliser les instructions de Ado.net.

ou

? Travailler en mode assistant:

1.SqlDataSource :composant ajouté à partir de ToolBox ,il

représente un objet utilisé pour accéder aux tables d’une

base de donnée.

52



Utiliser un SGBD

2.Configurer le sqlDataSource

53



Utiliser un SGBD

3.Pour ajouter les instructions de mise à jour(Insert,Update,

Delete).

Cliquer sur Options avancées

54



Utiliser un SGBD  (mode assistant)

oGridView:

-Permet d’afficher les données dans un tableau

-dataSourceId pour la lier à un contrôle SqlDataSource.

oDetailsView:

-affiche les données enregistrement par enregistrement.

oDataList:

-affiche les informations sous forme d’une liste.

55



Utiliser un SGBD  (mode assistant)

? Lier les composants précédents au SQLDataSource:

56



57



58



Les validateurs

-Sont des contrôles dédiés à la validation càd permettant la

vérification des champs d’un formulaire

•Les propriétés des validateurs

- ControlToValidate : Permet d'associer à un validateur le

contrôle qu'il doit valider.

-Display : Permet de définir la façon dont vont s'afficher les

messages d'erreurs des validators(static;dynamic;None).

-Text : Permet d'indiquer le message d'erreur qui sera affiché

59



Les validateurs
•Les propriétés des validateurs

-ErrorMessage : Permet d'indiquer le message d'erreur qui

sera affiché. Cette propriété est utilisée notamment pour le

contrôle ValidationSummary.

-ValidationGroup : Permet de grouper les contrôles pour

que ne soient validés que les contrôles qui font parti du

même groupe. Cela permet de définir plusieurs zones de

validation dans une page.

-EnableClientScript : Permet d'indiquer si l'on souhaite

utiliser une validation cliente ou non. (Vrai par défaut)

60



Exécution de validation

• Il peut s’exécuter:

- Sur le client: le java script

- Sur le serveur: Causesvalidation=True

-Sur le client, puis le serveur (conseillé).

61



Les principaux validateurs

• RequiredFieldValidator: permet de tester si un champ est

rempli ou non.

• RangeValidator: vérifie si la valeur d'un contrôle d'entrée

se trouve dans une plage de valeurs spécifiée.

-On peut comparer des Integer, Double, Date ... Pour

préciser quel type on attend, on va utiliser la propriété Type.

Les bornes à valider seront saisies grâce aux

propriétés MinimumValue et MaximumValue.

62



Les principaux validateurs

• CompareValidator: permet de comparer la valeur entrée

par l'utilisateur avec

-une valeur : ValueToCompare et Operator(Equal,NotEqual…)

- la valeur d'un autre contrôle: ControleToCompare

-On peut également se servir de ce contrôle pour vérifier

qu'une donnée saisie est d'un type particulier:on utilisera

Operator=DataTypeCheck et on change le Type.

63



Les principaux validateurs

•RegularExpressionValidator: permet de vérifier une

entrée à partir d'une expression régulière.Par exemple, pour

vérifier un email.

64



Les principaux validateurs

• CustomValidator: Effectue une validation définie par

l'utilisateur sur un contrôle d'entrée dans l’événement

suivant:

ServerValidate(object source, serverValidateEventsArgs

args)

-args:représente les données associées à cet evt;il possède deux

propriétés:

? value: renvoie la valeur de la commande d’entrée(ex:valeur

saisi dans un TextBox)

?IsValid: tester si la validation est réussi ou non.

65



Les validateurs

• ValidationSummary: ce n'est pas un validator comme les

autres, il n'effectue pas de validation mais propose de

récapituler les différentes erreurs survenues lors de la

validation de la page.

-Il se base uniquement sur le contenu des

propriétés ErrorMessage de chaque validator qui n'a pas

passé la validation.

66



Les pages maîtres.

Dans un site web,on aura souvent une partie qui se répète dans

toutes les pages comme l’entéte/pied de page,menu

67



Les pages maîtres.

• On peut réaliser cela via les pages maîtres.

• Elles permettent de définir une mise en page et les éléments

à inclure dans toutes les pages.

• Il est logique de commencer le projet par la construction

d’une page maître.

68



Construire une page maître

• Ajouter un nouvel élément de type page maître.

• Définir les éléments de mise en page, table ou div.

• Inclure les éléments constant: décorations et contrôles

utilisateur.

• « Place Holder » pour inclure les éléments variables.

• Après on crée un nouvel élément webform use Master page (ou

contentPage)et on coche notre master page et juste dans la

partie de placeHolder o? on peut inclure le contenu de cette

page.

69



Contrôle utilisateur

-En plus d'utiliser des contrôles serveur Web dans les pages

Web ASP.NET, on peut créer nos propres contrôles

personnalisés et réutilisables, à l'aide des mêmes techniques

que celles qui sont utilisées pour créer les pages Web

ASP.NET. Ces contrôles sont appelés contrôles utilisateur.

-construire user controle: Ajouter nouvel élément?web user

control?et après on peut le glisser dans d’autres pages.Toute

modification dans le user control sera transmis aux autres pages

qui l’utilisent(centralisation d’administration)

70



Web.siteMap

-SiteMap est une représentation de la structure de navigation

d'un site, fournie par un ou plusieurs fournisseurs de plan de

site(SiteMapDataSource)

-La manière la plus simple de créer un plan de site consiste à

créer un fichier XML nommé Web.sitemap qui organise les

pages du site de manière hiérarchique.

-Création: ajouter nouvel élément de type Web siteMap

71



Web.siteMap

72



Web.siteMap

•Les contrôles disponibles sont :

-TreeView qui affiche l'arborescence du sitemap.

-Menu qui permet d'afficher la navigation sous la forme d'un menu.

-SiteMapPath qui permet d'indiquer à l'utilisateur où il se trouve dans

la hiérarchie du site.

-Création:on intégre ces composnats à partir de toolBox et on affecte à

leur propriété « DataSourceId »:le siteMap généré précédemment

73

http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.treeview.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.treeview.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.menu.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.menu.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.sitemappath.aspx
http://msdn.microsoft.com/fr-fr/library/system.web.ui.webcontrols.sitemappath.aspx


Application multilingue

Pour avoir un site web multilingue:

?Etape1: La localisation

Le principe de la localisation est de générer un fichier qui

va contenir une référence de chacun de nos contrôles de

notre page web ainsi qu’une propriété qui contiendra du

texte.

74



Application multilingue

•Générer un fichier de ressources locales

75



Application multilingue

•Générer un fichier de ressources locales

Remarque: ce fichier s’enregistre dans le dossier «

App_LocalRessource ».
76



Application multilingue

•Générer un fichier de ressources locales

77



Application multilingue

?Etape2: Pour ajouter une langue à votre application web, 

copiez votre fichier de ressource locale dans votre répertoire 

App_LocalResources puis renommez-le de la façon suivante : 

(nom de la page).aspx.(nom de la langue selon la norme 

ISO 639-1).resx

Exemple: Default.aspx.fr.resx ; Default.aspx.en.resx; 

Default.aspx.ar.resx

78



Application multilingue
?Etape3: Mettre en place plusieurs langue:

-La méthode InitializeCulture():Définit la Culture et UICulture pour 

le thread actuel de la page.

-La valeur Culture détermine les résultats de fonctions spécifiques

à une culture, comme la mise en forme de la date, des nombres

et de la monnaie, etc.

-La valeur UICulture détermine les ressources qui sont chargées

pour la page.

79

https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.culture(v=vs.110).aspx
https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.uiculture(v=vs.110).aspx
https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.culture(v=vs.100).aspx
https://msdn.microsoft.com/fr-fr/library/system.web.ui.page.uiculture(v=vs.100).aspx


Application multilingue

80

protected override void InitializeCulture()

{ 

if (Request.Form["DropDownList1"] == "en-US")

{Thread.CurrentThread.CurrentCulture = new 

CultureInfo("en");

Thread.CurrentThread.CurrentUICulture = 

new CultureInfo("en");

}

else

{

Thread.CurrentThread.CurrentCulture = new 

CultureInfo("fr");

Thread.CurrentThread.CurrentUICulture = 

new CultureInfo("fr"); }



AJAX

81



AJAX

-En aspx à chaque appel, la page est entièrement

reconstruite.

-Ajax permet de ne reconstruire qu’une partie de la page.

Exemple:

-le contenu d'un champ de formulaire peut être changé,

sans avoir à recharger la page avec le titre, les images, le

menu, etc.

-Recherche en google.

82



Principe d’AJAX

Asynchronous Javascript And XML(Javascript et Xml

asynchrones):

-Asynchrone:faire des appels asynchrones au serveur depuis

le client.

-Javascript et XML:

-Lors de ces appels, le serveur retournera du XML qui sera

"récupéré" par JavaScript et traité.

-L’objet XMLHttpRequest de javascript sert au dialogue

asynchrone avec le serveur Web

83



Principe d’AJAX

84



ASP.net Ajax

Microsoft ASP .NET AJAX Extensions, présentés sous la

forme de nouveaux contrôles serveur ASP .NET, et classes

associées.

85



ASP.net Ajax

•Etape1:

-Insérer un script manager dans le code aspx:

<asp:ScriptManager ID="ScriptManager1"  runat="server">

</asp:ScriptManager>

•Il permet:

-l’ajout des bibliothèques de scripts au navigateur.

-L’appel des services web

86



ASP.net Ajax
Etape2:

-Encadrer les objets concernés par Ajax par des balises update 

Panel:

<asp:UpdatePanel ID="UpdatePanel1" runat="server">

<ContentTemplate>

<asp:TextBox ID="txtA" runat="server"></asp:TextBox>

<asp:TextBox ID="txtResult" runat="server"></asp:TextBox>

</ContentTemplate>

</asp:UpdatePanel>

87



ASP.net Ajax

Etape2:

UpdatePanel: permet la restitution d’une section de page

Remarque:

-On peut pas utiliser une navigation de type

Server.Transfer dans un composant intégré en

Updatepanel

88



AJAX Control Toolkit

-C’est un ensemble de contrôles Web enrichis

permettant d’apporter à cette dernière, de nouvelles

fonctionnalités AJAX, au travers de contrôles ASP .NET.

-Il contient plus de 30 contrôles qui vous permettent de

créer facilement des riches, des pages Web interactives.

89



AJAX Control Toolkit

-Pour l’intégrer il faut l’installer :

• Installation à partir d’un lien

https://www.devexpress.com/Products/AJAX-Control-Toolkit/

•Installation à partir NuGet Package Manager:

Une collection d'outils pour automatiser le processus de

téléchargement, l'installation, la mise à niveau, la configuration et

la suppression de paquets à partir d'un projet Visual Studio.

90

https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/
https://www.devexpress.com/Products/AJAX-Control-Toolkit/


AJAX Control Toolkit

-Installation à partir NuGet Package Manager:

Outils-->Gestionnaire de package Nuget-->Gérer les packages

Nuget pour la solution

91



AJAX Control Toolkit

-Insérer les nouvels éléments dans la boite à outils de VS:

Click droit en toolbox?Ajouter un onglet?Insérer un nom

-Click droit sur le nouvel onglet?Choisir les 

éléments?sélectionner le fichier AjaxControlToolkit.dll

92



AJAX Control Toolkit

Exemple: 

-le contrôle Editor

-Le contrôle AutoComplete est un extender de 

TextBox qui fournira une auto-complétion de ce 

qui est écrit dans le TextBox. Il fonctionne grâce 

à un service web qui doit avoir pour signature :

public string[] RecupererListe(string Text){ ... 

}

93



AJAX Control Toolkit
AutoComplete 1/2: 

94



AJAX Control Toolkit

AutoComplete 2/2: 

95


, _version_=1670762176579633152, _root_=3])
org.apache.solr.common.SolrException: Exception writing document id 3 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:36.700 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.713 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.741 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=Génielogiciel-IOC.pdf, description=genie logiciel, date_up=2020-06-27 05:36:15.0, id=4, title=génie logiciel, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/Génielogiciel-IOC.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

A.U:2019-2020

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular

Génie logiciel en .Net



Génie logiciel en .Net

Chapitre3:

3



Génie logiciel en .Net

-Le génie logiciel est une science qui s'intéresse aux

procédures systématiques qui permettent d'arriver à créer

des logiciels fiables qui correspondent aux attentes du client,

avec un coût d'entretien réduit et de bonnes performances

tout en respectant les délais et les coûts de construction.

Qualité logicielle=Qualité fonctionnelle+Qualité structurelle

4



Génie logiciel en .Net

Dans ce cours on va voir l’application des deux principes

qui sont parmi les bonnes pratiques pour produire des

logiciels fiables

IOC -Inversion Of Control-

Les tests unitaires

5



IOC
-Inversion Of Control-

6



Principe ouvert/fermé

-En POO, le principe ouvert/fermé affirme qu'une classe doit

être à la fois ouverte (à l'extension) et fermée (à la

modification):

oOuverte : signifie qu'elle a la capacité d'être étendue.

oFermée: signifie qu'elle ne peut être modifiée que par

extension, sans modification de son code source.

7



Principe ouvert/fermé

Pourquoi ce principe?

1.La modification d'un code existant peut ne pas être

possible.

2.La modification peut provoquer l'apparition de bugs dans

cette partie du code. Il faut alors refaire la liste des tests

de non régression, ce qui peut entraîner des surcoûts non

négligeables.

8



Principe ouvert/fermé

Pourquoi ce principe?

3.la modification d'un code existant peut provoquer des problèmes

bien plus graves qu'un bug en terme de maintenance: le code

devient fragile, visqueux, rigide ou plus immobile :

Rigide un petit changement induit une grande quantité de petit
changements à d'autres endroits dans le logiciel

Fragile un changement mineur provoque des bugs dans d'autres endroits du
logiciel

Immobile impossible de réutiliser une partie du logiciel pour effectuer
d'autre tache dans le logiciel ou à l'extérieur de celui-ci.

visqueux moins coûteux d'introduire du code de mauvaise qualité plutôt que
du code respectant l'architecture d'origine.

9



Principe ouvert/fermé

-L'idée est qu'une fois qu'une classe a été approuvée via

des revues de code, des tests unitaires et d'autres procédures de

qualification, elle ne doit plus être modifiée mais seulement

étendue.

Le principe ouvert-fermé, est l'un des principe fondateur de

l'architecture orientée objet. Son application a pour principe

l'écriture d'un code source évolutif, dont les extensions ne touchent

pas (ou peu) le code source déjà existant. On évite ainsi le

pourrissement de l'architecture en garantissant que celle ci ne sera

pas rigide/fragile/visqueuse ou immobile par l'intégration d'une

nouvelle fonctionnalité.
10



Application de principe de ouvert/fermé

Exemple:

Soit l’application suivante qui implémente l’architecture 3-tiers 

suivante:

DAO

GetData()

Metier

donne: DAO

TraiterDonnee()

Presentation

met:Metier

Main()

11



Application de principe de ouvert/fermé

Exemple:

12



Problème du couplage fort

-Le couplage est une métrique indiquant le niveau d'interaction

entre des classes ou des modules:

-Couplage fort: si les composants échangent beaucoup

d'information.

-Couplage faible: si les composants échangent peu

d'information.

13



Problème du couplage fort

-Dans l’exemple précédent, les classes DAOImpl/MetierImpl et

les classes Presentation /MetierImpl sont liées par un couplage

fort.

-Donc si on veut créer une nouvelle version de la méthode

GetDonne() de la classe DAOImpl,nous serons obligés d’éditer le

code source des classes DAOImpl et metierImpl

On a pas respecté le principe « une application doit être

fermée à la modification et ouverte à l’extension »

Rendre l’application faiblement couplé
14



Couplage faible

-Pour appliquer le couplage faible il faudra passer par les interfaces

au lieu de passer par les classes directement.

-la classe A peut fonctionner avec n’importe quelle classe qui

implémente l’interface IB.

-Par la suite, n’importe quelle classe implémentant interface IB

peut être associée à la classe A ?le code de la classe A sera

fermé à la modification
15



Couplage faible

-Pour appliquer le couplage faible il faudra passer par les

interfaces au lieu de passer par les classes directement

-La nouvelle conception

IDAO

GetData()

MetierImp

donne: IDAO

TraiterDonnee()

IMetier

TraiterDonnee()

DAOImp

GetData()
16



Couplage faible

17



Couplage faible

On applique la notion de IOC

18



IOC -Inversion of control-

-L’inversion de contrôle est un patron d'architecture commun à

tous les frameworks . Il fonctionne selon le principe que le flot

d'exécution d'un logiciel n'est plus sous le contrôle direct de

l'application elle-même mais du framework ou de la couche

logicielle sous-jacente.

- Il est connu aussi étant « l'inversion de dépendances » qui est

un patron de conception permettant, en POO, de découpler les

dépendances entre objets.

19



Inversion de dépendances

-L'inversion des dépendances est une implémentation de

l'inversion de contrôle. Pour diminuer le couplage entre les

classes, on va ajouter une interface entre chaque classe,

de façon à ce qu'au lieu d'appeler une classe physique,

l'appelant appelle une interface, ceci permettant d'ajouter

un niveau d'abstraction supplémentaire entre l'appelant et

l'appelé.

20



Inversion de dépendances

-Pour appliquer le principe de IOC ,on peut procéder de 3

façons:

• Instanciation statique

• Instanciation dynamique

• Utiliser des conteneurs IOC

21



Inversion de dépendances

•Instanciation statique :

-Appliquée dans l’exemple précédent

-Ses limites: l’application n’est pas fermé à la modification d’une

manière définitive puisqu’on a accédé au code source de la classe

présenation afin de déterminer le type de la classe DAOImpl à

utiliser par la suite

-Il faut trouver un moyen pour que le code source de la classe

présentation reste aussi fermer à la modification

Utiliser l’ Instanciation dynamique

22



Inversion de dépendances

• Instanciation dynamique:

-L'instanciation dynamique d'objet permet de créer un objet à un

instant donné et de libérer cet objet lorsqu'il n'est plus utilisé.

-On l’utilise quand l'objet alloué n'est pas connu à l'avance ou

qu'il n'est pas certains d'être utilisé, par contre on utilise statique

dans tous les autres cas normaux.

Cas d’utilisation: nous voulons créer plusieurs implémentations

de classes qui réalisent une même interface, et choisir à

l'exécution quelle implémentation utiliser

23



Inversion de dépendances

• Instanciation dynamique:

-Instanciation statique: on utilise new

-Instanciation dynamique:

1. Obtient le type de l’objet à instancier

2. Crée une instance du type spécifié en utilisant le constructeur

par défaut de ce type.

24



Inversion de dépendances

• Appliquer l’instanciation dynamique:

1.On crée un fichier de configuration contenant la liste des

implémentations possibles

2.On fait des instanciations dynamiques qui se basent sur

le fichier de configuration crée.

25



Inversion de dépendances

Exemple
1. Fichier de configuration

26



Inversion de dépendances

2. Instanciation  dynamique:

27



Conteneurs IOC

•Injection de dépendances

l'injection de dépendances est une technique permettant de

mettre en oeuvre l'inversion de dépendances.

•Conteneurs IOC:

-Les conteneurs IoC sont des outils spécifiquement conçus pour

faciliter l'injection de dépendances.

-Le conteneur récupère la responsabilité de l'instanciation des

classes qu'elle doit injecter. On va voir comment ça passe dans

le code.

28



Conteneurs IOC

Le conteneur reçoit les instructions sur les objets à instancier,

configurer, assembler par la lecture des métadonnées de

configuration fournis. Les métadonnées de configuration peut

être représentées soit par XML, annotations C#, ou un code C#.

Métadonnée de  

configuration

Conteneur 

IOC
Instanciation 

des objets

29



Unity

-Unity est un conteneur IoC publié par Microsoft .Il facilite la

construction d'applications faiblement couplées

•Installation:

•Après Installation

30



Unity

31



Unity

1.Instancier un objet de conteneur

2.Configuration de dépendance: on ajoute la classe DAOImpl

au conteneur

3.Résoudre la dépendance en utilisant le conteneur IOC

4.Maintenant on pourra appeler la fonction TraitementDonne

qui appellera GetDonne de la classe DAOImp

Remarque: Il y’a 2 modes d’instanciation lors de configuration

de dépendance

32



Unity

•Mode d’instanciation:

-AddSingleton:

Il crée une instance unique dans toute l'application. Il crée

l'instance pour la première fois et réutilise le même objet dans

tous les appels.

33



Unity

•Mode d’instanciation:

-AddTransient:

Les objets auront une durée de vie transitoire,ce mode crée une

nouvelle instance à chaque fois ces objets seront demandés

34



Unity MVC5

Exemple: On crée une application ASPMVC5

1.Ajout des services

35



Unity MVC5

Unity.Mvc5 est une bibliothèque qui permet l'intégration simple

du conteneur Unity IoC de Microsoft avec ASP.NET MVC 5.

• Installation:

36



Unity MVC5

• Configuartion des services

La configuration de l’injection de dépendance en ASP MVC se

fait dans le fichier UnityConfig.cs

37



Unity MVC5

• Configuartion des services

Ajoutez un appel à UnityConfig.RegisterComponents () dans la

méthode Application_Start de Global.asax.cs pour que le

framework MVC utilisera ensuite Unity.Mvc5 DependencyResolver

pour résoudre les dépendances.

38



Unity MVC5

•Utilisation des services :Controller

39



Unity MVC5

•Utilisation des services :View

40



Unity MVC5

• Résultat d’exécution:

-Mode Transient:

-On a une valeur pour chaque appel

41



Unity MVC5

• Résultat d’exécution:

-Mode singleton:

-On a le même résultat pour les deux appels

-Aussi si on fait un refresh/ou on passe à un autre

navigateur ,toujours on a le même résultat

42


, _version_=1670762176698122240, _root_=4])
org.apache.solr.common.SolrException: Exception writing document id 4 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:36.829 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Calibri,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.839 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.946 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial,Bold are not implemented in PDFBox and will be ignored
2020-06-28 16:49:36.963 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=NETCore-partie1.pdf, description=net core asp mvc, date_up=2020-06-27 05:36:58.0, id=5, title=netcore, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/NETCore-partie1.pdf, user_name=Zidani Mohamed, text=
Ecole Nationale des Sciences Appliquées de Safi

Programmation 
avancée en c#.NET

Ing.Meryem OUARRACHI

1



Plan  du module

2

BI en Self Service

Programmation WEB

Programmation distribuée avancée

? Web API

? GraphQL

? Généralités outils Web

? ASP MVC

? ASP.Net core

? Angular en ASP.Net Core

Génie logiciel en .Net



.Net Core

Chapitre7:

3



Plan du chapitre 

?.Net Core

?Docker

?ASP .Net Core

?Développement sous linux

? Entity Framework

?Inversion du contrôle

?Les sessions et les cookies

?JWT

4



C’est quoi le .Net Core?

-La tendance actuelle de Microsoft: ouverture à un nouveau type 

de client. 

5



C’est quoi le .Net Core?

-C’est une nouvelle implémentation open source de .NET

qui va nous permettre d'écrire du code multiplateforme

pour les charges de travail optimisé pour le cloud.

6



Caractéristiques de .Net Core

• Multiplateforme: càd cross plateforme

• Open source: Le Framework .Net Core est open source et

disponible sur GitHub.

7



Caractéristiques de .Net Core
• Modulaire: .NET Core est modulaire dans son architecture car on ajoute au

project.json uniquement les dépendances dont on a besoin. Par défaut, il n’y

en a pas, et Visual Studio et Nuget se chargent de télécharger les fichiers

correspondant aux dépendances supplémentaires.

- Dans le Framework .Net classique, il est nécessaire d’installer l’ensemble

du Framework. Les applications se basent ensuite sur le GAC pour trouver les

librairies à utiliser.

-Dans le .Net Core l’ensemble des librairies utilisées par l’application sont

fournies à l’application, càd chaque application vivra avec ses versions de

librairies. Il n’y aura plus de dépendances entre les applications, cela via l’outil

DNU (DN Update) de DNX(Dot Net eXecution)

-Le DNX est un sdk open source ainsi qu'un environement d'exécution qui

permet le développement d'applications .Net pouvant fonctionner sur

windows,OSX ou linux.
8



Caractéristiques de .Net Core

•Côté exécution:

-.Net Core est plus rapide dans l’exécution

-.Net Core est folder base et non project base càd si on

supprime/ajoute quelque chose dans le dossier sera

directement supprimé/ajouté dans le projet en visual studio

9



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-On reste pas limiter à IIS puisque la configuation de projet se fait

dans le projet.json et le fichier startup càd pas de web.config qui

est spécifique à IIS.

-Pour l’exécution microsoft fournit un serveur, Kestrel. Ce serveur

est également développé avec .NET Core, et lancé avec DNX.

c'est un serveur multiplateforme.

10



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-Kestrel est pris en charge sur toutes les plates-formes

-On peut utiliser Kestrel seul ou avec un serveur proxy inverse , tel

que IIS,Apache ou Nginx. Un serveur proxy inverse reçoit des

requêtes HTTP provenant d'Internet et les transmet à Kestrel

après un traitement préliminaire.

11



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-Kestrel avec IIS: Lorsque on utilise IIS ou IIS Express en tant que

proxy inverse pour ASP.NET Core, l'application ASP.NET Core

s'exécute dans un processus distinct du processus de travail

IIS. Dans le processus IIS, un module IIS spécial s'exécute pour

coordonner la relation de proxy inverse. C'est le module de base

ASP.NET . Les principales fonctions du module principal ASP.NET

sont de démarrer l'application ASP.NET Core, de la redémarrer

lorsqu'elle se bloque et de lui transférer le trafic HTTP au serveur

kestrel

-Kestrel avec Nginx:

12



Caractéristiques de .Net Core

• Côté Déploiement: (projet ASP.net core)

-Possibilité de déployer sous Doker , afin de nettement faire

baisser les coûts des licences liés aux applications .NET.

-Docker est une application open source permettant

d’automatiser le déploiement d'applications dans des

conteneurs logiciels.

-Docker s’intégre dans les outils de la mise en place de

Devops

13



DevOps

-C’est une philosophie de développement qui vise à  créer 

une collaboration  entre l’équipe de développement et les 

opérationnelles afin de développer;

-Outils qui aident à arriver à ce but

-Les outils de développement continue comme Git/SVN

-Les outils d’automatisation des tests unitaires et les tests 

d’intégration comme Jenkins

-Outils d’automatisation de déploiement comme :Docker

14



Docker
Avant docker:

1.le développeur :développe l'application puis génère le package de

l'application à déployer: l'ensemble de file cs .Net ou le fichier war en java.

2.Il doit déterminer l'ensemble des dépendances et des configurations à

mettre en place pour que l'application fonctionne correctement

3.L'opérationnel : doit installer et configurer tous ce qui est demandé par le

développeur

4.Si le développeur effectue des mises à jour, l'opérationnel doit refaire

l'étape précédente-->la vie sera difficile pour l'administrateur système--

>Avoir des conflits avec le développeur+beaucoup de temps pour le

déploiement

15



Docker

Avec docker:

1.Le développeur développe l’application et construit une image

docker contenant toutes les dépendances nécessaires pour son

exécution.

2.L’opérationnel instancie le conteneur et fait un « run » de

l’image précédente

16



Docker

17



C’est quoi docker

• C’est un conteneur permettant de créer un environnement

d’isolation d’une application

• Un conteneur effectue un regroupement de tous les fichiers

nécessaires à l’exécution d’un programme(code,runtime,outils

de SE, bibliothèque..)

18



Docker

le développeur va développer l’application et la mettre

dans un conteneur et par la suite avec des simples

commandes on va arriver à déployer et démarrer

l’application?on aura pas des conflits entre les versions et

les différences dépendances utilisées pour chaque service

de l’application

19



Mise en place de docker

Pour commencer à utiliser docker il faut avoir

-le moteur docker:Exécute des commandes nécessaires pour

créer et exécuter les images docker

-docker client:pour commencer à interroger avec le moteur

docker

Remarque: On a aussi Docker hub c’est une plateforme dans

laquelle on peut publier les conteneurs

20



Les principales commandes de docker

• docker build:pour créer une image

• docker push image:publier une image sur docker hub

• docker pull image:pour télécharger une image

• docker run image:exécuter une image

21



Implémentation de docker

1.Le développeur crée l’application

2.Le développeur crée un dockerfile:un fichier qui contient

quelques lignes décrivant les dépendances que

l’application aura besoin

3.Puis il exécute la commande docker build qui permet de

créer une image de projet

4.Une fois l’image créé il peut la publier sur Docker hub via

la commande docker push

22



Implémentation de docker

5. L’administrateur va appeler la commande ‘Docker run’:pour

exécuter une image sur une machine càd démarrer l’application

sur un conteneur?l’administrateur système n’a pas besoin de

plusieurs éléments pour qu’il puisse déployer l’application il va

rien installer chez lui

23



Docker en .Net

24



Docker en .Net

25



ASP.Net Core

26



Environnement du developpement .Net 
Core

-Il faut avoir DNX qui représente l’environnement d’exécution

-Il faut avoir Kestrel pour faire fonctionner une application

-Coupler l’application avec un serveur proxy

Windows IIS

Linux Nginx

27



Environnement du développement. Net Core

• Sous Windows

Etape1: Installation de visual studio community 2017

Etape2: Installation .Net core (cela s’installe implicitement avec

VS2017)

Etape3: Avoir power shell3.0 pour qu’on puisse installer les

dépendances

28



Environnement du développement. Net Core

• Sous linux

Etape1: Installation des dépendances .NET Core

Cela dépend de la version de linux voir le lien

https://www.microsoft.com/net/learn/get-started/linux/rhel

Etape2: Installation de Visual studio code

https://www.microsoft.com/net/learn/get-started/linux/rhel#editor

Remarque:Microsoft a produit une version sql server pour linux

https://www.windows8facile.fr/installer-sql-server-linux-ubuntu/

29

https://www.microsoft.com/net/learn/get-started/linux/rhel
https://www.microsoft.com/net/learn/get-started/linux/rhel


Environnement du développement. Net Core

• Sous linux

-Installation de NPM: package manager qui facilite l’installation

des packages à partir d’internet

sudo apt-get install npm

//Mettre à jour la version de NPM

sudo npm install -g npm

//InstallerNode.js

sudo apt-get install nodejs-legacy

30



Environnement du développement. Net Core

• Sous linux

-Installation Yeoman: permet d’avoir des templates des projets

de .Net

sudo npm install -g yo

-Installer ASP.Net Generator

sudo npm install -g generator-aspnet

-Installation de Bower: package manager pour le web

sudo npm install -g bower

31



Environnement du développement. Net Core

• Sous linux

Remarques:

-Certains modèles de Yeoman utilisent des versions

"anciennes" .Net Core. Exécuter cette commande pour corriger

ces dépendances en installant toutes les versions .Net Core

Framework.

sudo apt-get install dotnet-dev*

32



Environnement du développement. Net Core

• Sous linux

-Création du projet

mkdir Projet1

cd Projet1

yo aspnet

Remarque:si vous recevez des erreurs concernant le droit

d’accès exécuter la commande suivante

sudo chmod -R 777 ~/.config/".

33



Environnement du développement. Net Core

• Sous linux

34



Environnement du développement. Net Core

• Sous linux

Pour exécuter l'application, exécuter les deux commandes

suivantes :

dotnet restore

dotnet run

35



Architecture d’une application ASP.Net Core

Ajouter nouveau projet?ASP.Net Core

36



Architecture d’une application ASP.Net Core

•Dépendances: contient toutes les librairies utilisées dans le

projet.Ces librairies vont être déclarées dans le fichier project.json.

•project.json: un fichier qui déclare les dépendances du projet. lorsque

nous ajouterons de nouvelles dépendances via NuGet, elles seront

ajoutées ici.

•Appsetting.json: fichier de configuraton de l’application :paramètres

de chaine de connection

•wwwroot: contient les fichiers statiques de

l’application:html,css,images,javascripts…

•Statup.cs:repérsente la classe du démarrage. Il dispose de deux

méthodes qui sont invoquées à chaque démarrage du projet Web

37



Architecture d’une application ASP.Net Core

•Program.cs:contient la méthode Main c’est lui qui démarre le

serveur kestrel

Remarque: En VS2017 le projet.json est remplacé par le

project.xml.Pour l’afficher click droit sur le projet?Modifier

NotreApplication.csproj.

-Il y’a la possibilité de créer un projet ASP.NET core(.Net

Framework) càd un projet qui prend les privilèges de .Net

core(structure du projet/multiplateforme) mais il prend toutes les

dépendances de .Net framework

38



Développement en ASP.Net core

-Tous ce qui est vu en ASP MVC est valable en ASP.Net

core

-Les points de différence vont se traiter dans

les prochaines diapositives.

39



Entity framewok.net core

Pour utiliser entity framework dans les projets.Net Core, on doit

l’installer dans le projet concerné via Nuget.

Install-Package Microsoft.AspNetCore.All -Version 2.0.3

Install-Package Microsoft.EntityFrameworkCore.SqlServer -Version 2.0.1

Install-Package Microsoft.EntityFrameworkCore.Tools -Version 2.0.1

Install-Package Microsoft.EntityFrameworkCore.SqlServer.Design -Version 1.1.5

Install-Package Microsoft.VisualStudio.Web.CodeGeneration.Design -Version2.0.1

40



Entity framewok.net core

•Code First:

-Etape1:Model ? ajouter une classe(dans laquelle on va définit

la structure de notre table)

41



Entity framewok.net core

•Code First:

-Etape2:Controler ? ajouter « Controleur MVC avec vues,utilisant

Entity Framework »

-Le dataContext va étre générer dans un Dossier appelé « Data »

-La chaine de connexion s’ajoute dans le fichier « appsettings.json »
42



Entity framewok.net core

•Code First:

-Etape3: génération de la base de donnée

Add-Migration Initial -Context TPMVC2018.Models.TPMVC2018Context

?La commande Add-Migration va créer dans notre projet un

dossier “Migrations”, avec du code représentant le schéma de

notre base de données.

Update-Database Initial -Context TPMVC2018.Models.TPMVC2018Context

?La commande Update-Database va utiliser le code précédent  

pour mettre à jour la base de données. 

43



Entity framewok.net core

•Code First:

Remarque: Au cas des erreurs lors de création de la BD:

-Vérifier qu’il n’y’a pas des problèmes au niveau de chaine

de connection dans appsettings.json

44



Entity framewok.net core

• DataBase First:

Etape1: Création le modèle EF basé sur notre base de données

Pour cela exécuter la commande suivante dans la console Nuget

45

Scaffold-DbContext "Data source=user-pc\sqlexpress;Initial

Catalog=tp1ADO;Integrated Security=true" 

Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models



Entity framewok.net core
• DataBase First:

Etape2:Enregistrez votre contexte avec l'injection de

dépendance

?Supprimer la configuration de contexte en ligne:

Dans ASP.NET Core, la configuration est généralement effectuée dans

Startup.cs. Pour se conformer à ce modèle, nous allons déplacer la

configuration du fournisseur de base de données vers Startup.cs.

46



Entity framewok.net core

• DataBase First:

Etape2:Enregistrez votre contexte avec l'injection de

dépendance

?Ajoutez le constructeur suivant, qui permettra à la configuration

d'être passée dans le contexte par injection de dépendance

47



Entity framewok.net core

• DataBase First:

Etape2:Enregistrez votre contexte avec l'injection de

dépendance

?Enregistrez et configurez le contexte dans Startup.cs

Pour que nos contrôleurs MVC puissent utiliser le context de

données « tp1ADOContext », nous allons l'enregistrer en tant

que service.

48



49

Inversion du contrôle



Microsoft Dependency Injection

•Installation:

Install-Package NLog.Extensions.Logging -Version 1.0.0-rtm-rc7

Install-Package Microsoft.Extensions.DependencyInjection -Version 2.0.0

50



Microsoft Dependency Injection

•Configuration des métadonnées(Définition de dépendance)

-ServiceCollection est une collection qui va être responsable

d’établir la correspondance entre l’interface et son

implémentation(service à utiliser)

-C’est comme ça qu’on ajoute la configuration dans le conteneur

51



Microsoft Dependency Injection

•Instanciation des objets:

52



Microsoft Dependency Injection

•Mode d’instanciation:

-AddSingleton:

Il crée une instance unique dans toute l'application. Il crée

l'instance pour la première fois et réutilise le même objet dans

tous les appels.

53



Microsoft Dependency Injection

•Mode d’instanciation:

-AddTransient:

Les objets auront une durée de vie transitoire,ce mode crée une

nouvelle instance à chaque fois ces objets seront demandés

54



Microsoft Dependency Injection

•Mode d’instanciation:

-AddScope:

il crée une instance pour chaque requête http mais on utilise la

même instance dans les autres appels de la même requête

Web.

55



Microsoft Dependency Injection

Exemple: On crée une application ASPMVC.Net Core

1.Ajout des services

56



Microsoft Dependency Injection

2.Configuartion des services

La configuration de Microsoft Dependency Injection en ASP

MVC se fait dans le fichier Startup.cs

57



Microsoft Dependency Injection

3.Utilisation des services :Controller

58



Microsoft Dependency Injection

3.Utilisation des services :View

59



Microsoft Dependency Injection

3.Résultat d’exécution:

-Mode singleton:

-On a le même résultat pour les deux appels

-Aussi si on fait un refresh/ou on passe à un autre

navigateur ,toujours on a le même résultat

60



Microsoft Dependency Injection

3.Résultat d’exécution:

-Mode scoped:

-On a le même résultat pour les deux appels

-Mais si on fait un refresh/ou on passe à un autre navigateur on

aura un autre résultat

61



Microsoft Dependency Injection

3.Résultat d’exécution:

-Mode Transient:

-On a une valeur pour chaque appel

62



Microsoft Dependency Injection

Remarque:

-ASP MVC.Net core intègre un support pour l’injection de

dépendances.

63



Microsoft Dependency Injection

• FormService:

-Ici on doit passer par un constructeur ,sinon s1 et s2 reste null

64



Microsoft Dependency Injection

• FromService:

C’est une annotation  utilisé pour injecter l’objet donc ici ce 

n’est pas la peine d’ajouter un constructeur.

65


, _version_=1670762176931954688, _root_=5])
org.apache.solr.common.SolrException: Exception writing document id 5 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:37.294 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=GL-intro&CdP-baraka-2019.pdf, description=gl, date_up=2020-06-27 16:44:38.0, id=7, title=gl, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/GL-intro&CdP-baraka-2019.pdf, user_name=Zidani Mohamed, text=
Kamal BARAKA
baraka.kamal@yahoo.fr

Le contenu de ce support de cours a été influencé par les lectures citées à la fin de ce support. 

Génie Logiciel  

Université Cadi Ayyad
ENSA de Safi

Département Informatique Réseaux et Télécommunications 



Définition : Logiciel 

l Ensemble de
? Programmes informatiques,
? Système d'exploitation,
? Etc.

l Logiciel = ensemble de programmes qui coopèrent 
pour réaliser un objectif bien défini.

l Programme = ensemble d'instructions exécutées 
pour accomplir une tâche bien précise.



Définition : Génie Logiciel 

l Ensemble des activités de conception
? Développement, 
? De l'exploitation
? Et de la maintenance des logiciels,

l Application de l’ingénierie au logiciel



Pourquoi c’est si important ?
Aujourd’hui, le logiciel contrôle le monde ! 

• Processus métiers (administrative etc.)

• Gouvernement

• L’industrie(Usines, chaines de fabrication)

• Transports

• Défense, finance, santé…

• Edition, médias…

• Les nouvelles technologies du web, commerce électronique…

• Et bien plus!! 

Des enjeux aussi bien économiques que politiques 



Pour c’est si important ?

Les conséquences en cas de problèmes peuvent être très 
lourdes! 

• Therac 25,'85‘87: 6 patients irradies, 2morts

• Syst. Bagages Aeroport Denver,'95:16 mois, 3.2Mds$

• Ariane 5vol 88/501,'96: 40s de vol,destr., 850M$

• Mars Climate Orbiter & Mars Polar Lander,'99: destr. 



Le talon d’Achille du GL

• Le coût
• Le temps
• La qualité? 



Quelques chiffres !
Source: The Standish Group 

• Successful means on-time, on-budget, and with all features and functions as defined in the initial scope; 

• challenged means late, over budget, and/or with less features and functions than defined in the initial scope; 

• failed means cancelled prior to completion, or delivered but never used. 



Quelques chiffres !
• Le taux de succès en constante hausse, mais le 

taux d’ échec reste aléatoire 



Evolution du logiciel

l La livraison n'est pas une fin en soi :
? Après sa livraison un logiciel peut être modifié.
? Chaque modification transforme un peu plus le 

logiciel
? Le logiciel évolue en fonction de l'évolution du 

matériel.
l Augmentation du nombre de lignes de code est dû à 

la complexité croissante des systèmes conçus.



Exemple d'évolution d'un logiciel

l Windows



Evolution d'un logiciel

l Noyau Linux

Jours de développement

N
om

br
e 

de
 li

gn
es



Coût de développement



Bogue (Errata)

l Il y a entre 0,5 et 3 erreurs de programmation 
toutes les 1000 lignes de code [Bell Labs].

l Cela entraîne les conséquences suivantes :
? 2 projets sur 3 sont livrés en retard ou ont 

dépassé le coût initialement estimé.
? 2 projets sur 3 révèlent d'importants défauts

ou montrent une instabilité durant leur 
première année d'exploitation.

? Coût estimé des bogues :
l 60 milliards de $ par an (aux états unis)



Coût de maintenance

l Il peut atteindre 70% du coût total



Facteurs d'échec d'un projet

l Fonctionnalités non prévues (non souhaitées)
l Développement imprécis
l Problèmes d'intégration 
l Réécriture du code source
l Absence de documentation motivant les 

décisions prises lors de la conception
l Etc.



Risque d'abandon

l 30% des projets informatiques sont annulés avant 
la mise en production.

l 90% des projets informatiques sortent en retard.
l Le risque d'abandon ou de retard important 

augmente de plus en plus rapidement à mesure 
que la taille globale du projet croît.

l Coût estimé des abandons :
? des milliards de dollars par an (aux états unis)



Problème de qualité du logiciel

l 50% des projets informatiques ne répondent 
pas aux besoins des acheteurs :
? Le logiciel ne correspond pas aux besoins
? Consomme plus de moyens informatiques 

que prévu
? Tombe en panne,
? Etc.



Dépassement de budget prévu

l Modifications effectuées après la livraison d'un 
logiciel coûtent cher, et sont à l'origine de nouveaux 
défauts.

l Les adaptations sont bien souvent une nécessité du 
fait de l'évolution des produits et des attentes des 
utilisateurs.

l 50% des projets informatiques dépassent le budget 
prévu :
? Maintenance corrective : 20%
? Maintenance adaptative : 25%
? Maintenance évolutive ou perfective : 55%



19

Sonde Mariner 1 (1962)



20

Sonde Mariner 1 (1962)

l Coût: 18,5 millions de dollars.
l catastrophe: Mariner 1 est la première sonde du

programme mariner, lancée le 22 juillet 1962
pour mission de survol de vénus mais cette
dernière a détourné un peu sur le trajectoire de
sa destination pour causer sa destruction après
293 secondes de son décollage.

l Cause: Le programmeur a mal transcrit une
formule manuscrite en informatique.



21

Sonde Mariner 1 (1962)
l Détails: La défaillance provient d'une erreur de

transcription manuelle dans la spécification du
programme de guidage. Le rédacteur a oublié la
barre souscrite dans la formule .

l Le manque de cette barre a causé une mal
interprétation des valeurs (variation du temps) et
lors des corrections induites qui ont été erronés.

l Le programme de contrôle ne lisse plus les
valeurs de la vitesse et réagit brutalement à des
variations mineures

l La fusée a perdu sa trajectoire , ce qui obligea
l’officier de sécurité de commander sa
destruction après 297 secondes.



22

Destruction d'Ariane 5 (1996)
l Cause directe : Conversion entier/flottant non

autorisée.
l Impact :

? Explosion 30s après le décollage
? 1 année de retard pour le programme Ariane 5

l Origine :
? Reprise du code spécifié pour Ariane 4
? Absence de tests de validation pré-vol
? Désactivation de la gestion des exceptions
? Conservation de code inutile



23

Perte de Mars Climate Orbiter (1999)

l Cause directe : Confusion entre pieds et
mètres.

l Impact :
? Destruction de la sonde à l’entrée de

l’atmosphère martienne
? Coût : 120 millions de $



24

Bogue de l'an (2000)
l Cause directe : Codage de
la date sur 2 caractères.

l Impact :
? Très nombreuses mesures préventives et

correctives
? Coût : estimé à 500 milliards de F

l Origine :
? Arbitrage économie mémoire / durée de vie
? Mauvaise perception de la durée de vie des

logiciels



25

Echec du missile Patriot (1991)



26

Echec du missile Patriot (1991)

l Coût: 28 soldats morts, 100 blessés.
l Catastrophe: Au cour de la première guerre de

golfe , un système Américain des missiles Patriot
en Arabie Saoudite n’a pas réussi à suivre et à
intercepter un missile Scud Irakien entrant.

l Le missile a détruit une caserne de l’arme
Américaine.

l Cause: un calcul inexact du temps depuis le
démarrage en raison d'erreurs arithmétique des
ordinateurs.



27

Echec du missile Patriot (1991)

l Détails: la durée a calculer c’est le temps en
deuxièmes seconde mesuré par l’horloge interne
du système multiplier par 1/10 pour produire le
temps en seconde.

l L'erreur est que le registre utilisé dans le Patriot
est de taille 24 bit ce qui produit au lieu de stoker
la valeur binaire:
0,0001100110011001100110011001100
le système a stocké la valeur:
0,00011001100110011001100



28

Echec du missile Patriot (1991)

l Ce qui implique une différence de
0,0000000000000000000000011001100 et si
on la transforme en seconde après un simple
calcul (0,000000095 × 100 × 60 × 60 × 10 =
0,34) on trouve qu’il ya un décalage horaire de
0,34 seconde.

l Alors cela a été assez loin pour que le Patriot
puisse suivre et intercepter le Scud.



29

Division du Pentium (1994)



30

Division du Pentium (1994)

l Coût: 475 millions de dollars, la crédibilité des
entreprises.

l Catastrophe: Le bug de la division du Pentium
est un bug informatique ayant affecté le
microprocesseur Pentium du fabricant Intel peu
après son lancement en 1994 : une erreur était
introduite lors de certaines opérations de
division.

l Cause: l'initialisation incomplète d'une table de
valeurs servant à la division, plus rapide.



31

Division du Pentium (1994)

l Détails: en octobre 1994 le professeur Thomas
Nicely dévoile un disfonctionnement de l’unité de
calcul en virgule flottant du pentium. Il s’est
rendu compte que certaines opérations de
division renvoient toujours des valeurs erronée
sur ce processeur. Ces erreurs ont été
rapidement confirmé par d’autres personnes.

l Ce bug est appelé « bug FDIV du Pentium » où
FDIV est l'instruction de division en virgule
flottante des microprocesseurs x86.



32

Division du Pentium (1994)

l L'erreur provenait de l'initialisation incomplète
(dans le silicium) d'une table de valeurs servant
à un nouvel algorithme de division, plus rapide.

l La présence de ce problème convient dans
l'exemple suivant :

4 195 835,0 / 3 145 727,0 = 1,333 820 449 136
241 002 (valeur correcte),

4 195 835,0 / 3 145 727,0 = 1,333 739 068 902
037 589 (valeur retournée par le processeur).



33

Traitement du cancer (2000)

l Coût: 8 morts, 20 blessés graves
l Catastrophe: Le logiciel de radiothérapie par us

système internationale multi data a mal calculé
les dosages approprié et en exposant les
patients a des niveaux nocives et parfois
mortelles de rayonnement.

l Les médecins qui sont responsables de vérifier
les calculs sont condamnés .



34

Traitement du cancer (2000)

l Cause :
l Les doses de rayonnement calculées par le logiciel

sont basé sur l’ordre dans lequel les données ont été
saisie

l parfois il y a saisie des doubles doses ce qui conduit
a une erreur dans le calcul suivant.



Les difficultés liées au GL 
La complexité? intrinsèque d'un projet 

• L’ ingénierie du logiciel est un métier récent en 
comparaison avec d’autres métiers 

• le fameux parallèle avec le bâtiment 

La nature du produit informatique 

• De l'information ! copiable, modifiable, 
malléable, bref « soft » 



Les difficultés liées au GL 
Les difficultés liées à la nature du logiciel 

• Un logiciel ne s'use pas, sa fiabilité? ne dépend 
que de sa conception 

• Mais, pour rester utilisé un logiciel doit évoluer 
• Pas de direction clairement exprimée, 
• Changements fréquents, 
• Contradictions des besoins,... 



Les difficultés liées au GL 
Difficultés liées aux personnes 

• ne savent pas toujours ce qu'elles veulent, ou ne 
savent pas bien l'exprimer 

• communication difficile entre personnes de 
métiers différents ( jargons )

• l'informaticien est souvent perçu comme 
introverti, peu solidaire du groupe (...c?a 
change...) 

• beaucoup d ’autodidactes qui croient savoir... 



Les difficultés liées au GL 
Les difficultés technologiques 

• courte durée de vie du matériel,

• beaucoup de méthodes, de langages

• évolution des outils de développement,... 



L’ échec d’un projet informatique 
Cinq raisons majeures : 

• Engagements irréalistes 
• Gestion et conduite de projet inadéquates 
• Manque de contrôle

• pas de planification de la part des développeurs 
• connaissances insuffisantes en gestion de projet 

• Technologies inappropriées (méthodes, outils, 
langages) 

• Validation et vérification insuffisantes 



Conduite de projet 



l Participants ( Rôles )

Production de logiciel  

l Application ( Store ), site Web, Jeux, 
Microcontrôleur, etc.

l Production => Code Source, Exécutable

l Utilisateur

l Développeur

l Propriétaire



Projet logiciel : Commencement 

1- L’utilisateur a besoin d’un logiciel 

2- Le propriétaire demande au 
développeur de réaliser le logiciel

3- Le développeur réalise le logiciel 
qui correspond au besoin de l’utilisateur 



Projet logiciel : Exploitation  
4- Le propriétaire déploie le logiciel

afin que celui-ci soit utilisé  
5- L’ utilisateur utilise le logiciel, il

rencontre des anomalies ou aimerait
voir des évolutions  

6- Le propriétaire demande au développeur
de corriger les anomalies ou de développer 
les évolutions 

7- Le développeur corrige les anomalies 
et réalise les évolutions



Projet logiciel : Fin 

8- L’utilisateur n’utilise plus le logiciel

9- Ou le propriétaire arrête le logiciel  

10- Le développeur ne sert plus à rien.



Cycle de vie – Cycle de développement



Plan de développement de projet...

Euphorie

Inquiétude

Panique

Promotion de ceux
qui n'ont pas trempé

dans l'affaire

Punition
des innocents

1

2
3 4

5
6

Etudes Développement

Essais

Production

Mise en œuvre

Recherche
des coupables

Cahier des Charges Fonctionnel



Cycle de vie

Veut 
répondre au 
besoin.

Cycle de dev

Demande au 
développeur

Développe le 
logiciel

Livre au 
propriétaire Utilise Ano et Evo

Prod / MaintenancePréProd

Teste 
Déploie



Différents types de projet

Projet de mise en production

- Objectif : développer et assurer la mise en production
- Démarre dès l’expression du besoin
- Termine lorsque l’utilisateur le logiciel

Projet de développement 

- Objectif : livrer la première version utilisable par l’utilisateur
- Démarre à partir de l'expression du besoin par le propriétaire

- Termine lors de la livraison par le développeur
TMA ( Pas vraiment un projet )

- Objectif : assurer la maintenance d’une application mise en production
- Démarre lorsque l’utilisateur peut utiliser le logiciel 

- Termine lorsque le logiciel n’évolue plus



Projet de développement (TMA – EVO)
L’utilisateur à un besoin ( même s’il ne le sait pas ) 

Le propriétaire exprime clairement ce besoin 
Cahier des charges

Le développeur spécifie ce qu’il est capable de produire
Réponse au cahier des charges (Spéc )

Le propriétaire accepte la proposition du développeur
Cycle de Dév

Une fois terminé, le développeur livre le logiciel au propriétaire
Livraison 



Participants au projet de développement
MAO ( Maitrise d’Ouvrage) : celui qui possède 

le résultat du projet, et qui paye
=> Le propriétaire

MOE ( Maitrise d’Œuvre ) : celui qui réalise 
le logiciel
=>  Le développeur
L’utilisateur n’apparaît pas réellement dans 
le projet ( représenté par la MOA )
Client, un terme trop ambiguë 

- Le client du propriétaire est l’utilisateur
- Le client du développeur est le propriétaire



Projet de développement : Exemple
Les enseignants chercheurs ont besoin d’un 
site web pour organiser une manifestation 
scientifique
=> Utilisateurs : Enseignants

L’ ENSAS veut répondre à ce besoin en 
demandant à plusieurs sociétés de 
développer ce site web
=> Propriétaire : ENSAS

La société SARL-X réalise le site web qui est 
utilisé par les enseignants chercheurs
=> Développeur : SARL-X



Les 3 grandes phases du cycle de Dév

Analyse 
La MOE spécifie ce qu’elle est capable de 
développer et chiffre le cout 

Développement
La MOE développe les composants définis 
dans la conception et livre le résultat

Conception

La MOE organise son développement, c’est à dire 
précise les gros modules à développer et précise les 
taches



L’ANALYSE

Qui : la MOE

Entrée : Le cahier des charges

Objectif : spécifier ce que la MOE est capable 
de fournir

Sortie : Une spécification de ce qui sera 
développer



LE CHIFRAGE

Le chiffrage se fait en jours-homme 
dans les projets de développement
-1jh = 1 homme qui travail pendant un jour

-20 jh = 1 mh ( mois-homme)

-12 mh = 1 ah ( an-homme)

Idéalement, l’analyse devrait fournir 
les éléments permettant de chiffrer 
le cout
Pour autant, trop souvent le 
chiffrage est réalisé avant l’analyse
Chiffrer un projet nécessite de 
l’expérience

Quelques éléments :
-Développer un écran d’un site web 
par exemple

- 1,5 à 3 jours-homme pour les écran 
simple

- Nombre de ligne de code 
développé en moyenne par 
développeur = 150

- Une classe d’une complexité 
moyenne nécessite donc au moins 
un jour

Taille des projets :
-Petit : max 2 mh
-Moyen : entre 2 mh et 1,5 ah
-Gros : plus de 1,5 ah



LA CONCEPTION

Qui : la MOE

Entrée : La spécification réalisée lors de 
l’analyse

Objectif : décomposer le logiciel en gros 
modules, préciser les taches permettant la 
construction de ces modules

Sortie : Une spécification des composants, de 
leur manière de communiquer, une liste des 
taches.



L’ARCHITECTURE

Le choix d’une architecture facilite 
la mise en place d’une conception
-3 tiers, En couche, Par Service, par 
entrepôt de données, etc.

La définition des modules et leurs 
interactions
-Interface, Protocole, etc.

La projection d’une architecture sur 
un socle logiciel permet 
l’identification des taches

L’identification des taches permet 
de mesurer le travail à réaliser
-RAF : Reste A Faire

Cela permet aussi d’organiser le 
travail dans une équipe
Et de maitriser les délais et les 
risques



LE MODELE 3-TIERS

Trois modules en couche
-Base de données

-Traitement

-Présentation

Focus mis sur la protection des 
données et pas sur les 
performances
Tâches
-Module : BD, Traitement, 
Présentation
-Interface : 

- Traitement <-> BD,
- Présentation <-> Traitement

Tr
ai

te
m

en
t 

Ba
se

 d
e 

do
nn

ée
s

Pr
és

en
ta

tio
n



LA CONCEPTION

Qui : la MOE

Entrée : La définition des modules et la liste 
des tâches
Objectif : coder les modules et livrer le logiciel

Sortie : Le logiciel



L’environnement de développement

Le logiciel est composé d’artefacts 
logiciels (Fichiers)
Il faut savoir qui peut les éditer, les 
modifier, les tester, etc.
L’environnement de développement 
défini ce cadre

Edition collaborative

-Les artefacts sont-ils partagés en 
écriture ?
-Quelles sont les versions ? 
Comment les retrouver ?
Répartition des tâches
-L’affectation des tâches est-elle 
faite par une personne ou par 
l‘équipe?

-Comment suivre l’avancement?



Le CYCLE EN CASCADE

Développement

Conception 

Analyse 



Les tests : CYCLE EN V

Développement

Conception 

Analyse 

Tester le logiciel pendant tout le 
cycle de développement

Selon les phases :
-Analyse : test de validation 

-Conception : test d’intégration
-Dev : test unitaire
Rédaction des tests != faire passer 
les tests



L’ITETRATION : CYCLE EN SPIRALE

Les phases d’Analyse, Conception 
et Codage doivent être réalisées les 
unes après les autres

Pour autant, on peut aussi faire des 
itérations ne prenant en compte 
qu’une partie du cahier des charge

Les nouvelles itérations 
nécessiteront des aménagements 
sur ce qui a déjà été réalisé



L’AGILITE 

Le cahier des charges contient les 
besoins exprimés par le propriétaire 
pour l’utilisateur

Si ces besoins changent au cours du 
projet, l’’impact peut être important 
pour le logiciel

L’agilité considère comme hypothèse 
de base que les besoins peuvent 
changer et qu'il faudra y faire face !!



SYNTHESE 

Cycle de vie

-Cycle de dev,
-Pré-prod,
-Prod ( maintenance)
Propriétaire, Développeur et Utilisateur
Cycle de dev
-Analyse, conception et Dev
Itération (Cycle en spiral)
Test (Cycle en V)
Agilité 



Conduite de Projets –(Réponse au cahier des charges) 
Le cahier des charges du CNRS 
Lisez le cahier des charges du CNRS et considérez que vous e ?tes
une jeune start-up dont le business consiste à réaliser des projets 
de développement. 
Quelles sont les parties du cahier des charges que votre start-up 
est capable de réaliser ? 
Quelles sont les parties du cahier des charges que votre start-up 
n’est pas capable (ou ne souhaite pas) réaliser ? 
Proposez, à l’aire d’un outil de dessin (PowerPoint, Paint, utilisez 
ce que vous voulez), une maquette de ce que vous comptez 
réaliser. 
Chiffrez en jh, le cou ?t de réalisation de cette maquette (on parlera 
de cou ?t brut de réalisation) Proposez un prix de vente de votre 
réalisation ainsi qu’une date de livraison.
A faire: La maquette, le chiffrage brut et le prix de vente. 


, _version_=1670762177271693312, _root_=7])
org.apache.solr.common.SolrException: Exception writing document id 7 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:37.396 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Verdana are not implemented in PDFBox and will be ignored
2020-06-28 16:49:37.432 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Verdana,Italic are not implemented in PDFBox and will be ignored
2020-06-28 16:49:37.506 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=informatique répartie_horloges.pdf, description=info repartie horloge, date_up=2020-06-27 16:45:07.0, id=8, title=info repartie, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/informatique répartie_horloges.pdf, user_name=Zidani Mohamed, text=
Gestion du temps & état 
global

dans un système distribué



Système distribué vs Système centralisé

? Système distribué en opposition à système 
centralisé 

? Système centralisé : tout est localisé sur la 
même machine et accessible par le programme 
? Système logiciel s'exécutant sur une seule machine 
? Accédant localement aux ressources nécessaires 

(données, code, périphériques, mémoire ...) 

? Système distribué : une définition parmi d'autres 
? Ensemble d'ordinateurs indépendants connectés en 

réseau et communiquant via ce réseau 
? Cet ensemble apparaît du point de vue de l'utilisateur 

comme une unique entité



Systèmes distribués

? Vision matérielle d'un système distribué : architecture 
matérielle 
? Ordinateurs standards connectés en réseau 

? Vision logicielle d'un système distribué 
? Système logiciel composé de plusieurs entités s'exécutant 

indépendamment et en parallèle sur un ensemble d'ordinateurs 
connectés en réseau 

? De par leur nature, les systèmes distribués sont dans un 
cadre différent par rapport aux systèmes centralisés 
? Concurrence 

? Les éléments formant le système s'exécutent en parallèle et de manière 
autonome

? Pas d'état ou d'horloge globale commune

? Points de problèmes de fiabilité en nombre accru 
? Problème matériel d'une machine 
? Problème de communication via le réseau: 

? Potentiellement non fiable 
? Temps de communication non négligeables



Avantages des Systèmes distribués

? L'augmentation des ressources
? Par ex. si le réseau est internet, tous les 

ordinateurs connectés constituent les 
ressources potentielles

? (SETI@Home issu du projet Search for 
Extraterrestrial IntelligenceI)

? Sun : « The network is the computer »: 
profiter de la gigantesque ressource de 
processeurs que sont les ordinateurs inactifs 
connectés à internet.

? La répartition des données et des 
services 



Algorithmique distribuée

? Développement d'algorithmes dédiés aux systèmes 
distribués et prenant en compte les spécificités de ces 
systèmes 

? On y retrouve notamment des adaptations de 
problèmes classiques en parallélisme 
? Exclusion mutuelle, élection (d'un maître) ... 

? Mais aussi des problèmes typiques des systèmes 
distribués 
? Horloge globale, état global, diffusion causale, consensus ... 

? S'intéresse principalement à deux grandes familles de 
problèmes 
? Synchronisation et coordination entre processus distants 
? Entente sur valeurs communes et cohérence globale dans 

un contexte non fiable (crash de processus, perte de 
messages ...)



Processus

? Processus 
? Élément logiciel effectuant une tâche, un calcul 

? Exécution d'un ensemble d'instructions 
? Une instruction correspond à un événement local au processus 
? Les instructions sont généralement considérées comme atomiques 

? Il possède une mémoire locale

? Il possède un état local 
? Ensemble de ses données et des valeurs de ses variables locales 

? Il possède un identifiant qu'il connaît 

? Pas ou peu de connaissance des autres processus du 
système et de leur état 

? Les processus d'un système s'exécutent en parallèle



Canaux

? Canal de communication 
? Canal logique de communication point à point 
? Pour communication entre 2 processus 
? Transit de messages sur un canal 

? Caractéristiques d'un canal 
? Uni ou bi-directionnel
? Fiable ou non : perd/modifie ou pas des messages 
? Ordre de réception par rapport à l'émission 

? Exemple : FIFO = les messages sont reçus dans l'ordre où ils sont 
émis 

? Synchrone ou asynchrone 
? Synchrone : l'émetteur et le récepteur se synchronisent pour 

réaliser l'émission et/ou la réception 
? Asynchrone : pas de synchronisation entre émetteur et récepteur 

? Taille des tampons de message cotés émetteur et 
récepteur 
? Limitée ou illimitée



Canaux

? Caractéristiques d'un canal 
? Modèle généralement utilisé 

? Fiable, FIFO, tampon de taille illimitée, asynchrone (en 
émission et réception) et bidirectionnel 

? Exemple : modèle des sockets TCP 

? Fiable 

? FIFO 

? Bidirectionnel 

? Synchrone pour la réception 
? On reçoit quand l'émetteur émet 

? Asynchrone en émission 
? Emetteur n'est pas bloqué quand il émet quoique fasse le 

récepteur



État global et horloge

? Pour chaque processus du système
? État local : valeur des variables du processus à un 

instant t

? État global du système
? Valeur de toutes les variables de tous les processus du 

système à un instant t
? Union à l'instant t des états locaux de tous les processus

? Problème
? Un état est lié à un instant t mais
? Chaque processus à une horloge physique locale
? Pas d'horloge globale dans un système distribué

? La définition d'un état global est possible 
seulement si on est capable de définir un temps 
global



Temps

? Définir un temps global cohérent et 
«identique» (ou presque) pour tous les 
processus
? Soit synchroniser au mieux les horloges physiques 

locales avec une horloge de référence ou entre elles

? Soit créer un temps logique

? Synchronisation des horloges physiques locales
? Le but est d'éviter qu'une horloge locale dérive trop 

par rapport à un référentiel de temps

? Deux modes de synchronisation 
? Synchronisation interne

? Synchronisation externe



Synchronisation horloges physiques

? Synchronisation interne
? Un groupe d'horloges ont entre-elles une dérive 

bornée

? Si D est la borne max de la dérive, Ci l'horloge 
physique du processus i, t un instant réel, et Ci(t) la 
valeur de l'horloge Ci pour cet instant t, alors

? ? i,j,t : | Ci(t) – Cj(t) | < D

? A tout instant, la dérive entre 2 horloges quelconques 
du groupe ne dépasse jamais la borne D
? Une mesure locale du temps sur un site donnera un temps 

identique à une mesure d'un autre site avec une différence 
d'au plus D



Synchronisation horloges physiques

? Synchronisation externe
? Une source externe fournit un temps de référence

? Les horloges locales se re-synchronisent
régulièrement à partir de cette source, en prenant 
en compte
? Les temps de propagation des messages entre le 

processus courant et celui gérant le temps de référence
? Le temps de traitement de la requête (récupérer la 

date de référence) du processus gérant le temps de 
référence, s'il est connu

? Même contrainte que pour synchronisation interne : 
dérive bornée
? Mais par rapport à une source de référence : S

? A l'instant t, S(t) est le temps de référence donné par la 
source externe

? ?i,t : | S(t) – Ci(t) | < D



Méthodes de Synchronisation

? Synchronisation interne pour un système distribué 
synchrone
? Un processus envoie régulièrement la valeur t de son 

horloge aux autres processus pour que chacun se recale 
sur l'horloge des autres

? En théorie : processus met son horloge à la valeur
t + Ttrans

? Ttrans = temps de transmission du message mais est non 
fixe

? Ttrans est borné : borne max mais aussi borne min :
min < Ttrans < max

? En pratique, processus met son horloge à la valeur de
t + x

? Où x est une estimation du temps de propagation
? Exemple : on prend la moyenne des bornes, x = (min + max) / 2
? Erreur de recalage est alors au plus de (min – max ) / 2

? Plus difficile à mettre en œuvre dans un système 
asynchrone
? Car temps de transmission sont non bornés



Méthodes de Synchronisation

? Synchronisation externe pour un système 
asynchrone
? Temps de propagation des messages est non 
borné

? Mais temps d'aller-retour entre 2 processus est 
mesurable

? Un processus envoie une requête au processus 
gérant le temps de référence qui lui répond en lui 
envoyant sa valeur d'horloge ts
? Mesure du temps d'aller-retour : Tround

? A partir de là, on peut mettre à jour son horloge
? En prenant la moitié de Tround par exemple

? t = ts + Tround/2



Méthodes de Synchronisation

? Synchronisation interne pour un système 
asynchrone [Gusella et Zatti]
? Un des processus est élu maître et c'est lui qui gère 

le temps

? Les autres processus lui envoient leur valeur 
d'horloge
? En utilisant également les temps d'aller-retour

? A partir de toutes les horloges, le maître détermine 
le temps moyen global
? Il envoie à chaque processus la variation de leur temps 

local par rapport au temps global

? Permet d'éliminer les horloges défaillantes car le maître 
a une vision globale

? Si le maître se plante, un autre est élu



Temps logique

? Temps logique
? Temps qui n'est pas lié à un temps physique

? Le but est de pouvoir préciser 
l'ordonnancement de l'exécution des processus 
et de leur communication

? En fonction des événements locaux des 
processus, des messages envoyés et reçus, on 
créé un ordonnancement logique

? Création d'horloge logique
? Deux approches principales

? Horloge de Lamport : méthode par estampille

? Horloge de Mattern : horloge vectorielle



Temps logique : chronogramme

? Chronogramme
? Décrit l'ordonnancement temporel des 
événements des processus et des échanges de 
messages

? Chaque processus est représenté par une ligne

? Trois types d'événements signalés sur une ligne

? Émission d'un message à destination d'un autre 
processus

? Réception d'un message venant d'un autre 
processus

? Événement interne dans l'évolution du processus



Temps logique : chronogramme

? Trois processus tous reliés entre-eux par des 
canaux

? Temps de propagation des messages 
quelconques et possibilité de perte de message



Temps logique : chronogramme

? Exemples d'événements
? Processus P1

? e11 : événement d'émission du message m1 à 
destination du processus P2

? e13 : événement interne au processus

? e14 : réception du message m4 venant du processus P3

? Processus P2 : message m5 envoyé avant m6 mais 
m6 reçu avant m5

? Processus P3 : le message m7 est perdu par le 
canal de communication

? Règle de numérotation d'un événement
? exy avec x le numéro du processus et y le numéro 

de l'événement pour le processus, dans l'ordre 
croissant



Temps logique : dépendance causale

? Relation de dépendance causale
? Il y a une dépendance causale entre 2 
événements si un événement doit avoir lieu 
avant l'autre

? Notation : e ? e‘
? e doit se dérouler avant e‘

? Si e ? e', alors une des trois conditions 
suivantes doit être vérifiée pour e et e‘
? Si e et e' sont des événements d'un même 
processus, e précède localement e‘

? Si e est l'émission d'un message, e' est la 
réception de ce message

? Il existe un événement f tel que e ? f et f ? e'



Temps logique : dépendance causale

? Sur exemple précédent
? Quelques dépendances causales autour de e12
? Localement : e11 ? e12, e12 ? e13
? Sur message : e12 ? e34
? Par transitivité : e12 ? e35 (car e12 ? e34 et e34 ? e35)

? Dépendance causale entre e12 et e32 ?

? A priori non : absence de dépendance causale

? Des événements non liés causalement se déroulent en 
parallèle

? Relation de parallélisme : ||
? e || e' ? ¬ ((e ? e') v (e‘ ? e))

? Parallélisme logique : ne signifie pas que les 2 
événements se déroulent simultanément mais qu'il 
peuvent se dérouler dans n'importe quel ordre



Temps logique : dépendance causale

? Ordonnancement des événements
? Les dépendances causales définissent des ordres 
partiels pour des ensembles d'événements

? But d'une horloge logique
? Créer un ordre total global sur tous les 
événements de tous les processus

? Horloge logique
? Fonction H(e) : associe une date à chaque 
événement

? Respect des dépendances causales
? e ? e' ? H(e) < H(e')

? H(e) < H(e') ? ¬ (e‘ ? e)
? C'est-à-dire : soit e ? e', soit e || e'



Horloge de Lamport

? Lamport
? Horloge de Lamport : horloge logique respectant 
les dépendances causales

? Une date (estampille) est associée à chaque 
évenement : couple (s, nb)

? s : numéro du processus

? nb : numéro d'événement

? Invariant sur les dates
? Pour deux dates d'un même processus, les 
numéros de ces dates sont différentes

? Il n'y pas deux événements locaux ayant le même 
numéro



Horloge de Lamport

? Création du temps logique
? Localement, chaque processus Pi possède une horloge 

locale logique Hi, initialisée à 0
? Sert à dater les événements

? Pour chaque événement local de Pi:
? Hi = Hi + 1 : on incrémente l'horloge locale
? L'événement est daté localement par Hi

? Émission d'un message par Pi:
? On incrémente Hi de 1 puis on envoie le message avec (i, 

Hi) comme estampille

? Réception d'un message m avec estampille (s, nb)
? Hi = max(Hi, nb) +1 et marque l'événement de réception 

avec Hi
? Hi est éventuellement recalée sur l'horloge de l'autre 

processus avant d'être incrémentée



Horloge de Lamport

? Exemple : chronogramme avec ajouts des estampilles

? Date de e23 : 6 car le message m5 reçu avait une valeur 
de 5 et l'horloge locale est seulement à 3

? Date de e34 : 4 car on incrémente l'horloge locale vu que 
sa valeur est supérieure à celle du message m3

? Pour e11, e12, e13 ... : incrémentation de +1 de l'horloge 
locale



Horloge de Lamport

? Ordonnancement global
? Valeur de Hi permet de savoir si un événement a lieu 

avant un autre ou pas, qu'il s'agisse d'événements

? Du même processus

? De processus différents

? Ordre total, noté e << e' : e s'est déroulé avant e'

? Soit e événement de Pi et e' événement de Pj :                   
e << e' ? (Hi(e) < Hj(e')) v (Hi(e) = Hj(e') avec i < j)
? Localement (si i = j), Hi donne l'ordre des événements du 

processus

? Les 2 horloges de 2 processus différents permettent de 
déterminer l'ordonnancement des événements des 2 processus

? Si égalité de la valeur de l'horloge, le numéro du processus 
est utilisé pour les ordonner



Horloge de Lamport

? Limites de l'horloge de Lamport
? L'ordonnancement global obtenu est arbitraire et n'est 

pas forcément celui obtenu en pratique

? H(e32) = 2 et H(e22) = 3 pourtant e22 peut être exécuté en 
pratique avant e32

? Ordre total global obtenu pour l'exemple

? e11 << e31 << e12<< e21 << e32 << e13 << e22 << e33 << 
e14 << e34 << e35 << e23 << e24 << e15

? D'autres sont valides ...

? Horloge de Lamport respecte les dépendances 
causales, mais, avec e et e' tel que H(e) < H(e'), on ne 
peut rien dire sur la dépendance entre e et e‘

? Dépendance causale directe ou transitive entre e et e' ?

? Exemple : H(e32) = 2 et H(e13) = 3 mais on a pas  
e32 ? e13



Horloge de Mattern

? Horloge de Mattern & Fidge
? Horloge qui assure la réciproque de la dépendance 
causale
? H(e) < H(e') ? e ? e'

? Permet également de savoir si 2 événements sont  
parallèles (non dépendants causalement)

? Ne définit par contre pas un ordre total global

? Principe
? Utilisation d'estampilles sur les messages
? Vecteur V de taille égale au nombre de processus

? Localement, chaque processus Pi a un vecteur Vi
? Pour chaque processus Pi, chaque case Vi[ j ] du 
vecteur contiendra des valeurs de l'horloge du 
processus Pj



Horloge de Mattern

? Fonctionnement de l'horloge
? Initialisation : pour chaque processus Pi, Vi =(0, 
... , 0)

? Pour un processus Pi, à chacun de ses 
événements (local, émission, réception) :
? Vi [ i ] = Vi [ i ] + 1

? Incrémentation du compteur local d'événement

? Si émission d'un message, alors Vi est envoyé avec le 
message

? Pour un processus Pi, à la réception d'un message 
m contenant un vecteur Vm, on met à jour les 
cases j ? i de son vecteur local Vi
? ?j : Vi [ j ] = max ( Vm [ j ], Vi [ j ])



Horloge de Mattern

? Exemple : chronogramme d'application horloge 
de mattern

? Même exemple que pour horloge de Lamport



Horloge de Mattern

? Relation d'ordre partiel sur les dates
? V ? V' défini par ?i : V[ i ] ? V'[ i ]
? V < V' défini par V ? V' et ?j tel que 

V [ j ] < V' [ j ]
? V || V' défini par ?( V < V' ) ? ?( V' < V )

? Dépendance et indépendance causales
? Horloge de Mattern assure les propriétés 
suivantes, avec e et e' deux événements et V(e) 
et V(e') leurs datations
? V(e) < V(e') ? e ? e‘ 

? Si deux dates sont ordonnées, on a forcément 
dépendance causale entre les événements datés

? V(e) || V(e') ? e || e‘  
? Si il n'y a aucun ordre entre les 2 dates, les 2 

événements sont indépendants causalement



Horloge de Mattern

? Retour sur l'exemple
? V(e13) = (3,0,0), V(e14) = (4,0,3), V(e15) = (5,4,5)
? V(e13) < V(e14) donc e13 ? e14
? V(e14) < V(e15) donc e14 ? e15

? V(e35) = (2,0,5) et V(e23) = (2,3,5)
? V(e35) < v(e23) donc e35 ? e23

? L'horloge de Mattern respecte les dépendances 
causales des événements
? Horloge de Lamport respecte cela également

? V(e32) = (0,0,2) et V(e13) = (3, 0, 0)
? On a ni V(e32) < V(e13) ni V(e13) < V(e32) donc e32 || e13
? L'horloge de Mattern respecte les indépendances 

causales
? L'horloge de Lamport impose un ordre arbitraire entre les 

événéments indépendants causalement



Horloge de Mattern

? Limite de l'horloge de Mattern
? Ne permet pas de définir un ordre global total

? En cas de nombreux processus, la taille du 
vecteur peut-être importante et donc des 
données à transmettre relativement importante



État Global

? État global
? État du système à un instant donné
? Buts de la recherche d'états globaux
? Trouver des états cohérents à partir desquels on 
peut reprendre un calcul distribué en cas de 
plantage du système

? Faciliter le debugging et la mise au point 
d'applications distribuées

? Défini à partir de coupures

? Coupure
? Photographie à un instant donné de l'état du 
système

? Définit les événements appartenant au passé et 
au futur par rapport à l'instant de la coupure



Coupure

? Définition coupure
? Calcul distribué = ensemble E d'événements

? Coupure C est un sous-ensemble fini de E tel que
? Soit a et b deux événements du même processus :              

a ? C et b ? a ? b ? C

? Si un événement d'un processus appartient à la 
coupure, alors tous les événements locaux le précédant 
y appartiennent également

? Etat associé à une coupure
? Si le système est composé de N processus, l'état 

associé à une coupure est défini au niveau d'un 
ensemble de N événements (e1, e2, ... ei, ... eN), 
avec ei événement du processus Pi tel que
? ?i :?e ? C et e événement du processus Pi ? e ? ei

? L'état est défini à la frontière de la coupure : 
l'événement le plus récent pour chaque processus



Coupure

? Exemple de coupure
(même chronogramme que pour exemples horloges 

Lamport et Mattern)

? Coupure = ensemble { e11, e12, e13, e21, e22, e23, e31, 
e32, e33, e34 }

? État défini par la coupure = (e13, e23, e34)



Coupure / état cohérent

? Coupure cohérente
? Coupure qui respecte les dépendances causales 
des événements du système

? Et pas seulement les dépendances causales locales 
à chaque processus

? Soit a et b deux événements du système :             
a ? C et b ? a ? b ? C

? Coupure cohérente : aucun message ne vient du 
futur

? État cohérent
? État associé à une coupure cohérente

? Permet par exemple une reprise sur faute



Coupure cohérente

? Exemple (même chronogramme que précédent)

? Coupure C1 : cohérente
? Coupure C2 : non cohérente car e35 ? e23 mais e35 ? C2

? La réception de m5 est dans la coupure mais pas son émission
? m5 vient du futur par rapport à la coupure



Datation Coupure

? Horloge de Mattern permet de dater la coupure
? Soit N processus, C la coupure, ei l'événement le plus 

récent pour le processus Pi, V(ei) la datation de ei et V(C) 
la datation de la coupure
? V(C) = max ( V(e1), ... , V(eN) ) :
? ?i : V(C)[ i ] = max ( V(e1)[ i ] , ... , V(eN)[ i ] )
? Pour chaque valeur du vecteur, on prend le maximum des 

valeurs de tous les vecteurs des N événements pour le même 
indice

? Permet également de déterminer si la coupure est 
cohérente
? Cohérent si V(C) = ( V(e1)[1], ... , V(ei)[i], ... , V(eN)[N] )
? Pour un processus Pi, si l'événement ei est le plus récent 

c'est lui qui a la date la plus récente pour C : sinon un 
événement ej d'un processus Pj
(i ? j) s'est déroulé après un événement ei' de Pi avec ei' 
plus récent que ei
? ei ? ei' et ei’ ? ej avec ei ? C, ej ? C et ei' ? C



Datation Coupure

? Datation des coupures de l'exemple
? Coupure C1 : état = (e13, e22, e33)

? V(e13) = (3,0,0), V(e22) = (1,2,1), V(e33) = (0,0,3)

? V(C) = (max(3,1,0), max(0,2,0), max(0,1,3)) = (3,2,3)

? Coupure cohérente car V(C)[1] = V(e13)[1], V(C)[2] = 
V(e22)[2], V(C)[3] = V(e33)[3]

? Coupure C2 : état = (e13, e23, e34)

? V(e13) = (3,0,0), V(e23) = (2,3,5), V(e34) = (2,0,4)

? V(C) = (max(3,2,2), max(0,3,0), max (0,5,4))=(3,3,5)

? Non cohérent car V(C)[3] ? V(e34)[3]
? D'après la date de e23, e23 doit se dérouler après 5 événements 

de P3 or e34 n'est que le quatrième événement de P3

? Un événement de P3 dont e23 dépend causalement n'est donc 
pas dans la coupure (il s'agit de e35 se déroulant dans le futur)



Détermination état cohérent

? Algorithme de Chandy & Lamport
? Algorithme permettant aux processus distribués 
d'enregistrer un état global cohérent

? Principe général
? Un processus diffuse un événement marqueur et 
les processus enregistrent leur état

? Contraintes sur le système
? Canaux de communication uni-directionnels et 
FIFO

? Fiable : pas de plantage ou de perte de message



Détermination état cohérent

? État d'un canal
? Pour un canal FIFO fiable unidirectionnel
? Canal pour envoi de message du processus Pi 
vers Pj

? A un instant t, l'état du canal < i, j > est 
l'ensemble des messages émis par Pi et non 
encore reçus par Pj

? Pour le chronogramme de l'exemple, états des 
canaux par rapport à la coupure C1
? Événements de la frontière de la coupure : e13 pour 
P1 et e33 pour P3

? État du canal < 1, 3 > = { m3 }
? m3 a été envoyé en e12 et ne sera reçu qu'en e34

? État du canal < 3, 1 > = { m4 }
? m4 a été envoyé en e33 et ne sera reçu qu'en e14



Algorithme de Chandy & Lamport

? Fonctionnement algorithme Chandy & Lamport
? Un processus Pk est initiateur du lancement de l'algorithme
? Il enregistre son état local

? Il envoie un message marqueur à tous les processus

? Un processus Pj, à la réception du marqueur sur son canal 
< k, j >
? Enregistre son état local (données, variables ...)

? Positionne l'état de chacun de ses canaux entrants < i, j > à 
vide

? Envoie un marqueur sur tous ses canaux sortants : à tous ses 
voisins

? Ces 3 étapes sont exécutées en une séquence atomique

? Pour un processus Pj, à la réception du marqueur venant de 
Pi, sur le canal entrant < i, j >
? Enregistre l'état du canal < i, j > : tous les messages reçus sur 

< i, j > depuis la réception du premier marqueur venant de Pk



Algorithme de Chandy & Lamport

? Fonctionnement algorithme Chandy & 
Lamport (fin)
? Pour un processus Pj, l'algorithme est fini quand il 
a reçu un marqueur sur chacun de ses canaux

? L'état enregistré pour Pj est composé de

? Son état local (variable, données ...)

? Les états de tous ses canaux entrants

? Pour constituer l'état global
? On collecte l'ensemble des états enregistrés par 
les processus

? Une fois que l'on sait que tous les processus l'ont 
enregistrés



Algorithme de Chandy & Lamport

? Principe du double marqueur pour savoir quand 
tout le monde a enregistré son état local
? Le premier marqueur vient du processus initiateur

? Le processus Pi « s'arrête » alors (ou passe dans une 
autre phase de son calcul)

? Il précise à tous ses voisins qu'il s'est arrêté en leur 
envoyant un marqueur

? Il se met en attente de messages l'informant que ses 
processus voisins se sont arrêtés également

? A la réception d'un marqueur sur un canal, on sait 
qu'un de ses voisins s'est arrêté

? Et que tous ses voisins se sont arrêtés quand on a reçu un 
marqueur sur tous ses canaux

? Quand tout le monde est au courant de l'arrêt de tout le 
monde : c'est fini



Algorithme de Chandy & Lamport

? Intérêt d'enregistrer les messages sur < i, j >
? Les processus ne sont pas synchronisés et les 
temps de propagation des messages sont non 
nuls

? Ne sait donc pas quand un processus s'arrête et 
si tous les messages qu'il a envoyé ont été reçus 
quand il le fait

? Donc doit enregistrer les messages venant de Pi

? Comme les canaux sont FIFO, si on reçoit le 
marqueur de Pi, on sait que tous les messages 
envoyés par Pi sont maintenus reçus, plus aucun 
n'est en transit



Algorithme de Chandy & Lamport

? Propriété de l'état global enregistré
? Correspond à un état cohérent

? L'algorithme définit une coupure
? Frontière est formée pour chaque processus par 

l'événement d'enregistrement de l'état local et de 
diffusion du marqueur aux autres processus (via une 
séquence atomique)

? Cette coupure est cohérente
? Car canaux FIFO : aucun message ne peut en doubler un 

autre
? Localement pour un processus Pj, si un marqueur est reçu sur un 

canal < i,j >, cela implique qu'aucun message émis par Pi et reçu 
par Pj avant le marqueur n'a pu être émis après que Pi émette 
son marqueur
? Pas de message venant du futur

? Pour un processus Pj, les événements d'émission des messages 
en transit (à destination d'autres processus) « coupant » la 
coupure ont forcément lieu avant son événement local définissant 
la frontière



Algorithme de Chandy & Lamport

? Exemple avec 3 processus totalement interconnectés

? eM : événement d'enregistrement d'état et diffusion 
marqueur

? eF : événement où l'état local complet est enregistré
? États canaux : <3,1> = { m3, m4 }, <2,3> = { m5 }, 

autres sont vides


, _version_=1670762177500282880, _root_=8])
org.apache.solr.common.SolrException: Exception writing document id 8 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:37.596 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font ABCDEE+Verdana are not implemented in PDFBox and will be ignored
2020-06-28 16:49:37.612 INFO  (Thread-15) [   ] o.a.p.p.f.PDCIDFontType2 OpenType Layout tables used in font Arial are not implemented in PDFBox and will be ignored
2020-06-28 16:49:37.760 WARN  (Thread-15) [   ] o.a.s.h.d.SolrWriter Error creating document : SolrInputDocument(fields: [name=informatique répartie_exclusion_mutuelle.pdf, description=informatique repartie exclusion mutuelle, date_up=2020-06-27 16:47:16.0, id=9, title=exclusion mutuelle, type=pdf, path_file=C:/Users/moham/Desktop/Mini_Projet/MiniProjetLaravel_SOLR/storage/app/public/upload/informatique répartie_exclusion_mutuelle.pdf, user_name=Zidani Mohamed, text=
Algorithmique distribuée
Exclusion mutuelle



Exclusion mutuelle distribuée

? Exclusion mutuelle
? Contexte de plusieurs processus s'exécutant en 

parallèle
? Accès à une ressource partagée par un seul 

processus à la fois

? Exclusion mutuelle en distribué
? Accès à une ressource partagée distante par un 

seul processus à la fois
? Processus distribués
? Requêtes et gestion d'accès via des messages 

échangés entre les processus

? Nécessité de mettre en oeuvre des algorithmes 
gérant ces échanges de messages pour assurer 
l'exclusion mutuelle



Rappel exclusion mutuelle

? Exclusion mutuelle
? Une ressource partagée ou une section critique n'est 

accédée que par un processus à la fois

? Un processus est dans 3 états possibles, par rapport à 
l'accès à la ressource
? Demandeur : demande à utiliser la ressource, à entrer dans 

la section
? Dedans : dans la section critique, utilise la ressource 

partagée
? Dehors : en dehors de la section et non demandeur d'y 

entrer

? Changement d'état par un processus
? De dehors à demandeur pour demander à accéder à la 

ressource
? De dedans à dehors pour préciser qu'il libère la ressource

? Le passage de l'état demandeur à l'état dedans est géré 
par le système et/ou l'algorithme de gestion d'accès à la 
ressource



Rappel exclusion mutuelle

? Diagramme d'états de l'accès en exclusion 
mutuelle

? L'accès en exclusion mutuelle doit respecter 
deux propriétés
? Sûreté (safety) : au plus un processus est à la fois 

dans la section critique (dans l'état dedans)
? Vivacité (liveness) : tout processus demandant à 

entrer dans la section critique (à passer dans l'état 
dedans) y entre en un temps fini

Dehors
Demandeur

Dedans

Acquérir

<Gérer par le système>
Libérer



Exclusion mutuelle distribuée

? Plusieurs grandes familles de méthodes
? Contrôle par un serveur qui centralise les demandes 

d'accès à la ressource partagée

? Contrôle par jeton

? Un jeton circule entre les processus et donne l'accès à 
la ressource

? La gestion et l'affectation du jeton – et donc l'accès à 
la ressource – est faite par les processus entre eux

? Deux approches : jeton circulant en permanence ou 
affecté à la demande des processus

? Contrôle par permission

? Les processus s'autorisent mutuellement à accéder à la 
ressource



Contrôle par serveur

? Principe général
? Un serveur centralise et gère l'accès à la ressource

? Algorithme
? Un processus voulant accéder à la ressource (quand 

il passe dans l'état demandeur) envoie une requête 
au serveur

? Quand le serveur lui envoie l'autorisation, il accède 
à la ressource (passe dans l'état dedans)
? Il informe le serveur quand il relâche la ressource 

(passe dans l'état dehors)

? Le serveur reçoit les demandes d'accès et envoie 
les autorisations d'accès aux processus demandeurs
? Avec par exemple une gestion FIFO : premier 

processus demandeur, premier autorisé à accéder à la 
ressource



Contrôle par serveur

? Critiques:
? Avantages
? Très simple à mettre en œuvre
? Simple pour gérer la concurrence d'accès à la 

ressource

? Inconvénients
? Nécessite un élément particulier pour gérer l'accès
? Limitations physiques

? Suppression du serveur centralisateur
? Via par exemple une méthode à jeton : le 

processus qui a le jeton peut accéder à la ressource

? La gestion et l'affectation du jeton est faite par les 
processus entre eux
? Pas de besoin de serveur centralisateur



Méthode par jeton

? Principe général
? Un jeton unique circule entre tous les processus

? Le processus qui a le jeton est le seul qui peut 
accéder à la section critique

? Respect des propriétés
? Sûreté : grâce au jeton unique

? Vivacité : l'algorithme doit assurer que le jeton 
circule bien entre tous les processus voulant 
accéder à la ressource

? Plusieurs versions
? Anneau sur lequel circule le jeton en permanence

? Jeton affecté à la demande des processus



Méthode par jeton

? Algorithme de [Le Lann]
? Un jeton unique circule en permanence entre les 

processus via une topologie en anneau

? Quand un processus reçoit le jeton
? S'il est dans l'état demandeur : il passe dans l'état dedans et 

accède à la ressource
? S'il est dans l'état dehors, il passe le jeton à son voisin

? Quand le processus quitte l'état dedans, il passe le jeton 
à son voisin

? Respect des propriétés
? Sûreté : via le jeton unique qui autorise l'accès à la 

ressource

? Vivacité : respectée si un processus lâche le jeton (la 
ressource) en un temps fini et que tous les processus 
appartiennent à l'anneau



Méthode par jeton

? Critiques
? Inconvénients
? Nécessite des échanges de messages (pour faire circuler le 

jeton) même si aucun site ne veut accéder à la ressource

? Temps d'accès à la ressource peut être potentiellement long
? Si le processus i+1 a le jeton et que le processus i veut accéder à 

la ressource et est le seul à vouloir y accéder, il faut quand même 
attendre que le jeton fasse tout le tour de l'anneau

? Avantages
? Très simple à mettre en œuvre

? Intéressant si nombreux processus demandeurs de la 
ressource
? Jeton arrivera rapidement à un processus demandeur
? Equitable en terme de nombre d'accès et de temps d'attente
? Aucun processus n'est privilégié



Méthode par jeton

? Variante de la méthode du jeton
? Au lieu d'attendre le jeton, un processus diffuse à 

tous le fait qu'il veut obtenir le jeton
? Le processus qui a le jeton sait alors à qui il peut 

l'envoyer
? Évite les attentes et les circulations inutiles du jeton

? Algorithme de [ Ricart & Agrawala]
? Soit N processus avec un canal bi-directionnel entre 

chaque processus
? Canaux fiables mais pas forcément FIFO

? Localement, un processus Pi possède un tableau 
nbreq, de taille N
? Pour Pi, nbreq [ j ] est le nombre de requêtes d'accès 

que le processus Pj a fait et que Pi connaît (par 
principe il les connaît toutes)



Méthode par jeton

? Algorithme de [ Ricart & Agrawala ] (suite)
? Le jeton est un tableau de taille N

? jeton [ i ] est le nombre de fois où le processus Pi a 
accédé à la ressource

? La case i du jeton n'est modifiée que par Pi quand 
celui-ci accède à la ressource

? Initialisation

? Pour tous les sites Pi : ?j ? [ 1 .. N ] : nbreq [ j ] = 0

? Jeton : ?j ? [ 1 .. N ] : jeton [ j ] = 0

? Un site donné possède le jeton au départ

? Quand un site veut accéder à la ressource et n'a 
pas le jeton

? Envoie un message de requête à tous les processus



13

Algorithme de [ Ricart & Agrawala ],

P1

P2 P3

Canal bi-directionnel

nbreq [ , , ]

nbreq [ , , ]

P2 connaît que P3 a fait 5 requêtes d’accès.

P2 connaît que P1 a fait 2 requêtes d’accès.

nbreq [2,3,5]



Méthode par jeton

? Algorithme de [ Ricart & Agrawala ] (suite)
? Quand processus Pj reçoit un message de requête venant 

de Pi
? Pj modifie son nbreq localement : nbreq [i] = nbreq [i] + 1

? Pj mémorise que Pi a demandé à avoir la ressource

? Si Pj possède le jeton et est dans l'état dehors
? Pj envoie le jeton à Pi

? Quand processus récupère le jeton
? Il accède à la ressource (passe dans l'état dedans)

? Quand Pi libère la ressource (passe dans l'état dehors)
? Met à jour le jeton : jeton [i] = jeton [i] + 1

? Parcourt nbreq pour trouver un j tel que : nbreq [j] > jeton [j]
? Une demande d'accès à la ressource de Pj n'a pas encore été 

satisfaite : Pi envoie le jeton à Pj
? Si aucun processus n'attend le jeton : Pi le garde



15

P1

P2 P3

nbreq [0,0,0]

nbreq [0,0,0]

nbreq [0,0,0]

jeton [0,0,0]

P1 veut accéder à la ressource, il envoie 

un message de requête à P2 et P3

Algorithme de [ Ricart & Agrawala ]



16

P1

P2 P3

nbreq [0,0,0]

nbreq [0,0,0]

nbreq [0,0,0]

jeton [0,0,0]

Algorithme de [ Ricart & Agrawala ]



17

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

Algorithme de [ Ricart & Agrawala ]



18

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

P1 accède à la ressource

Algorithme de [ Ricart & Agrawala ]



19

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [1,0,0]

P1 libère la ressource

Algorithme de [ Ricart & Agrawala ]



20

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

P3 veut accéder à la ressource, il envoie 

un message de requête à P1 et P2

P1 accède à la ressource

P1 est toujours dans 

la SC

Algorithme de [ Ricart & Agrawala ]



21

P1

P2 P3

nbreq [1,0,0]

nbreq [0,0,0]

nbreq [1,0,0]

jeton [0,0,0]

P1 accède à la ressource

Algorithme de [ Ricart & Agrawala ]



22

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

jeton [0,0,0]

P1 accède à la ressource

Algorithme de [ Ricart & Agrawala ]



23

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

jeton [1,0,0]

P1 libère la ressource

Trouver un j tel que : nbreq [ j ] > jeton [ j ]

Si aucun processus n’attend le jeton : P1 le garde

Algorithme de [ Ricart & Agrawala ]



24

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

jeton [1,0,0]

Algorithme de [ Ricart & Agrawala ]



25

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

P3 accède à la ressource

jeton [1,0,0]

Algorithme de [ Ricart & Agrawala ]



26

P1

P2 P3

nbreq [1,0,1]

nbreq [0,0,1]

nbreq [1,0,0]

P3 libère la ressource

jeton [1,0,1]

Algorithme de [ Ricart & Agrawala ]



Méthode par jeton

? Algorithme de [ Ricart & Agrawala ], respect des 
propriétés
? Sûreté : seul le processus ayant le jeton accède à la 

ressource

? Vivacité : assurée si les processus distribuent 
équitablement le jeton aux autres processus

? Méthode de choix du processus qui va récupérer le 
jeton lorsque l'on sort de l'état dedans

? Pi parcourt nbreq à partir de l'indice i+1 jusqu'à N puis  
continue de 1 à i-1

? Chaque processus teste les demandes d'accès des autres 
processus en commençant à un processus spécifique et différent 
de la liste

? Évite que par exemple tous les processus avec un petit 
identificateur soient servis systématiquement en premier



Méthodes par permission

? Méthodes par permission
? Un processus doit avoir l'autorisation des autres 

processus pour accéder à la ressource

? Principe général
? Un processus demande l'autorisation à un sous-

ensemble donné de tous les processus

? Deux modes
? Permission individuelle : un processus peut donner sa 

permission à plusieurs autres à la fois

? Permission par arbitre : un processus ne donne sa 
permission qu'à un seul processus à la fois
? Les sous-ensembles sont conçus alors tel qu'au moins un 

processus soit commun à 2 sous-ensembles : il joue le rôle 
d'arbitre



29

? P2 n’est pas en attente d’accès à la ressource : envoie permission à P1 et P3.

? P4 n’est pas en attente d’accès à la ressource : envoie permission à P1 et P3.

? Permission individuelle : un processus peut donner sa permission à plusieurs autres à la
fois.

? Pour accéder à la ressource : P1 lui manque la permission de P3 et P3 lui manque
la permission de P1.

? Le processus prioritaire est celui qui a fait sa demande en premier.

? Si P1 est prioritaire : P3 lui envoie sa permission.

? P1 exécute la section critique (a reçu toute les permissions), envoie ensuite sa
permission à P3 qui a son tour entre en section critique.

R1 = {P2, P3, P4}

P1 demande la permission de P2, P3 et P4

R3 = {P1, P2, P4}

P3 demande la permission de P1, P2 et P4

P1

P2

P3

P4

Permission individuelle (exemple)



Permission individuelle

? Algorithme de [Ricart & Agrawala]
? Permission individuelle

? Chaque processus demande l'autorisation à tous les 
autres (sauf lui par principe)
? Liste des processus à interroger par le processus Pi 

pour accéder à la ressource : Ri = { 1, ... , N } – { i }

? Se base sur une horloge logique (Lamport) pour 
garantir le bon fonctionnement de l'algorithme
? Ordonnancement des demandes d'accès à la ressource

? Si un processus ayant fait une demande d'accès reçoit 
une demande d'un autre processus avec une date 
antérieure à la sienne, il donnera son autorisation à 
l'autre processus
? Et passera donc après lui puisque l'autre processus fera le 

contraire



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement
? Chaque processus gère les variables locales 

suivantes
? Une horloge Hi

? Une variable dernier qui contient la date de la dernière 
demande d'accès la ressource

? L'ensemble Ri

? Un ensemble d'identificateurs de processus dont on 
attend une réponse : attendu

? Un ensemble d'identificateurs de processus dont on 
diffère le renvoi de permission si on est plus prioritaire 
qu'eux : différé

? Initialisation
? Hi = dernier = 0

? différé = ?, attendu = Ri



32

Algorithme de [Ricart & Agrawala], initialisation

P2

H1 = 0

dernier = 0

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Initialisation

P2

H1 = 0

dernier = 0

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Initialisation

P1

P2

P3

P4

H1 = 0

dernier = 0

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Initialisation



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement (suite)
? Si un processus veut accéder à la ressource, il 

exécute
? Hi = Hi + 1

? dernier = Hi

? Envoie une demande de permission avec estampille 
(Hi, i ) à tous les processus dont l'identificateur est 
contenu dans attendu

? Se met alors en attente de réception de permission de 
la part de tous les processus dont l'id est dans attendu

? Quand l'ensemble attendu est vide, le processus a reçu 
la permission de tous les autres processus
? Accède alors à la ressource partagée
? Quand accès terminé
? Envoie une permission à tous les processus dont l'id est 

dans différé

? différé est ensuite réinitialisé (différé = ?)



34

P1

P2

P3 P4

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Exemple : P1 souhaiterait accéder à la SC



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement (suite)
? Quand un processus Pi reçoit une demande de 

permission de la part du processus Pj contenant 
l'estampille (H, j)
? Met à jour Hi : Hi = max (Hi, H)
? Si Pi pas en attente d'accès à la ressource : envoie 

permission à Pj
? Sinon, si Pi est en attente d'accès à la ressource:

? Si Pi est prioritaire : place j dans l'ensemble différé
? On lui enverra la permission quand on aura accédé à la 

ressource
? Si Pj est prioritaire : envoi permission à Pj:
? Pj doit passer avant moi, je lui envoie ma permission

? La priorité est définie selon la datation des demandes d'accès 
à la ressource de chaque processus
? Le processus prioritaire est celui qui a fait sa demande 

en premier
? Ordre des dates : l'ordre << de l'horloge de Lamport :    

( dernier, i ) << ( H, j ) si ( ( dernier < H ) ou ( dernier
= H et i < j ) )



Permission individuelle

? Algorithme de [Ricart & Agrawala], 
fonctionnement (fin)
? Quand processus Pi reçoit une permission de la 
part du processus Pj
? Supprime l'identificateur de Pj de l'ensemble 
attendu : attendu = attendu – { j }

? Respect des propriétés
? Sûreté : vérifiée
? Vivacité : assurée grâce aux datations et aux 
priorités associées

? Inconvénient principal de cet algorithme
? Nombre relativement important de messages 
échangés



37

P2

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 0

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 0

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 0

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Exemple : P1 souhaiterait accéder à la SC

P1

P2

P3 P4



38

P1

P2

P3 P4

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø

H2 = 1

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 1

dernier = 0

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø

H4 = 1

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

Mettre à jour les horloges 

H2, H3 et H4

Exemple : P1 souhaiterait accéder à la SC



Incrémenter H3

dernier = H3

Envoyer (3, 2) à P1, P2 et P4

39

Exemple : P3 souhaiterait accéder à la SC

H4 = 1

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

P1

P2

P3
P4

H1 = 1

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø

H2 = 1

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø
(3, 2)



40

Exemple : P3 souhaiterait accéder à la SC

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu ={P2, P3, P4}

différé = Ø
H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1, P2, P4}

différé = Ø
(3, 2)

Mettre à jour les horloges 

H1, H2 et H4



41

Exemple : envoie des permissions par P2 et P4

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu ={P3}

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1}

différé = Ø

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø
(3, 2)

Permission

H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø



42

Exemple : P1 est prioritaire

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu = Ø

différé = {P3}

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu ={P1}

différé = Ø

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø
(3, 2)

Permission

H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

P1 entre en 

section critique



43

Exemple : P1 libère la ressource

P1

P2

P3 P4

H1 = 2

dernier = 1

R1 ={P2, P3, P4}

attendu = Ø

différé = Ø

H3 = 2

dernier = 2

R3 ={P1, P2, P4}

attendu = Ø

différé = Ø

H4 = 2

dernier = 0

R4 ={P1, P2, P3}

attendu ={P1, P2, P3}

différé = Ø
(3, 2)

Permission

H2 = 2

dernier = 0

R2 ={P1, P3, P4}

attendu ={P1, P3, P4}

différé = Ø

P1 libère la 

ressource

P1 entre en 

section critique

P3 entre en 

section critique



Permission par arbitre

? Permission par arbitre
? Un processus ne donne qu'une permission à la fois
? Il redonnera sa permission à un autre processus quand 

le processus a qui il avait donné précédemment la 
permission lui a indiqué qu'il a fini d'accéder à la 
ressource

? La sûreté est assurée car
? Les sous-ensemble de processus à qui un processus 

demande la permission sont construits tel qu'ils y ait 
toujours au moins un processus commun à 2 sous-
ensemble

? Un processus commun à 2 sous-ensembles est alors 
arbitre
? Comme il ne peut donner sa permission qu'à un seul 

processus, les processus de 2 sous-ensembles ne peuvent pas 
tous donner simultanément la permission à 2 processus 
différents

? C'est donc ce processus commun qui détermine à qui donner 
la ressource



Permission par arbitre

? Algorithme de [ Maekawa ]
? Chaque processus Pi possède un sous-ensemble Ri 

d'identificateurs de processus à qui Pi demandera
l'autorisation d'accéder à la ressource

? ?i,j ? [ 1..N ] : Ri ? Rj ? ?
? Deux sous-ensembles de 2 processus différents ont 

obligatoirement au moins un élément en commun (le ou les 
arbitres)

? Cela rend donc inutile le besoin de demander la permission à 
tous les processus, d'où les sous-ensembles Ri ne contenant 
pas tous les processus

? ?i : | Ri | = K
? Pour une raison d'équité, les sous-ensembles ont la même 

taille pour tous les processus

? ?i : i est contenu dans D sous-ensembles
? Chaque processus joue autant de fois le rôle d'arbitre qu'un 

autre processus



Permission par arbitre

? Algorithme de [ Maekawa] (suite)
? Solution optimale en nombre de permissions à 

demander et de messages échangés

? Fonctionnement de l'algorithme
? Chaque processus possède localement

? Une variable vote permettant de savoir si le processus a 
déjà voté (a déjà donné sa permission à un processus)

? Une file file d'identificateurs de processus qui ont demandé 
la permission mais à qui on ne peut la donner de suit

? Un compteur réponses du nombre de permissions reçues

? Initialisation

? Etat non demandeur, vote = faux et file = ?, réponses = 0



Permission par arbitre

? Algorithme de [Maekawa], fonctionnement 
(suite)
? Quand processus Pi veut accéder à la ressource
? réponses = 0
? Envoie une demande de permission à tous les processus 

de Ri
? Quand réponses = | Ri |, Pi a reçu une permission de 

tous, il accède alors à la ressource
? Après l'accès à la ressource, envoie un message à tous 

les processus de Ri pour les informer que la ressource 
est libre

? Quand processus Pi reçoit une demande de 
permission de la part du processus Pj
? Si Pi a déjà voté (vote = vrai) ou accède actuellement à 

la ressource : place l'identificateur de Pj en queue de file
? Sinon : envoie sa permission à Pj et mémorise qu'il a 

voté 
? vote = vrai



Permission par arbitre

? Algorithme de [Maekawa], fonctionnement 
(suite)
? Quand Pi reçoit de la part du processus Pj un 
message lui indiquant que Pj a libéré la 
ressource

? Si file est vide, alors vote = faux
? Pi a déjà autorisé tous les processus en attente d'une 

permission de sa part

? Si file est non vide
? Retire le premier identificateur (disons k) de la file et 

envoie à Pk une permission d'accès à la ressource

? vote reste à vrai




, _version_=1670762177767669760, _root_=9])
org.apache.solr.common.SolrException: Exception writing document id 9 to the index; possible analysis error: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:244) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:76) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.NestedUpdateProcessorFactory$NestedUpdateProcessor.processAdd(NestedUpdateProcessorFactory.java:79) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:995) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1216) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:700) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:475) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:75) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:92) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:258) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330) ~[?:?]
	at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:424) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:483) ~[?:?]
	at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466) ~[?:?]
	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251]
Caused by: java.lang.IllegalArgumentException: cannot change field "name" from index options=DOCS to inconsistent index options=DOCS_AND_FREQS_AND_POSITIONS
	at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:375) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.FieldInfos$FieldNumbers.setIndexOptions(FieldInfos.java:440) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.initIndexOptions(DefaultIndexingChain.java:700) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.getOrAddField(DefaultIndexingChain.java:663) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:439) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:405) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:494) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1594) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1586) ~[lucene-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 11:58:55]
	at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:970) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:342) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:289) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:236) ~[solr-core-8.0.0.jar:8.0.0 2ae4746365c1ee72a0047ced7610b2096e438979 - jimczi - 2019-03-08 12:06:06]
	... 34 more
2020-06-28 16:49:37.770 INFO  (Thread-15) [   ] o.a.s.h.d.DocBuilder Import completed successfully
2020-06-28 16:49:37.770 INFO  (Thread-15) [   ] o.a.s.u.DirectUpdateHandler2 start commit{_version_=1670762177778155520,optimize=false,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false,prepareCommit=false}
2020-06-28 16:49:37.773 INFO  (Thread-15) [   ] o.a.s.u.SolrIndexWriter Calling setCommitData with IW:org.apache.solr.update.SolrIndexWriter@4bbee05f commitCommandVersion:1670762177778155520
2020-06-28 16:49:37.947 INFO  (Thread-15) [   ] o.a.s.s.SolrIndexSearcher Opening [Searcher@2043bde4[FileCollection] main]
2020-06-28 16:49:37.947 INFO  (searcherExecutor-10-thread-1) [   ] o.a.s.c.QuerySenderListener QuerySenderListener sending requests to Searcher@2043bde4[FileCollection] main{ExitableDirectoryReader(UninvertingDirectoryReader())}
2020-06-28 16:49:37.948 INFO  (searcherExecutor-10-thread-1) [   ] o.a.s.c.QuerySenderListener QuerySenderListener done.
2020-06-28 16:49:37.949 INFO  (Thread-15) [   ] o.a.s.u.DirectUpdateHandler2 end_commit_flush
2020-06-28 16:49:37.955 INFO  (searcherExecutor-10-thread-1) [   ] o.a.s.c.SolrCore [FileCollection] Registered new searcher Searcher@2043bde4[FileCollection] main{ExitableDirectoryReader(UninvertingDirectoryReader())}
2020-06-28 16:49:37.956 INFO  (Thread-15) [   ] o.a.s.h.d.SimplePropertiesWriter Read dataimport.properties
2020-06-28 16:49:37.957 INFO  (Thread-15) [   ] o.a.s.h.d.SimplePropertiesWriter Wrote last indexed time to dataimport.properties
2020-06-28 16:49:37.957 INFO  (Thread-15) [   ] o.a.s.h.d.DocBuilder Time taken = 0:0:2.429
2020-06-28 16:49:37.957 INFO  (Thread-15) [   ] o.a.s.u.p.LogUpdateProcessorFactory [FileCollection]  webapp=/solr path=/dataimport params={command=full-import} status=0 QTime=2{deleteByQuery=*:* (-1670762175439831040),commit=} 0 2442
2020-06-28 16:49:41.488 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362981354} status=0 QTime=0
2020-06-28 16:49:41.529 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362981472} status=0 QTime=0
2020-06-28 16:49:41.539 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362981472} status=0 QTime=1
2020-06-28 16:49:41.543 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362981355&ts=1593362981355} status=503 QTime=0
2020-06-28 16:49:41.624 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362981472} status=0 QTime=80
2020-06-28 16:49:41.624 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362981355} status=0 QTime=134
2020-06-28 16:49:42.752 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362982653} status=0 QTime=2
2020-06-28 16:49:42.753 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362982736} status=0 QTime=0
2020-06-28 16:49:42.754 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362982736} status=0 QTime=0
2020-06-28 16:49:42.775 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362982654&ts=1593362982654} status=503 QTime=0
2020-06-28 16:49:42.859 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362982736} status=0 QTime=102
2020-06-28 16:49:42.859 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362982654} status=0 QTime=107
2020-06-28 16:49:43.975 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362983906} status=0 QTime=0
2020-06-28 16:49:43.981 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362983962} status=0 QTime=1
2020-06-28 16:49:43.991 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362983962} status=0 QTime=2
2020-06-28 16:49:43.996 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362983906&ts=1593362983906} status=503 QTime=0
2020-06-28 16:49:44.081 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362983962} status=0 QTime=88
2020-06-28 16:49:44.082 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362983906} status=0 QTime=104
2020-06-28 16:49:47.259 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362983906} status=0 QTime=0
2020-06-28 16:49:47.263 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/mbeans params={cat=QUERY&wt=json&_=1593362987242} status=0 QTime=1
2020-06-28 16:49:47.309 INFO  (qtp349420578-21) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362983906} status=0 QTime=49
2020-06-28 16:49:47.335 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362983906} status=0 QTime=0
2020-06-28 16:49:47.335 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/mbeans params={cat=QUERY&wt=json&_=1593362987242} status=0 QTime=0
2020-06-28 16:49:47.336 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/dataimport params={indent=on&wt=json&command=show-config&_=1593362987242} status=0 QTime=1
2020-06-28 16:49:47.379 INFO  (qtp349420578-20) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362983906} status=0 QTime=43
2020-06-28 16:49:47.383 INFO  (qtp349420578-23) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/dataimport params={indent=on&wt=json&command=status&_=1593362987242} status=0 QTime=0
2020-06-28 16:49:49.889 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362983906&ts=1593362983906} status=503 QTime=0
2020-06-28 16:49:49.893 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362983962} status=0 QTime=3
2020-06-28 16:49:49.907 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362983906} status=0 QTime=0
2020-06-28 16:49:49.923 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362983962} status=0 QTime=0
2020-06-28 16:49:49.990 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362983962} status=0 QTime=95
2020-06-28 16:49:49.990 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362983906} status=0 QTime=72
2020-06-28 16:49:51.641 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593362991574} status=0 QTime=0
2020-06-28 16:49:51.642 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593362991629} status=0 QTime=0
2020-06-28 16:49:51.654 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593362991629} status=0 QTime=1
2020-06-28 16:49:51.657 INFO  (qtp349420578-17) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593362991574&ts=1593362991574} status=503 QTime=0
2020-06-28 16:49:51.748 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593362991629} status=0 QTime=95
2020-06-28 16:49:51.750 INFO  (qtp349420578-23) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593362991574} status=0 QTime=107
2020-06-28 16:50:32.564 INFO  (qtp349420578-14) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/cores params={indexInfo=false&wt=json&_=1593363032440} status=0 QTime=0
2020-06-28 16:50:32.576 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/luke params={numTerms=0&show=index&wt=json&_=1593363032551} status=0 QTime=0
2020-06-28 16:50:32.579 INFO  (qtp349420578-20) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/replication params={wt=json&command=details&_=1593363032551} status=0 QTime=2
2020-06-28 16:50:32.583 INFO  (qtp349420578-14) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/ping params={action=status&wt=json&_=1593363032441&ts=1593363032441} status=503 QTime=0
2020-06-28 16:50:32.697 INFO  (qtp349420578-21) [   x:FileCollection] o.a.s.c.S.Request [FileCollection]  webapp=/solr path=/admin/system params={wt=json&_=1593363032551} status=0 QTime=115
2020-06-28 16:50:32.698 INFO  (qtp349420578-17) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json&_=1593363032441} status=0 QTime=133
2020-06-28 16:50:37.782 INFO  (ShutdownMonitor) [   ] o.e.j.s.AbstractConnector Stopped ServerConnector@182b435b{HTTP/1.1,[http/1.1, h2c]}{0.0.0.0:8983}
2020-06-28 16:50:37.783 INFO  (ShutdownMonitor) [   ] o.e.j.s.session node0 Stopped scavenging
2020-06-28 16:50:37.785 INFO  (ShutdownMonitor) [   ] o.a.s.c.CoreContainer Shutting down CoreContainer instance=2133344792
2020-06-28 16:50:37.787 INFO  (coreCloseExecutor-15-thread-1) [   x:FileCollection] o.a.s.c.SolrCore [FileCollection]  CLOSING SolrCore org.apache.solr.core.SolrCore@6cfd134d
2020-06-28 16:50:37.788 INFO  (coreCloseExecutor-15-thread-1) [   x:FileCollection] o.a.s.m.SolrMetricManager Closing metric reporters for registry=solr.core.FileCollection, tag=6cfd134d
2020-06-28 16:50:37.789 INFO  (coreCloseExecutor-15-thread-1) [   x:FileCollection] o.a.s.m.r.SolrJmxReporter Closing reporter [org.apache.solr.metrics.reporters.SolrJmxReporter@30598ceb: rootName = null, domain = solr.core.FileCollection, service url = null, agent id = null] for registry solr.core.FileCollection / com.codahale.metrics.MetricRegistry@14d16e24
2020-06-28 16:50:37.815 INFO  (ShutdownMonitor) [   ] o.a.s.m.SolrMetricManager Closing metric reporters for registry=solr.node, tag=null
2020-06-28 16:50:37.816 INFO  (ShutdownMonitor) [   ] o.a.s.m.r.SolrJmxReporter Closing reporter [org.apache.solr.metrics.reporters.SolrJmxReporter@3af4e0bf: rootName = null, domain = solr.node, service url = null, agent id = null] for registry solr.node / com.codahale.metrics.MetricRegistry@84e625b
2020-06-28 16:50:37.821 INFO  (ShutdownMonitor) [   ] o.a.s.m.SolrMetricManager Closing metric reporters for registry=solr.jvm, tag=null
2020-06-28 16:50:37.822 INFO  (ShutdownMonitor) [   ] o.a.s.m.r.SolrJmxReporter Closing reporter [org.apache.solr.metrics.reporters.SolrJmxReporter@34abdee4: rootName = null, domain = solr.jvm, service url = null, agent id = null] for registry solr.jvm / com.codahale.metrics.MetricRegistry@7c5adec1
2020-06-28 16:50:37.823 INFO  (ShutdownMonitor) [   ] o.a.s.m.SolrMetricManager Closing metric reporters for registry=solr.jetty, tag=null
2020-06-28 16:50:37.823 INFO  (ShutdownMonitor) [   ] o.a.s.m.r.SolrJmxReporter Closing reporter [org.apache.solr.metrics.reporters.SolrJmxReporter@71a9b4c7: rootName = null, domain = solr.jetty, service url = null, agent id = null] for registry solr.jetty / com.codahale.metrics.MetricRegistry@37622120
2020-06-28 16:50:37.843 INFO  (ShutdownMonitor) [   ] o.e.j.s.h.ContextHandler Stopped o.e.j.w.WebAppContext@610f7aa{/solr,null,UNAVAILABLE}{C:\Users\moham\Desktop\Mini_Projet\Search_Engine_Solr\solr-8.0.0\server/solr-webapp/webapp}
